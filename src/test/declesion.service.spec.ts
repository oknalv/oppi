import { TestBed, inject } from '@angular/core/testing';

import { DeclesionService } from '../app/service/declesion.service';
import { WordInfoService } from '../app/service/word-info.service';
import { Declesion } from '../app/model/declesion';

describe('DeclesionService', () => {
  beforeEach(() => {
    TestBed.configureTestingModule({
      providers: [
        DeclesionService,
        WordInfoService
      ]
    });
  });

  it('should be created', inject([DeclesionService], (service: DeclesionService) => {
    expect(service).toBeTruthy();
  }));

  it('should decline type 1 (valo)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('valo');
    declesions[0].singular.genitive.push('valon');
    declesions[0].singular.partitive.push('valoa');
    declesions[0].singular.nominativeAccusative.push('valo');
    declesions[0].singular.genitiveAccusative.push('valon');
    declesions[0].singular.inessive.push('valossa');
    declesions[0].singular.elative.push('valosta');
    declesions[0].singular.illative.push('valoon');
    declesions[0].singular.adessive.push('valolla');
    declesions[0].singular.ablative.push('valolta');
    declesions[0].singular.allative.push('valolle');
    declesions[0].singular.essive.push('valona');
    declesions[0].singular.translative.push('valoksi');
    declesions[0].singular.abessive.push('valotta');
    declesions[0].plural.nominative.push('valot');
    declesions[0].plural.genitive.push('valojen');
    declesions[0].plural.partitive.push('valoja');
    declesions[0].plural.nominativeAccusative.push('valot');
    declesions[0].plural.inessive.push('valoissa');
    declesions[0].plural.elative.push('valoista');
    declesions[0].plural.illative.push('valoihin');
    declesions[0].plural.adessive.push('valoilla');
    declesions[0].plural.ablative.push('valoilta');
    declesions[0].plural.allative.push('valoille');
    declesions[0].plural.essive.push('valoina');
    declesions[0].plural.translative.push('valoiksi');
    declesions[0].plural.instructive.push('valoin');
    declesions[0].plural.abessive.push('valoitta');
    declesions[0].plural.comitative.push('valoineen');

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('riekko');
    declesions[1].singular.genitive.push('riekon');
    declesions[1].singular.partitive.push('riekkoa');
    declesions[1].singular.nominativeAccusative.push('riekko');
    declesions[1].singular.genitiveAccusative.push('riekon');
    declesions[1].singular.inessive.push('riekossa');
    declesions[1].singular.elative.push('riekosta');
    declesions[1].singular.illative.push('riekkoon');
    declesions[1].singular.adessive.push('riekolla');
    declesions[1].singular.ablative.push('riekolta');
    declesions[1].singular.allative.push('riekolle');
    declesions[1].singular.essive.push('riekkona');
    declesions[1].singular.translative.push('riekoksi');
    declesions[1].singular.abessive.push('riekotta');
    declesions[1].plural.nominative.push('riekot');
    declesions[1].plural.genitive.push('riekkojen');
    declesions[1].plural.partitive.push('riekkoja');
    declesions[1].plural.nominativeAccusative.push('riekot');
    declesions[1].plural.inessive.push('riekoissa');
    declesions[1].plural.elative.push('riekoista');
    declesions[1].plural.illative.push('riekkoihin');
    declesions[1].plural.adessive.push('riekoilla');
    declesions[1].plural.ablative.push('riekoilta');
    declesions[1].plural.allative.push('riekoille');
    declesions[1].plural.essive.push('riekkoina');
    declesions[1].plural.translative.push('riekoiksi');
    declesions[1].plural.instructive.push('riekoin');
    declesions[1].plural.abessive.push('riekoitta');
    declesions[1].plural.comitative.push('riekkoineen');

    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('kippo');
    declesions[2].singular.genitive.push('kipon');
    declesions[2].singular.partitive.push('kippoa');
    declesions[2].singular.nominativeAccusative.push('kippo');
    declesions[2].singular.genitiveAccusative.push('kipon');
    declesions[2].singular.inessive.push('kipossa');
    declesions[2].singular.elative.push('kiposta');
    declesions[2].singular.illative.push('kippoon');
    declesions[2].singular.adessive.push('kipolla');
    declesions[2].singular.ablative.push('kipolta');
    declesions[2].singular.allative.push('kipolle');
    declesions[2].singular.essive.push('kippona');
    declesions[2].singular.translative.push('kipoksi');
    declesions[2].singular.abessive.push('kipotta');
    declesions[2].plural.nominative.push('kipot');
    declesions[2].plural.genitive.push('kippojen');
    declesions[2].plural.partitive.push('kippoja');
    declesions[2].plural.nominativeAccusative.push('kipot');
    declesions[2].plural.inessive.push('kipoissa');
    declesions[2].plural.elative.push('kipoista');
    declesions[2].plural.illative.push('kippoihin');
    declesions[2].plural.adessive.push('kipoilla');
    declesions[2].plural.ablative.push('kipoilta');
    declesions[2].plural.allative.push('kipoille');
    declesions[2].plural.essive.push('kippoina');
    declesions[2].plural.translative.push('kipoiksi');
    declesions[2].plural.instructive.push('kipoin');
    declesions[2].plural.abessive.push('kipoitta');
    declesions[2].plural.comitative.push('kippoineen');

    declesions.push(new Declesion());
    declesions[3].singular.nominative.push('katto');
    declesions[3].singular.genitive.push('katon');
    declesions[3].singular.partitive.push('kattoa');
    declesions[3].singular.nominativeAccusative.push('katto');
    declesions[3].singular.genitiveAccusative.push('katon');
    declesions[3].singular.inessive.push('katossa');
    declesions[3].singular.elative.push('katosta');
    declesions[3].singular.illative.push('kattoon');
    declesions[3].singular.adessive.push('katolla');
    declesions[3].singular.ablative.push('katolta');
    declesions[3].singular.allative.push('katolle');
    declesions[3].singular.essive.push('kattona');
    declesions[3].singular.translative.push('katoksi');
    declesions[3].singular.abessive.push('katotta');
    declesions[3].plural.nominative.push('katot');
    declesions[3].plural.genitive.push('kattojen');
    declesions[3].plural.partitive.push('kattoja');
    declesions[3].plural.nominativeAccusative.push('katot');
    declesions[3].plural.inessive.push('katoissa');
    declesions[3].plural.elative.push('katoista');
    declesions[3].plural.illative.push('kattoihin');
    declesions[3].plural.adessive.push('katoilla');
    declesions[3].plural.ablative.push('katoilta');
    declesions[3].plural.allative.push('katoille');
    declesions[3].plural.essive.push('kattoina');
    declesions[3].plural.translative.push('katoiksi');
    declesions[3].plural.instructive.push('katoin');
    declesions[3].plural.abessive.push('katoitta');
    declesions[3].plural.comitative.push('kattoineen');

    declesions.push(new Declesion());
    declesions[4].singular.nominative.push('jako');
    declesions[4].singular.genitive.push('jaon');
    declesions[4].singular.partitive.push('jakoa');
    declesions[4].singular.nominativeAccusative.push('jako');
    declesions[4].singular.genitiveAccusative.push('jaon');
    declesions[4].singular.inessive.push('jaossa');
    declesions[4].singular.elative.push('jaosta');
    declesions[4].singular.illative.push('jakoon');
    declesions[4].singular.adessive.push('jaolla');
    declesions[4].singular.ablative.push('jaolta');
    declesions[4].singular.allative.push('jaolle');
    declesions[4].singular.essive.push('jakona');
    declesions[4].singular.translative.push('jaoksi');
    declesions[4].singular.abessive.push('jaotta');
    declesions[4].plural.nominative.push('jaot');
    declesions[4].plural.genitive.push('jakojen');
    declesions[4].plural.partitive.push('jakoja');
    declesions[4].plural.nominativeAccusative.push('jaot');
    declesions[4].plural.inessive.push('jaoissa');
    declesions[4].plural.elative.push('jaoista');
    declesions[4].plural.illative.push('jakoihin');
    declesions[4].plural.adessive.push('jaoilla');
    declesions[4].plural.ablative.push('jaoilta');
    declesions[4].plural.allative.push('jaoille');
    declesions[4].plural.essive.push('jakoina');
    declesions[4].plural.translative.push('jaoiksi');
    declesions[4].plural.instructive.push('jaoin');
    declesions[4].plural.abessive.push('jaoitta');
    declesions[4].plural.comitative.push('jakoineen');

    declesions.push(new Declesion());
    declesions[5].singular.nominative.push('orpo');
    declesions[5].singular.genitive.push('orvon');
    declesions[5].singular.partitive.push('orpoa');
    declesions[5].singular.nominativeAccusative.push('orpo');
    declesions[5].singular.genitiveAccusative.push('orvon');
    declesions[5].singular.inessive.push('orvossa');
    declesions[5].singular.elative.push('orvosta');
    declesions[5].singular.illative.push('orpoon');
    declesions[5].singular.adessive.push('orvolla');
    declesions[5].singular.ablative.push('orvolta');
    declesions[5].singular.allative.push('orvolle');
    declesions[5].singular.essive.push('orpona');
    declesions[5].singular.translative.push('orvoksi');
    declesions[5].singular.abessive.push('orvotta');
    declesions[5].plural.nominative.push('orvot');
    declesions[5].plural.genitive.push('orpojen');
    declesions[5].plural.partitive.push('orpoja');
    declesions[5].plural.nominativeAccusative.push('orvot');
    declesions[5].plural.inessive.push('orvoissa');
    declesions[5].plural.elative.push('orvoista');
    declesions[5].plural.illative.push('orpoihin');
    declesions[5].plural.adessive.push('orvoilla');
    declesions[5].plural.ablative.push('orvoilta');
    declesions[5].plural.allative.push('orvoille');
    declesions[5].plural.essive.push('orpoina');
    declesions[5].plural.translative.push('orvoiksi');
    declesions[5].plural.instructive.push('orvoin');
    declesions[5].plural.abessive.push('orvoitta');
    declesions[5].plural.comitative.push('orpoineen');

    declesions.push(new Declesion());
    declesions[6].singular.nominative.push('katu');
    declesions[6].singular.genitive.push('kadun');
    declesions[6].singular.partitive.push('katua');
    declesions[6].singular.nominativeAccusative.push('katu');
    declesions[6].singular.genitiveAccusative.push('kadun');
    declesions[6].singular.inessive.push('kadussa');
    declesions[6].singular.elative.push('kadusta');
    declesions[6].singular.illative.push('katuun');
    declesions[6].singular.adessive.push('kadulla');
    declesions[6].singular.ablative.push('kadulta');
    declesions[6].singular.allative.push('kadulle');
    declesions[6].singular.essive.push('katuna');
    declesions[6].singular.translative.push('kaduksi');
    declesions[6].singular.abessive.push('kadutta');
    declesions[6].plural.nominative.push('kadut');
    declesions[6].plural.genitive.push('katujen');
    declesions[6].plural.partitive.push('katuja');
    declesions[6].plural.nominativeAccusative.push('kadut');
    declesions[6].plural.inessive.push('kaduissa');
    declesions[6].plural.elative.push('kaduista');
    declesions[6].plural.illative.push('katuihin');
    declesions[6].plural.adessive.push('kaduilla');
    declesions[6].plural.ablative.push('kaduilta');
    declesions[6].plural.allative.push('kaduille');
    declesions[6].plural.essive.push('katuina');
    declesions[6].plural.translative.push('kaduiksi');
    declesions[6].plural.instructive.push('kaduin');
    declesions[6].plural.abessive.push('kaduitta');
    declesions[6].plural.comitative.push('katuineen');

    declesions.push(new Declesion());
    declesions[7].singular.nominative.push('sanko');
    declesions[7].singular.genitive.push('sangon');
    declesions[7].singular.partitive.push('sankoa');
    declesions[7].singular.nominativeAccusative.push('sanko');
    declesions[7].singular.genitiveAccusative.push('sangon');
    declesions[7].singular.inessive.push('sangossa');
    declesions[7].singular.elative.push('sangosta');
    declesions[7].singular.illative.push('sankoon');
    declesions[7].singular.adessive.push('sangolla');
    declesions[7].singular.ablative.push('sangolta');
    declesions[7].singular.allative.push('sangolle');
    declesions[7].singular.essive.push('sankona');
    declesions[7].singular.translative.push('sangoksi');
    declesions[7].singular.abessive.push('sangotta');
    declesions[7].plural.nominative.push('sangot');
    declesions[7].plural.genitive.push('sankojen');
    declesions[7].plural.partitive.push('sankoja');
    declesions[7].plural.nominativeAccusative.push('sangot');
    declesions[7].plural.inessive.push('sangoissa');
    declesions[7].plural.elative.push('sangoista');
    declesions[7].plural.illative.push('sankoihin');
    declesions[7].plural.adessive.push('sangoilla');
    declesions[7].plural.ablative.push('sangoilta');
    declesions[7].plural.allative.push('sangoille');
    declesions[7].plural.essive.push('sankoina');
    declesions[7].plural.translative.push('sangoiksi');
    declesions[7].plural.instructive.push('sangoin');
    declesions[7].plural.abessive.push('sangoitta');
    declesions[7].plural.comitative.push('sankoineen');

    declesions.push(new Declesion());
    declesions[8].singular.nominative.push('ampu');
    declesions[8].singular.genitive.push('ampun');
    declesions[8].singular.partitive.push('ampua');
    declesions[8].singular.nominativeAccusative.push('ampu');
    declesions[8].singular.genitiveAccusative.push('ampun');
    declesions[8].singular.inessive.push('ampussa');
    declesions[8].singular.elative.push('ampusta');
    declesions[8].singular.illative.push('ampuun');
    declesions[8].singular.adessive.push('ampulla');
    declesions[8].singular.ablative.push('ampulta');
    declesions[8].singular.allative.push('ampulle');
    declesions[8].singular.essive.push('ampuna');
    declesions[8].singular.translative.push('ampuksi');
    declesions[8].singular.abessive.push('amputta');
    declesions[8].plural.nominative.push('amput');
    declesions[8].plural.genitive.push('ampujen');
    declesions[8].plural.partitive.push('ampuja');
    declesions[8].plural.nominativeAccusative.push('amput');
    declesions[8].plural.inessive.push('ampuissa');
    declesions[8].plural.elative.push('ampuista');
    declesions[8].plural.illative.push('ampuihin');
    declesions[8].plural.adessive.push('ampuilla');
    declesions[8].plural.ablative.push('ampuilta');
    declesions[8].plural.allative.push('ampuille');
    declesions[8].plural.essive.push('ampuina');
    declesions[8].plural.translative.push('ampuiksi');
    declesions[8].plural.instructive.push('ampuin');
    declesions[8].plural.abessive.push('ampuitta');
    declesions[8].plural.comitative.push('ampuineen');

    declesions.push(new Declesion());
    declesions[9].singular.nominative.push('kuultu');
    declesions[9].singular.genitive.push('kuullun');
    declesions[9].singular.partitive.push('kuultua');
    declesions[9].singular.nominativeAccusative.push('kuultu');
    declesions[9].singular.genitiveAccusative.push('kuullun');
    declesions[9].singular.inessive.push('kuullussa');
    declesions[9].singular.elative.push('kuullusta');
    declesions[9].singular.illative.push('kuultuun');
    declesions[9].singular.adessive.push('kuullulla');
    declesions[9].singular.ablative.push('kuullulta');
    declesions[9].singular.allative.push('kuullulle');
    declesions[9].singular.essive.push('kuultuna');
    declesions[9].singular.translative.push('kuulluksi');
    declesions[9].singular.abessive.push('kuullutta');
    declesions[9].plural.nominative.push('kuullut');
    declesions[9].plural.genitive.push('kuultujen');
    declesions[9].plural.partitive.push('kuultuja');
    declesions[9].plural.nominativeAccusative.push('kuullut');
    declesions[9].plural.inessive.push('kuulluissa');
    declesions[9].plural.elative.push('kuulluista');
    declesions[9].plural.illative.push('kuultuihin');
    declesions[9].plural.adessive.push('kuulluilla');
    declesions[9].plural.ablative.push('kuulluilta');
    declesions[9].plural.allative.push('kuulluille');
    declesions[9].plural.essive.push('kuultuina');
    declesions[9].plural.translative.push('kuulluiksi');
    declesions[9].plural.instructive.push('kuulluin');
    declesions[9].plural.abessive.push('kuulluitta');
    declesions[9].plural.comitative.push('kuultuineen');

    declesions.push(new Declesion());
    declesions[10].singular.nominative.push('lento');
    declesions[10].singular.genitive.push('lennon');
    declesions[10].singular.partitive.push('lentoa');
    declesions[10].singular.nominativeAccusative.push('lento');
    declesions[10].singular.genitiveAccusative.push('lennon');
    declesions[10].singular.inessive.push('lennossa');
    declesions[10].singular.elative.push('lennosta');
    declesions[10].singular.illative.push('lentoon');
    declesions[10].singular.adessive.push('lennolla');
    declesions[10].singular.ablative.push('lennolta');
    declesions[10].singular.allative.push('lennolle');
    declesions[10].singular.essive.push('lentona');
    declesions[10].singular.translative.push('lennoksi');
    declesions[10].singular.abessive.push('lennotta');
    declesions[10].plural.nominative.push('lennot');
    declesions[10].plural.genitive.push('lentojen');
    declesions[10].plural.partitive.push('lentoja');
    declesions[10].plural.nominativeAccusative.push('lennot');
    declesions[10].plural.inessive.push('lennoissa');
    declesions[10].plural.elative.push('lennoista');
    declesions[10].plural.illative.push('lentoihin');
    declesions[10].plural.adessive.push('lennoilla');
    declesions[10].plural.ablative.push('lennoilta');
    declesions[10].plural.allative.push('lennoille');
    declesions[10].plural.essive.push('lentoina');
    declesions[10].plural.translative.push('lennoiksi');
    declesions[10].plural.instructive.push('lennoin');
    declesions[10].plural.abessive.push('lennoitta');
    declesions[10].plural.comitative.push('lentoineen');

    declesions.push(new Declesion());
    declesions[11].singular.nominative.push('saarto');
    declesions[11].singular.genitive.push('saarron');
    declesions[11].singular.partitive.push('saartoa');
    declesions[11].singular.nominativeAccusative.push('saarto');
    declesions[11].singular.genitiveAccusative.push('saarron');
    declesions[11].singular.inessive.push('saarrossa');
    declesions[11].singular.elative.push('saarrosta');
    declesions[11].singular.illative.push('saartoon');
    declesions[11].singular.adessive.push('saarrolla');
    declesions[11].singular.ablative.push('saarrolta');
    declesions[11].singular.allative.push('saarrolle');
    declesions[11].singular.essive.push('saartona');
    declesions[11].singular.translative.push('saarroksi');
    declesions[11].singular.abessive.push('saarrotta');
    declesions[11].plural.nominative.push('saarrot');
    declesions[11].plural.genitive.push('saartojen');
    declesions[11].plural.partitive.push('saartoja');
    declesions[11].plural.nominativeAccusative.push('saarrot');
    declesions[11].plural.inessive.push('saarroissa');
    declesions[11].plural.elative.push('saarroista');
    declesions[11].plural.illative.push('saartoihin');
    declesions[11].plural.adessive.push('saarroilla');
    declesions[11].plural.ablative.push('saarroilta');
    declesions[11].plural.allative.push('saarroille');
    declesions[11].plural.essive.push('saartoina');
    declesions[11].plural.translative.push('saarroiksi');
    declesions[11].plural.instructive.push('saarroin');
    declesions[11].plural.abessive.push('saarroitta');
    declesions[11].plural.comitative.push('saartoineen');

    declesions.push(new Declesion());
    declesions[12].singular.nominative.push('hylky');
    declesions[12].singular.genitive.push('hylyn');
    declesions[12].singular.partitive.push('hylkyä');
    declesions[12].singular.nominativeAccusative.push('hylky');
    declesions[12].singular.genitiveAccusative.push('hylyn');
    declesions[12].singular.inessive.push('hylyssä');
    declesions[12].singular.elative.push('hylystä');
    declesions[12].singular.illative.push('hylkyyn');
    declesions[12].singular.adessive.push('hylyllä');
    declesions[12].singular.ablative.push('hylyltä');
    declesions[12].singular.allative.push('hylylle');
    declesions[12].singular.essive.push('hylkynä');
    declesions[12].singular.translative.push('hylyksi');
    declesions[12].singular.abessive.push('hylyttä');
    declesions[12].plural.nominative.push('hylyt');
    declesions[12].plural.genitive.push('hylkyjen');
    declesions[12].plural.partitive.push('hylkyjä');
    declesions[12].plural.nominativeAccusative.push('hylyt');
    declesions[12].plural.inessive.push('hylyissä');
    declesions[12].plural.elative.push('hylyistä');
    declesions[12].plural.illative.push('hylkyihin');
    declesions[12].plural.adessive.push('hylyillä');
    declesions[12].plural.ablative.push('hylyiltä');
    declesions[12].plural.allative.push('hylyille');
    declesions[12].plural.essive.push('hylkyinä');
    declesions[12].plural.translative.push('hylyiksi');
    declesions[12].plural.instructive.push('hylyin');
    declesions[12].plural.abessive.push('hylyittä');
    declesions[12].plural.comitative.push('hylkyineen');
    //alternative
    declesions.push(new Declesion());
    declesions[13].singular.nominative.push('hylky');
    declesions[13].singular.genitive.push('hyljyn');
    declesions[13].singular.partitive.push('hylkyä');
    declesions[13].singular.nominativeAccusative.push('hylky');
    declesions[13].singular.genitiveAccusative.push('hyljyn');
    declesions[13].singular.inessive.push('hyljyssä');
    declesions[13].singular.elative.push('hyljystä');
    declesions[13].singular.illative.push('hylkyyn');
    declesions[13].singular.adessive.push('hyljyllä');
    declesions[13].singular.ablative.push('hyljyltä');
    declesions[13].singular.allative.push('hyljylle');
    declesions[13].singular.essive.push('hylkynä');
    declesions[13].singular.translative.push('hyljyksi');
    declesions[13].singular.abessive.push('hyljyttä');
    declesions[13].plural.nominative.push('hyljyt');
    declesions[13].plural.genitive.push('hylkyjen');
    declesions[13].plural.partitive.push('hylkyjä');
    declesions[13].plural.nominativeAccusative.push('hyljyt');
    declesions[13].plural.inessive.push('hyljyissä');
    declesions[13].plural.elative.push('hyljyistä');
    declesions[13].plural.illative.push('hylkyihin');
    declesions[13].plural.adessive.push('hyljyillä');
    declesions[13].plural.ablative.push('hyljyiltä');
    declesions[13].plural.allative.push('hyljyille');
    declesions[13].plural.essive.push('hylkyinä');
    declesions[13].plural.translative.push('hyljyiksi');
    declesions[13].plural.instructive.push('hyljyin');
    declesions[13].plural.abessive.push('hyljyittä');
    declesions[13].plural.comitative.push('hylkyineen');

    declesions.push(new Declesion());
    declesions[14].singular.nominative.push('luku');
    declesions[14].singular.genitive.push('luvun');
    declesions[14].singular.partitive.push('lukua');
    declesions[14].singular.nominativeAccusative.push('luku');
    declesions[14].singular.genitiveAccusative.push('luvun');
    declesions[14].singular.inessive.push('luvussa');
    declesions[14].singular.elative.push('luvusta');
    declesions[14].singular.illative.push('lukuun');
    declesions[14].singular.adessive.push('luvulla');
    declesions[14].singular.ablative.push('luvulta');
    declesions[14].singular.allative.push('luvulle');
    declesions[14].singular.essive.push('lukuna');
    declesions[14].singular.translative.push('luvuksi');
    declesions[14].singular.abessive.push('luvutta');
    declesions[14].plural.nominative.push('luvut');
    declesions[14].plural.genitive.push('lukujen');
    declesions[14].plural.partitive.push('lukuja');
    declesions[14].plural.nominativeAccusative.push('luvut');
    declesions[14].plural.inessive.push('luvuissa');
    declesions[14].plural.elative.push('luvuista');
    declesions[14].plural.illative.push('lukuihin');
    declesions[14].plural.adessive.push('luvuilla');
    declesions[14].plural.ablative.push('luvuilta');
    declesions[14].plural.allative.push('luvuille');
    declesions[14].plural.essive.push('lukuina');
    declesions[14].plural.translative.push('luvuiksi');
    declesions[14].plural.instructive.push('luvuin');
    declesions[14].plural.abessive.push('luvuitta');
    declesions[14].plural.comitative.push('lukuineen');

    declesions.push(new Declesion());
    declesions[15].singular.nominative.push('sampo');
    declesions[15].singular.genitive.push('sammon');
    declesions[15].singular.partitive.push('sampoa');
    declesions[15].singular.nominativeAccusative.push('sampo');
    declesions[15].singular.genitiveAccusative.push('sammon');
    declesions[15].singular.inessive.push('sammossa');
    declesions[15].singular.elative.push('sammosta');
    declesions[15].singular.illative.push('sampoon');
    declesions[15].singular.adessive.push('sammolla');
    declesions[15].singular.ablative.push('sammolta');
    declesions[15].singular.allative.push('sammolle');
    declesions[15].singular.essive.push('sampona');
    declesions[15].singular.translative.push('sammoksi');
    declesions[15].singular.abessive.push('sammotta');
    declesions[15].plural.nominative.push('sammot');
    declesions[15].plural.genitive.push('sampojen');
    declesions[15].plural.partitive.push('sampoja');
    declesions[15].plural.nominativeAccusative.push('sammot');
    declesions[15].plural.inessive.push('sammoissa');
    declesions[15].plural.elative.push('sammoista');
    declesions[15].plural.illative.push('sampoihin');
    declesions[15].plural.adessive.push('sammoilla');
    declesions[15].plural.ablative.push('sammoilta');
    declesions[15].plural.allative.push('sammoille');
    declesions[15].plural.essive.push('sampoina');
    declesions[15].plural.translative.push('sammoiksi');
    declesions[15].plural.instructive.push('sammoin');
    declesions[15].plural.abessive.push('sammoitta');
    declesions[15].plural.comitative.push('sampoineen');

    declesions.push(new Declesion());
    declesions[16].singular.nominative.push('lyhennetty');
    declesions[16].singular.genitive.push('lyhenneyyn');
    declesions[16].singular.partitive.push('lyhennettyä');
    declesions[16].singular.nominativeAccusative.push('lyhennetty');
    declesions[16].singular.genitiveAccusative.push('lyhenneyyn');
    declesions[16].singular.inessive.push('lyhenneyyssä');
    declesions[16].singular.elative.push('lyhenneyystä');
    declesions[16].singular.illative.push('lyhennettyyn');
    declesions[16].singular.adessive.push('lyhenneyyllä');
    declesions[16].singular.ablative.push('lyhenneyyltä');
    declesions[16].singular.allative.push('lyhenneyylle');
    declesions[16].singular.essive.push('lyhennettynä');
    declesions[16].singular.translative.push('lyhenneyyksi');
    declesions[16].singular.abessive.push('lyhenneyyttä');
    declesions[16].plural.nominative.push('lyhenneyyt');
    declesions[16].plural.genitive.push('lyhennettyjen');
    declesions[16].plural.partitive.push('lyhennettyjä');
    declesions[16].plural.nominativeAccusative.push('lyhenneyyt');
    declesions[16].plural.inessive.push('lyhenneyyissä');
    declesions[16].plural.elative.push('lyhenneyyistä');
    declesions[16].plural.illative.push('lyhennettyihin');
    declesions[16].plural.adessive.push('lyhenneyyillä');
    declesions[16].plural.ablative.push('lyhenneyyiltä');
    declesions[16].plural.allative.push('lyhenneyyille');
    declesions[16].plural.essive.push('lyhennettyinä');
    declesions[16].plural.translative.push('lyhenneyyiksi');
    declesions[16].plural.instructive.push('lyhenneyyin');
    declesions[16].plural.abessive.push('lyhenneyyittä');
    declesions[16].plural.comitative.push('lyhennettyineen');
    
    service.decline('valo').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('riekko').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('kippo').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
    service.decline('katto').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[3]]);
    });
    service.decline('jako').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[4]]);
    });
    service.decline('orpo').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[5]]);
    });
    service.decline('katu').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[6]]);
    });
    service.decline('sanko').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[7]]);
    });
    service.decline('ampu').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[8]]);
    });
    service.decline('kuultu').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[9]]);
    });
    service.decline('lento').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[10]]);
    });
    service.decline('saarto').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[11]]);
    });
    service.decline('hylky').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[12], declesions[13]]);
    });
    service.decline('luku').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[14]]);
    });
    service.decline('sampo').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[15]]);
    });
    service.decline('lyhennetty').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[16]]);
    });
  }));

  it('should decline type 2 (palvelu)', inject([DeclesionService], (service: DeclesionService) => {
    let declesion = new Declesion();
    declesion.singular.nominative.push('palvelu');
    declesion.singular.genitive.push('palvelun');
    declesion.singular.partitive.push('palvelua');
    declesion.singular.nominativeAccusative.push('palvelu');
    declesion.singular.genitiveAccusative.push('palvelun');
    declesion.singular.inessive.push('palvelussa');
    declesion.singular.elative.push('palvelusta');
    declesion.singular.illative.push('palveluun');
    declesion.singular.adessive.push('palvelulla');
    declesion.singular.ablative.push('palvelulta');
    declesion.singular.allative.push('palvelulle');
    declesion.singular.essive.push('palveluna');
    declesion.singular.translative.push('palveluksi');
    declesion.singular.abessive.push('palvelutta');
    declesion.plural.nominative.push('palvelut');
    declesion.plural.genitive = ['palvelujen', 'palveluiden', 'palveluitten'].sort();
    declesion.plural.partitive = ['palveluja', 'palveluita'].sort();
    declesion.plural.nominativeAccusative.push('palvelut');
    declesion.plural.inessive.push('palveluissa');
    declesion.plural.elative.push('palveluista');
    declesion.plural.illative.push('palveluihin');
    declesion.plural.adessive.push('palveluilla');
    declesion.plural.ablative.push('palveluilta');
    declesion.plural.allative.push('palveluille');
    declesion.plural.essive.push('palveluina');
    declesion.plural.translative.push('palveluiksi');
    declesion.plural.instructive.push('palveluin');
    declesion.plural.abessive.push('palveluitta');
    declesion.plural.comitative.push('palveluineen');

    service.decline('palvelu').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesion]);
    });

  }));

  it('should decline type 3 (valtio)', inject([DeclesionService], (service: DeclesionService) => {
    let declesion = new Declesion();
    declesion.singular.nominative.push('valtio');
    declesion.singular.genitive.push('valtion');
    declesion.singular.partitive.push('valtiota');
    declesion.singular.nominativeAccusative.push('valtio');
    declesion.singular.genitiveAccusative.push('valtion');
    declesion.singular.inessive.push('valtiossa');
    declesion.singular.elative.push('valtiosta');
    declesion.singular.illative.push('valtioon');
    declesion.singular.adessive.push('valtiolla');
    declesion.singular.ablative.push('valtiolta');
    declesion.singular.allative.push('valtiolle');
    declesion.singular.essive.push('valtiona');
    declesion.singular.translative.push('valtioksi');
    declesion.singular.abessive.push('valtiotta');
    declesion.plural.nominative.push('valtiot');
    declesion.plural.genitive = ['valtioiden', 'valtioitten'].sort();
    declesion.plural.partitive.push('valtioita');
    declesion.plural.nominativeAccusative.push('valtiot');
    declesion.plural.inessive.push('valtioissa');
    declesion.plural.elative.push('valtioista');
    declesion.plural.illative.push('valtioihin');
    declesion.plural.adessive.push('valtioilla');
    declesion.plural.ablative.push('valtioilta');
    declesion.plural.allative.push('valtioille');
    declesion.plural.essive.push('valtioina');
    declesion.plural.translative.push('valtioiksi');
    declesion.plural.instructive.push('valtioin');
    declesion.plural.abessive.push('valtioitta');
    declesion.plural.comitative.push('valtioineen');

    service.decline('valtio').subscribe((serviceDeclesions) => { 
      expect(serviceDeclesions).toEqual([declesion]);
    });

  }));

  it('should decline type 4 (laatikko)', inject([DeclesionService], (service: DeclesionService) => {
    let declesion = new Declesion();
    declesion.singular.nominative.push('laatikko');
    declesion.singular.genitive.push('laatikon');
    declesion.singular.partitive.push('laatikkoa');
    declesion.singular.nominativeAccusative.push('laatikko');
    declesion.singular.genitiveAccusative.push('laatikon');
    declesion.singular.inessive.push('laatikossa');
    declesion.singular.elative.push('laatikosta');
    declesion.singular.illative.push('laatikkoon');
    declesion.singular.adessive.push('laatikolla');
    declesion.singular.ablative.push('laatikolta');
    declesion.singular.allative.push('laatikolle');
    declesion.singular.essive.push('laatikkona');
    declesion.singular.translative.push('laatikoksi');
    declesion.singular.abessive.push('laatikotta');
    declesion.plural.nominative.push('laatikot');
    declesion.plural.genitive = ['laatikkojen', 'laatikoiden', 'laatikoitten'].sort();
    declesion.plural.partitive = ['laatikkoja', 'laatikoita'].sort();
    declesion.plural.nominativeAccusative.push('laatikot');
    declesion.plural.inessive.push('laatikoissa');
    declesion.plural.elative.push('laatikoista');
    declesion.plural.illative = ['laatikkoihin', 'laatikoihin'].sort();
    declesion.plural.adessive.push('laatikoilla');
    declesion.plural.ablative.push('laatikoilta');
    declesion.plural.allative.push('laatikoille');
    declesion.plural.essive.push('laatikkoina');
    declesion.plural.translative.push('laatikoiksi');
    declesion.plural.instructive.push('laatikoin');
    declesion.plural.abessive.push('laatikoitta');
    declesion.plural.comitative.push('laatikkoineen');

    service.decline('laatikko').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesion]);
    });

  }));

  it('should decline type 5 (risti)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('risti');
    declesions[0].singular.genitive.push('ristin');
    declesions[0].singular.partitive.push('ristiä');
    declesions[0].singular.nominativeAccusative.push('risti');
    declesions[0].singular.genitiveAccusative.push('ristin');
    declesions[0].singular.inessive.push('ristissä');
    declesions[0].singular.elative.push('rististä');
    declesions[0].singular.illative.push('ristiin');
    declesions[0].singular.adessive.push('ristillä');
    declesions[0].singular.ablative.push('ristiltä');
    declesions[0].singular.allative.push('ristille');
    declesions[0].singular.essive.push('ristinä');
    declesions[0].singular.translative.push('ristiksi');
    declesions[0].singular.abessive.push('ristittä');
    declesions[0].plural.nominative.push('ristit');
    declesions[0].plural.genitive.push('ristien');
    declesions[0].plural.partitive.push('ristejä');
    declesions[0].plural.nominativeAccusative.push('ristit');
    declesions[0].plural.inessive.push('risteissä');
    declesions[0].plural.elative.push('risteistä');
    declesions[0].plural.illative.push('risteihin');
    declesions[0].plural.adessive.push('risteillä');
    declesions[0].plural.ablative.push('risteiltä');
    declesions[0].plural.allative.push('risteille');
    declesions[0].plural.essive.push('risteinä');
    declesions[0].plural.translative.push('risteiksi');
    declesions[0].plural.instructive.push('ristein');
    declesions[0].plural.abessive.push('risteittä');
    declesions[0].plural.comitative.push('risteineen');

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('tukki');
    declesions[1].singular.genitive.push('tukin');
    declesions[1].singular.partitive.push('tukkia');
    declesions[1].singular.nominativeAccusative.push('tukki');
    declesions[1].singular.genitiveAccusative.push('tukin');
    declesions[1].singular.inessive.push('tukissa');
    declesions[1].singular.elative.push('tukista');
    declesions[1].singular.illative.push('tukkiin');
    declesions[1].singular.adessive.push('tukilla');
    declesions[1].singular.ablative.push('tukilta');
    declesions[1].singular.allative.push('tukille');
    declesions[1].singular.essive.push('tukkina');
    declesions[1].singular.translative.push('tukiksi');
    declesions[1].singular.abessive.push('tukitta');
    declesions[1].plural.nominative.push('tukit');
    declesions[1].plural.genitive.push('tukkien');
    declesions[1].plural.partitive.push('tukkeja');
    declesions[1].plural.nominativeAccusative.push('tukit');
    declesions[1].plural.inessive.push('tukeissa');
    declesions[1].plural.elative.push('tukeista');
    declesions[1].plural.illative.push('tukkeihin');
    declesions[1].plural.adessive.push('tukeilla');
    declesions[1].plural.ablative.push('tukeilta');
    declesions[1].plural.allative.push('tukeille');
    declesions[1].plural.essive.push('tukkeina');
    declesions[1].plural.translative.push('tukeiksi');
    declesions[1].plural.instructive.push('tukein');
    declesions[1].plural.abessive.push('tukeitta');
    declesions[1].plural.comitative.push('tukkeineen');

    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('nuppi');
    declesions[2].singular.genitive.push('nupin');
    declesions[2].singular.partitive.push('nuppia');
    declesions[2].singular.nominativeAccusative.push('nuppi');
    declesions[2].singular.genitiveAccusative.push('nupin');
    declesions[2].singular.inessive.push('nupissa');
    declesions[2].singular.elative.push('nupista');
    declesions[2].singular.illative.push('nuppiin');
    declesions[2].singular.adessive.push('nupilla');
    declesions[2].singular.ablative.push('nupilta');
    declesions[2].singular.allative.push('nupille');
    declesions[2].singular.essive.push('nuppina');
    declesions[2].singular.translative.push('nupiksi');
    declesions[2].singular.abessive.push('nupitta');
    declesions[2].plural.nominative.push('nupit');
    declesions[2].plural.genitive.push('nuppien');
    declesions[2].plural.partitive.push('nuppeja');
    declesions[2].plural.nominativeAccusative.push('nupit');
    declesions[2].plural.inessive.push('nupeissa');
    declesions[2].plural.elative.push('nupeista');
    declesions[2].plural.illative.push('nuppeihin');
    declesions[2].plural.adessive.push('nupeilla');
    declesions[2].plural.ablative.push('nupeilta');
    declesions[2].plural.allative.push('nupeille');
    declesions[2].plural.essive.push('nuppeina');
    declesions[2].plural.translative.push('nupeiksi');
    declesions[2].plural.instructive.push('nupein');
    declesions[2].plural.abessive.push('nupeitta');
    declesions[2].plural.comitative.push('nuppeineen');

    declesions.push(new Declesion());
    declesions[3].singular.nominative.push('niitti');
    declesions[3].singular.genitive.push('niitin');
    declesions[3].singular.partitive.push('niittiä');
    declesions[3].singular.nominativeAccusative.push('niitti');
    declesions[3].singular.genitiveAccusative.push('niitin');
    declesions[3].singular.inessive.push('niitissä');
    declesions[3].singular.elative.push('niitistä');
    declesions[3].singular.illative.push('niittiin');
    declesions[3].singular.adessive.push('niitillä');
    declesions[3].singular.ablative.push('niitiltä');
    declesions[3].singular.allative.push('niitille');
    declesions[3].singular.essive.push('niittinä');
    declesions[3].singular.translative.push('niitiksi');
    declesions[3].singular.abessive.push('niitittä');
    declesions[3].plural.nominative.push('niitit');
    declesions[3].plural.genitive.push('niittien');
    declesions[3].plural.partitive.push('niittejä');
    declesions[3].plural.nominativeAccusative.push('niitit');
    declesions[3].plural.inessive.push('niiteissä');
    declesions[3].plural.elative.push('niiteistä');
    declesions[3].plural.illative.push('niitteihin');
    declesions[3].plural.adessive.push('niiteillä');
    declesions[3].plural.ablative.push('niiteiltä');
    declesions[3].plural.allative.push('niiteille');
    declesions[3].plural.essive.push('niitteinä');
    declesions[3].plural.translative.push('niiteiksi');
    declesions[3].plural.instructive.push('niitein');
    declesions[3].plural.abessive.push('niiteittä');
    declesions[3].plural.comitative.push('niitteineen');

    declesions.push(new Declesion());
    declesions[4].singular.nominative.push('hupi');
    declesions[4].singular.genitive.push('huvin');
    declesions[4].singular.partitive.push('hupia');
    declesions[4].singular.nominativeAccusative.push('hupi');
    declesions[4].singular.genitiveAccusative.push('huvin');
    declesions[4].singular.inessive.push('huvissa');
    declesions[4].singular.elative.push('huvista');
    declesions[4].singular.illative.push('hupiin');
    declesions[4].singular.adessive.push('huvilla');
    declesions[4].singular.ablative.push('huvilta');
    declesions[4].singular.allative.push('huville');
    declesions[4].singular.essive.push('hupina');
    declesions[4].singular.translative.push('huviksi');
    declesions[4].singular.abessive.push('huvitta');
    declesions[4].plural.nominative.push('huvit');
    declesions[4].plural.genitive.push('hupien');
    declesions[4].plural.partitive.push('hupeja');
    declesions[4].plural.nominativeAccusative.push('huvit');
    declesions[4].plural.inessive.push('huveissa');
    declesions[4].plural.elative.push('huveista');
    declesions[4].plural.illative.push('hupeihin');
    declesions[4].plural.adessive.push('huveilla');
    declesions[4].plural.ablative.push('huveilta');
    declesions[4].plural.allative.push('huveille');
    declesions[4].plural.essive.push('hupeina');
    declesions[4].plural.translative.push('huveiksi');
    declesions[4].plural.instructive.push('huvein');
    declesions[4].plural.abessive.push('huveitta');
    declesions[4].plural.comitative.push('hupeineen');

    declesions.push(new Declesion());
    declesions[5].singular.nominative.push('koti');
    declesions[5].singular.genitive.push('kodin');
    declesions[5].singular.partitive.push('kotia');
    declesions[5].singular.nominativeAccusative.push('koti');
    declesions[5].singular.genitiveAccusative.push('kodin');
    declesions[5].singular.inessive.push('kodissa');
    declesions[5].singular.elative.push('kodista');
    declesions[5].singular.illative.push('kotiin');
    declesions[5].singular.adessive.push('kodilla');
    declesions[5].singular.ablative.push('kodilta');
    declesions[5].singular.allative.push('kodille');
    declesions[5].singular.essive.push('kotina');
    declesions[5].singular.translative.push('kodiksi');
    declesions[5].singular.abessive.push('koditta');
    declesions[5].plural.nominative.push('kodit');
    declesions[5].plural.genitive.push('kotien');
    declesions[5].plural.partitive.push('koteja');
    declesions[5].plural.nominativeAccusative.push('kodit');
    declesions[5].plural.inessive.push('kodeissa');
    declesions[5].plural.elative.push('kodeista');
    declesions[5].plural.illative.push('koteihin');
    declesions[5].plural.adessive.push('kodeilla');
    declesions[5].plural.ablative.push('kodeilta');
    declesions[5].plural.allative.push('kodeille');
    declesions[5].plural.essive.push('koteina');
    declesions[5].plural.translative.push('kodeiksi');
    declesions[5].plural.instructive.push('kodein');
    declesions[5].plural.abessive.push('kodeitta');
    declesions[5].plural.comitative.push('koteineen');

    declesions.push(new Declesion());
    declesions[6].singular.nominative.push('vanki');
    declesions[6].singular.genitive.push('vangin');
    declesions[6].singular.partitive.push('vankia');
    declesions[6].singular.nominativeAccusative.push('vanki');
    declesions[6].singular.genitiveAccusative.push('vangin');
    declesions[6].singular.inessive.push('vangissa');
    declesions[6].singular.elative.push('vangista');
    declesions[6].singular.illative.push('vankiin');
    declesions[6].singular.adessive.push('vangilla');
    declesions[6].singular.ablative.push('vangilta');
    declesions[6].singular.allative.push('vangille');
    declesions[6].singular.essive.push('vankina');
    declesions[6].singular.translative.push('vangiksi');
    declesions[6].singular.abessive.push('vangitta');
    declesions[6].plural.nominative.push('vangit');
    declesions[6].plural.genitive.push('vankien');
    declesions[6].plural.partitive.push('vankeja');
    declesions[6].plural.nominativeAccusative.push('vangit');
    declesions[6].plural.inessive.push('vangeissa');
    declesions[6].plural.elative.push('vangeista');
    declesions[6].plural.illative.push('vankeihin');
    declesions[6].plural.adessive.push('vangeilla');
    declesions[6].plural.ablative.push('vangeilta');
    declesions[6].plural.allative.push('vangeille');
    declesions[6].plural.essive.push('vankeina');
    declesions[6].plural.translative.push('vangeiksi');
    declesions[6].plural.instructive.push('vangein');
    declesions[6].plural.abessive.push('vangeitta');
    declesions[6].plural.comitative.push('vankeineen');

    declesions.push(new Declesion());
    declesions[7].singular.nominative.push('pelti');
    declesions[7].singular.genitive.push('pellin');
    declesions[7].singular.partitive.push('peltiä');
    declesions[7].singular.nominativeAccusative.push('pelti');
    declesions[7].singular.genitiveAccusative.push('pellin');
    declesions[7].singular.inessive.push('pellissä');
    declesions[7].singular.elative.push('pellistä');
    declesions[7].singular.illative.push('peltiin');
    declesions[7].singular.adessive.push('pellillä');
    declesions[7].singular.ablative.push('pelliltä');
    declesions[7].singular.allative.push('pellille');
    declesions[7].singular.essive.push('peltinä');
    declesions[7].singular.translative.push('pelliksi');
    declesions[7].singular.abessive.push('pellittä');
    declesions[7].plural.nominative.push('pellit');
    declesions[7].plural.genitive.push('peltien');
    declesions[7].plural.partitive.push('peltejä');
    declesions[7].plural.nominativeAccusative.push('pellit');
    declesions[7].plural.inessive.push('pelleissä');
    declesions[7].plural.elative.push('pelleistä');
    declesions[7].plural.illative.push('pelteihin');
    declesions[7].plural.adessive.push('pelleillä');
    declesions[7].plural.ablative.push('pelleiltä');
    declesions[7].plural.allative.push('pelleille');
    declesions[7].plural.essive.push('pelteinä');
    declesions[7].plural.translative.push('pelleiksi');
    declesions[7].plural.instructive.push('pellein');
    declesions[7].plural.abessive.push('pelleittä');
    declesions[7].plural.comitative.push('pelteineen');

    declesions.push(new Declesion());
    declesions[8].singular.nominative.push('tunti');
    declesions[8].singular.genitive.push('tunnin');
    declesions[8].singular.partitive.push('tuntia');
    declesions[8].singular.nominativeAccusative.push('tunti');
    declesions[8].singular.genitiveAccusative.push('tunnin');
    declesions[8].singular.inessive.push('tunnissa');
    declesions[8].singular.elative.push('tunnista');
    declesions[8].singular.illative.push('tuntiin');
    declesions[8].singular.adessive.push('tunnilla');
    declesions[8].singular.ablative.push('tunnilta');
    declesions[8].singular.allative.push('tunnille');
    declesions[8].singular.essive.push('tuntina');
    declesions[8].singular.translative.push('tunniksi');
    declesions[8].singular.abessive.push('tunnitta');
    declesions[8].plural.nominative.push('tunnit');
    declesions[8].plural.genitive.push('tuntien');
    declesions[8].plural.partitive.push('tunteja');
    declesions[8].plural.nominativeAccusative.push('tunnit');
    declesions[8].plural.inessive.push('tunneissa');
    declesions[8].plural.elative.push('tunneista');
    declesions[8].plural.illative.push('tunteihin');
    declesions[8].plural.adessive.push('tunneilla');
    declesions[8].plural.ablative.push('tunneilta');
    declesions[8].plural.allative.push('tunneille');
    declesions[8].plural.essive.push('tunteina');
    declesions[8].plural.translative.push('tunneiksi');
    declesions[8].plural.instructive.push('tunnein');
    declesions[8].plural.abessive.push('tunneitta');
    declesions[8].plural.comitative.push('tunteineen');

    declesions.push(new Declesion());
    declesions[9].singular.nominative.push('kaarti');
    declesions[9].singular.genitive.push('kaartin');
    declesions[9].singular.partitive.push('kaartia');
    declesions[9].singular.nominativeAccusative.push('kaarti');
    declesions[9].singular.genitiveAccusative.push('kaartin');
    declesions[9].singular.inessive.push('kaartissa');
    declesions[9].singular.elative.push('kaartista');
    declesions[9].singular.illative.push('kaartiin');
    declesions[9].singular.adessive.push('kaartilla');
    declesions[9].singular.ablative.push('kaartilta');
    declesions[9].singular.allative.push('kaartille');
    declesions[9].singular.essive.push('kaartina');
    declesions[9].singular.translative.push('kaartiksi');
    declesions[9].singular.abessive.push('kaartitta');
    declesions[9].plural.nominative.push('kaartit');
    declesions[9].plural.genitive.push('kaartien');
    declesions[9].plural.partitive.push('kaarteja');
    declesions[9].plural.nominativeAccusative.push('kaartit');
    declesions[9].plural.inessive.push('kaarteissa');
    declesions[9].plural.elative.push('kaarteista');
    declesions[9].plural.illative.push('kaarteihin');
    declesions[9].plural.adessive.push('kaarteilla');
    declesions[9].plural.ablative.push('kaarteilta');
    declesions[9].plural.allative.push('kaarteille');
    declesions[9].plural.essive.push('kaarteina');
    declesions[9].plural.translative.push('kaarteiksi');
    declesions[9].plural.instructive.push('kaartein');
    declesions[9].plural.abessive.push('kaarteitta');
    declesions[9].plural.comitative.push('kaarteineen');

    declesions.push(new Declesion());
    declesions[10].singular.nominative.push('kalsium');
    declesions[10].singular.genitive.push('kalsiumin');
    declesions[10].singular.partitive.push('kalsiumia');
    declesions[10].singular.nominativeAccusative.push('kalsium');
    declesions[10].singular.genitiveAccusative.push('kalsiumin');
    declesions[10].singular.inessive.push('kalsiumissa');
    declesions[10].singular.elative.push('kalsiumista');
    declesions[10].singular.illative.push('kalsiumiin');
    declesions[10].singular.adessive.push('kalsiumilla');
    declesions[10].singular.ablative.push('kalsiumilta');
    declesions[10].singular.allative.push('kalsiumille');
    declesions[10].singular.essive.push('kalsiumina');
    declesions[10].singular.translative.push('kalsiumiksi');
    declesions[10].singular.abessive.push('kalsiumitta');
    declesions[10].plural.nominative.push('kalsiumit');
    declesions[10].plural.genitive.push('kalsiumien');
    declesions[10].plural.partitive.push('kalsiumeja');
    declesions[10].plural.nominativeAccusative.push('kalsiumit');
    declesions[10].plural.inessive.push('kalsiumeissa');
    declesions[10].plural.elative.push('kalsiumeista');
    declesions[10].plural.illative.push('kalsiumeihin');
    declesions[10].plural.adessive.push('kalsiumeilla');
    declesions[10].plural.ablative.push('kalsiumeilta');
    declesions[10].plural.allative.push('kalsiumeille');
    declesions[10].plural.essive.push('kalsiumeina');
    declesions[10].plural.translative.push('kalsiumeiksi');
    declesions[10].plural.instructive.push('kalsiumein');
    declesions[10].plural.abessive.push('kalsiumeitta');
    declesions[10].plural.comitative.push('kalsiumeineen');

    declesions.push(new Declesion());
    declesions[11].singular.nominative.push('preesens');
    declesions[11].singular.genitive.push('preesensin');
    declesions[11].singular.partitive.push('preesensiä');
    declesions[11].singular.nominativeAccusative.push('preesens');
    declesions[11].singular.genitiveAccusative.push('preesensin');
    declesions[11].singular.inessive.push('preesensissä');
    declesions[11].singular.elative.push('preesensistä');
    declesions[11].singular.illative.push('preesensiin');
    declesions[11].singular.adessive.push('preesensillä');
    declesions[11].singular.ablative.push('preesensiltä');
    declesions[11].singular.allative.push('preesensille');
    declesions[11].singular.essive.push('preesensinä');
    declesions[11].singular.translative.push('preesensiksi');
    declesions[11].singular.abessive.push('preesensittä');
    declesions[11].plural.nominative.push('preesensit');
    declesions[11].plural.genitive.push('preesensien');
    declesions[11].plural.partitive.push('preesensejä');
    declesions[11].plural.nominativeAccusative.push('preesensit');
    declesions[11].plural.inessive.push('preesenseissä');
    declesions[11].plural.elative.push('preesenseistä');
    declesions[11].plural.illative.push('preesenseihin');
    declesions[11].plural.adessive.push('preesenseillä');
    declesions[11].plural.ablative.push('preesenseiltä');
    declesions[11].plural.allative.push('preesenseille');
    declesions[11].plural.essive.push('preesenseinä');
    declesions[11].plural.translative.push('preesenseiksi');
    declesions[11].plural.instructive.push('preesensein');
    declesions[11].plural.abessive.push('preesenseittä');
    declesions[11].plural.comitative.push('preesenseineen');

    declesions.push(new Declesion());
    declesions[12].singular.nominative.push('amerikanbandoggi');
    declesions[12].singular.genitive.push('amerikanbandoggin');
    declesions[12].singular.partitive.push('amerikanbandoggia');
    declesions[12].singular.nominativeAccusative.push('amerikanbandoggi');
    declesions[12].singular.genitiveAccusative.push('amerikanbandoggin');
    declesions[12].singular.inessive.push('amerikanbandoggissa');
    declesions[12].singular.elative.push('amerikanbandoggista');
    declesions[12].singular.illative.push('amerikanbandoggiin');
    declesions[12].singular.adessive.push('amerikanbandoggilla');
    declesions[12].singular.ablative.push('amerikanbandoggilta');
    declesions[12].singular.allative.push('amerikanbandoggille');
    declesions[12].singular.essive.push('amerikanbandoggina');
    declesions[12].singular.translative.push('amerikanbandoggiksi');
    declesions[12].singular.abessive.push('amerikanbandoggitta');
    declesions[12].plural.nominative.push('amerikanbandoggit');
    declesions[12].plural.genitive.push('amerikanbandoggien');
    declesions[12].plural.partitive.push('amerikanbandoggeja');
    declesions[12].plural.nominativeAccusative.push('amerikanbandoggit');
    declesions[12].plural.inessive.push('amerikanbandoggeissa');
    declesions[12].plural.elative.push('amerikanbandoggeista');
    declesions[12].plural.illative.push('amerikanbandoggeihin');
    declesions[12].plural.adessive.push('amerikanbandoggeilla');
    declesions[12].plural.ablative.push('amerikanbandoggeilta');
    declesions[12].plural.allative.push('amerikanbandoggeille');
    declesions[12].plural.essive.push('amerikanbandoggeina');
    declesions[12].plural.translative.push('amerikanbandoggeiksi');
    declesions[12].plural.instructive.push('amerikanbandoggein');
    declesions[12].plural.abessive.push('amerikanbandoggeitta');
    declesions[12].plural.comitative.push('amerikanbandoggeineen');
    declesions.push(new Declesion());
    declesions[13].singular.nominative.push('amerikanbandoggi');
    declesions[13].singular.genitive.push('amerikanbandogin');
    declesions[13].singular.partitive.push('amerikanbandoggia');
    declesions[13].singular.nominativeAccusative.push('amerikanbandoggi');
    declesions[13].singular.genitiveAccusative.push('amerikanbandogin');
    declesions[13].singular.inessive.push('amerikanbandogissa');
    declesions[13].singular.elative.push('amerikanbandogista');
    declesions[13].singular.illative.push('amerikanbandoggiin');
    declesions[13].singular.adessive.push('amerikanbandogilla');
    declesions[13].singular.ablative.push('amerikanbandogilta');
    declesions[13].singular.allative.push('amerikanbandogille');
    declesions[13].singular.essive.push('amerikanbandoggina');
    declesions[13].singular.translative.push('amerikanbandogiksi');
    declesions[13].singular.abessive.push('amerikanbandogitta');
    declesions[13].plural.nominative.push('amerikanbandogit');
    declesions[13].plural.genitive.push('amerikanbandoggien');
    declesions[13].plural.partitive.push('amerikanbandoggeja');
    declesions[13].plural.nominativeAccusative.push('amerikanbandogit');
    declesions[13].plural.inessive.push('amerikanbandogeissa');
    declesions[13].plural.elative.push('amerikanbandogeista');
    declesions[13].plural.illative.push('amerikanbandoggeihin');
    declesions[13].plural.adessive.push('amerikanbandogeilla');
    declesions[13].plural.ablative.push('amerikanbandogeilta');
    declesions[13].plural.allative.push('amerikanbandogeille');
    declesions[13].plural.essive.push('amerikanbandoggeina');
    declesions[13].plural.translative.push('amerikanbandogeiksi');
    declesions[13].plural.instructive.push('amerikanbandogein');
    declesions[13].plural.abessive.push('amerikanbandogeitta');
    declesions[13].plural.comitative.push('amerikanbandoggeineen');

    service.decline('risti').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('tukki').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('nuppi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
    service.decline('niitti').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[3]]);
    });
    service.decline('hupi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[4]]);
    });
    service.decline('koti').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[5]]);
    });
    service.decline('vanki').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[6]]);
    });
    service.decline('pelti').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[7]]);
    });
    service.decline('tunti').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[8]]);
    });
    service.decline('kaarti').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[9]]);
    });
    service.decline('kalsium').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[10]]);
    });
    service.decline('preesens').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[11]]);
    });
    service.decline('amerikanbandoggi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[12], declesions[13]]);
    });
  }));

  it('should decline type 6 (paperi)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('paperi');
    declesions[0].singular.genitive.push('paperin');
    declesions[0].singular.partitive.push('paperia');
    declesions[0].singular.nominativeAccusative.push('paperi');
    declesions[0].singular.genitiveAccusative.push('paperin');
    declesions[0].singular.inessive.push('paperissa');
    declesions[0].singular.elative.push('paperista');
    declesions[0].singular.illative.push('paperiin');
    declesions[0].singular.adessive.push('paperilla');
    declesions[0].singular.ablative.push('paperilta');
    declesions[0].singular.allative.push('paperille');
    declesions[0].singular.essive.push('paperina');
    declesions[0].singular.translative.push('paperiksi');
    declesions[0].singular.abessive.push('paperitta');
    declesions[0].plural.nominative.push('paperit');
    declesions[0].plural.genitive = ['paperien', 'papereiden', 'papereitten'].sort();
    declesions[0].plural.partitive = ['papereita', 'papereja'].sort();
    declesions[0].plural.nominativeAccusative.push('paperit');
    declesions[0].plural.inessive.push('papereissa');
    declesions[0].plural.elative.push('papereista');
    declesions[0].plural.illative.push('papereihin');
    declesions[0].plural.adessive.push('papereilla');
    declesions[0].plural.ablative.push('papereilta');
    declesions[0].plural.allative.push('papereille');
    declesions[0].plural.essive.push('papereina');
    declesions[0].plural.translative.push('papereiksi');
    declesions[0].plural.instructive.push('paperein');
    declesions[0].plural.abessive.push('papereitta');
    declesions[0].plural.comitative.push('papereineen');

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('cover');
    declesions[1].singular.genitive.push('coverin');
    declesions[1].singular.partitive.push('coveria');
    declesions[1].singular.nominativeAccusative.push('cover');
    declesions[1].singular.genitiveAccusative.push('coverin');
    declesions[1].singular.inessive.push('coverissa');
    declesions[1].singular.elative.push('coverista');
    declesions[1].singular.illative.push('coveriin');
    declesions[1].singular.adessive.push('coverilla');
    declesions[1].singular.ablative.push('coverilta');
    declesions[1].singular.allative.push('coverille');
    declesions[1].singular.essive.push('coverina');
    declesions[1].singular.translative.push('coveriksi');
    declesions[1].singular.abessive.push('coveritta');
    declesions[1].plural.nominative.push('coverit');
    declesions[1].plural.genitive = ['coverien', 'covereiden', 'covereitten'].sort();
    declesions[1].plural.partitive = ['covereita', 'covereja'].sort();
    declesions[1].plural.nominativeAccusative.push('coverit');
    declesions[1].plural.inessive.push('covereissa');
    declesions[1].plural.elative.push('covereista');
    declesions[1].plural.illative.push('covereihin');
    declesions[1].plural.adessive.push('covereilla');
    declesions[1].plural.ablative.push('covereilta');
    declesions[1].plural.allative.push('covereille');
    declesions[1].plural.essive.push('covereina');
    declesions[1].plural.translative.push('covereiksi');
    declesions[1].plural.instructive.push('coverein');
    declesions[1].plural.abessive.push('covereitta');
    declesions[1].plural.comitative.push('covereineen');
    
    service.decline('paperi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('cover').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
  }));

  it('should decline type 7 (ovi)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('ovi');
    declesions[0].singular.genitive.push('oven');
    declesions[0].singular.partitive.push('ovea');
    declesions[0].singular.nominativeAccusative.push('ovi');
    declesions[0].singular.genitiveAccusative.push('oven');
    declesions[0].singular.inessive.push('ovessa');
    declesions[0].singular.elative.push('ovesta');
    declesions[0].singular.illative.push('oveen');
    declesions[0].singular.adessive.push('ovella');
    declesions[0].singular.ablative.push('ovelta');
    declesions[0].singular.allative.push('ovelle');
    declesions[0].singular.essive.push('ovena');
    declesions[0].singular.translative.push('oveksi');
    declesions[0].singular.abessive.push('ovetta');
    declesions[0].plural.nominative.push('ovet');
    declesions[0].plural.genitive.push('ovien');
    declesions[0].plural.partitive.push('ovia');
    declesions[0].plural.nominativeAccusative.push('ovet');
    declesions[0].plural.inessive.push('ovissa');
    declesions[0].plural.elative.push('ovista');
    declesions[0].plural.illative.push('oviin');
    declesions[0].plural.adessive.push('ovilla');
    declesions[0].plural.ablative.push('ovilta');
    declesions[0].plural.allative.push('oville');
    declesions[0].plural.essive.push('ovina');
    declesions[0].plural.translative.push('oviksi');
    declesions[0].plural.instructive.push('ovin');
    declesions[0].plural.abessive.push('ovitta');
    declesions[0].plural.comitative.push('ovineen');

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('typpi');
    declesions[1].singular.genitive.push('typen');
    declesions[1].singular.partitive.push('typpeä');
    declesions[1].singular.nominativeAccusative.push('typpi');
    declesions[1].singular.genitiveAccusative.push('typen');
    declesions[1].singular.inessive.push('typessä');
    declesions[1].singular.elative.push('typestä');
    declesions[1].singular.illative.push('typpeen');
    declesions[1].singular.adessive.push('typellä');
    declesions[1].singular.ablative.push('typeltä');
    declesions[1].singular.allative.push('typelle');
    declesions[1].singular.essive.push('typpenä');
    declesions[1].singular.translative.push('typeksi');
    declesions[1].singular.abessive.push('typettä');
    declesions[1].plural.nominative.push('typet');
    declesions[1].plural.genitive.push('typpien');
    declesions[1].plural.partitive.push('typpiä');
    declesions[1].plural.nominativeAccusative.push('typet');
    declesions[1].plural.inessive.push('typissä');
    declesions[1].plural.elative.push('typistä');
    declesions[1].plural.illative.push('typpiin');
    declesions[1].plural.adessive.push('typillä');
    declesions[1].plural.ablative.push('typiltä');
    declesions[1].plural.allative.push('typille');
    declesions[1].plural.essive.push('typpinä');
    declesions[1].plural.translative.push('typiksi');
    declesions[1].plural.instructive.push('typin');
    declesions[1].plural.abessive.push('typittä');
    declesions[1].plural.comitative.push('typpineen');

    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('joki');
    declesions[2].singular.genitive.push('joen');
    declesions[2].singular.partitive.push('jokea');
    declesions[2].singular.nominativeAccusative.push('joki');
    declesions[2].singular.genitiveAccusative.push('joen');
    declesions[2].singular.inessive.push('joessa');
    declesions[2].singular.elative.push('joesta');
    declesions[2].singular.illative.push('jokeen');
    declesions[2].singular.adessive.push('joella');
    declesions[2].singular.ablative.push('joelta');
    declesions[2].singular.allative.push('joelle');
    declesions[2].singular.essive.push('jokena');
    declesions[2].singular.translative.push('joeksi');
    declesions[2].singular.abessive.push('joetta');
    declesions[2].plural.nominative.push('joet');
    declesions[2].plural.genitive.push('jokien');
    declesions[2].plural.partitive.push('jokia');
    declesions[2].plural.nominativeAccusative.push('joet');
    declesions[2].plural.inessive.push('joissa');
    declesions[2].plural.elative.push('joista');
    declesions[2].plural.illative.push('jokiin');
    declesions[2].plural.adessive.push('joilla');
    declesions[2].plural.ablative.push('joilta');
    declesions[2].plural.allative.push('joille');
    declesions[2].plural.essive.push('jokina');
    declesions[2].plural.translative.push('joiksi');
    declesions[2].plural.instructive.push('join');
    declesions[2].plural.abessive.push('joitta');
    declesions[2].plural.comitative.push('jokineen');

    declesions.push(new Declesion());
    declesions[3].singular.nominative.push('korpi');
    declesions[3].singular.genitive.push('korven');
    declesions[3].singular.partitive.push('korpea');
    declesions[3].singular.nominativeAccusative.push('korpi');
    declesions[3].singular.genitiveAccusative.push('korven');
    declesions[3].singular.inessive.push('korvessa');
    declesions[3].singular.elative.push('korvesta');
    declesions[3].singular.illative.push('korpeen');
    declesions[3].singular.adessive.push('korvella');
    declesions[3].singular.ablative.push('korvelta');
    declesions[3].singular.allative.push('korvelle');
    declesions[3].singular.essive.push('korpena');
    declesions[3].singular.translative.push('korveksi');
    declesions[3].singular.abessive.push('korvetta');
    declesions[3].plural.nominative.push('korvet');
    declesions[3].plural.genitive.push('korpien');
    declesions[3].plural.partitive.push('korpia');
    declesions[3].plural.nominativeAccusative.push('korvet');
    declesions[3].plural.inessive.push('korvissa');
    declesions[3].plural.elative.push('korvista');
    declesions[3].plural.illative.push('korpiin');
    declesions[3].plural.adessive.push('korvilla');
    declesions[3].plural.ablative.push('korvilta');
    declesions[3].plural.allative.push('korville');
    declesions[3].plural.essive.push('korpina');
    declesions[3].plural.translative.push('korviksi');
    declesions[3].plural.instructive.push('korvin');
    declesions[3].plural.abessive.push('korvitta');
    declesions[3].plural.comitative.push('korpineen');

    declesions.push(new Declesion());
    declesions[4].singular.nominative.push('lahti');
    declesions[4].singular.genitive.push('lahden');
    declesions[4].singular.partitive.push('lahtea');
    declesions[4].singular.nominativeAccusative.push('lahti');
    declesions[4].singular.genitiveAccusative.push('lahden');
    declesions[4].singular.inessive.push('lahdessa');
    declesions[4].singular.elative.push('lahdesta');
    declesions[4].singular.illative.push('lahteen');
    declesions[4].singular.adessive.push('lahdella');
    declesions[4].singular.ablative.push('lahdelta');
    declesions[4].singular.allative.push('lahdelle');
    declesions[4].singular.essive.push('lahtena');
    declesions[4].singular.translative.push('lahdeksi');
    declesions[4].singular.abessive.push('lahdetta');
    declesions[4].plural.nominative.push('lahdet');
    declesions[4].plural.genitive.push('lahtien');
    declesions[4].plural.partitive.push('lahtia');
    declesions[4].plural.nominativeAccusative.push('lahdet');
    declesions[4].plural.inessive.push('lahdissa');
    declesions[4].plural.elative.push('lahdista');
    declesions[4].plural.illative.push('lahtiin');
    declesions[4].plural.adessive.push('lahdilla');
    declesions[4].plural.ablative.push('lahdilta');
    declesions[4].plural.allative.push('lahdille');
    declesions[4].plural.essive.push('lahtina');
    declesions[4].plural.translative.push('lahdiksi');
    declesions[4].plural.instructive.push('lahdin');
    declesions[4].plural.abessive.push('lahditta');
    declesions[4].plural.comitative.push('lahtineen');
    //declesion type 5
    declesions.push(new Declesion());
    declesions[5].singular.nominative.push('lahti');
    declesions[5].singular.genitive.push('lahdin');
    declesions[5].singular.partitive.push('lahtia');
    declesions[5].singular.nominativeAccusative.push('lahti');
    declesions[5].singular.genitiveAccusative.push('lahdin');
    declesions[5].singular.inessive.push('lahdissa');
    declesions[5].singular.elative.push('lahdista');
    declesions[5].singular.illative.push('lahtiin');
    declesions[5].singular.adessive.push('lahdilla');
    declesions[5].singular.ablative.push('lahdilta');
    declesions[5].singular.allative.push('lahdille');
    declesions[5].singular.essive.push('lahtina');
    declesions[5].singular.translative.push('lahdiksi');
    declesions[5].singular.abessive.push('lahditta');
    declesions[5].plural.nominative.push('lahdit');
    declesions[5].plural.genitive.push('lahtien');
    declesions[5].plural.partitive.push('lahteja');
    declesions[5].plural.nominativeAccusative.push('lahdit');
    declesions[5].plural.inessive.push('lahdeissa');
    declesions[5].plural.elative.push('lahdeista');
    declesions[5].plural.illative.push('lahteihin');
    declesions[5].plural.adessive.push('lahdeilla');
    declesions[5].plural.ablative.push('lahdeilta');
    declesions[5].plural.allative.push('lahdeille');
    declesions[5].plural.essive.push('lahteina');
    declesions[5].plural.translative.push('lahdeiksi');
    declesions[5].plural.instructive.push('lahdein');
    declesions[5].plural.abessive.push('lahdeitta');
    declesions[5].plural.comitative.push('lahteineen');

    declesions.push(new Declesion());
    declesions[6].singular.nominative.push('onki');
    declesions[6].singular.genitive.push('ongen');
    declesions[6].singular.partitive.push('onkea');
    declesions[6].singular.nominativeAccusative.push('onki');
    declesions[6].singular.genitiveAccusative.push('ongen');
    declesions[6].singular.inessive.push('ongessa');
    declesions[6].singular.elative.push('ongesta');
    declesions[6].singular.illative.push('onkeen');
    declesions[6].singular.adessive.push('ongella');
    declesions[6].singular.ablative.push('ongelta');
    declesions[6].singular.allative.push('ongelle');
    declesions[6].singular.essive.push('onkena');
    declesions[6].singular.translative.push('ongeksi');
    declesions[6].singular.abessive.push('ongetta');
    declesions[6].plural.nominative.push('onget');
    declesions[6].plural.genitive.push('onkien');
    declesions[6].plural.partitive.push('onkia');
    declesions[6].plural.nominativeAccusative.push('onget');
    declesions[6].plural.inessive.push('ongissa');
    declesions[6].plural.elative.push('ongista');
    declesions[6].plural.illative.push('onkiin');
    declesions[6].plural.adessive.push('ongilla');
    declesions[6].plural.ablative.push('ongilta');
    declesions[6].plural.allative.push('ongille');
    declesions[6].plural.essive.push('onkina');
    declesions[6].plural.translative.push('ongiksi');
    declesions[6].plural.instructive.push('ongin');
    declesions[6].plural.abessive.push('ongitta');
    declesions[6].plural.comitative.push('onkineen');

    declesions.push(new Declesion());
    declesions[7].singular.nominative.push('sampi');
    declesions[7].singular.genitive.push('sammen');
    declesions[7].singular.partitive.push('sampea');
    declesions[7].singular.nominativeAccusative.push('sampi');
    declesions[7].singular.genitiveAccusative.push('sammen');
    declesions[7].singular.inessive.push('sammessa');
    declesions[7].singular.elative.push('sammesta');
    declesions[7].singular.illative.push('sampeen');
    declesions[7].singular.adessive.push('sammella');
    declesions[7].singular.ablative.push('sammelta');
    declesions[7].singular.allative.push('sammelle');
    declesions[7].singular.essive.push('sampena');
    declesions[7].singular.translative.push('sammeksi');
    declesions[7].singular.abessive.push('sammetta');
    declesions[7].plural.nominative.push('sammet');
    declesions[7].plural.genitive.push('sampien');
    declesions[7].plural.partitive.push('sampia');
    declesions[7].plural.nominativeAccusative.push('sammet');
    declesions[7].plural.inessive.push('sammissa');
    declesions[7].plural.elative.push('sammista');
    declesions[7].plural.illative.push('sampiin');
    declesions[7].plural.adessive.push('sammilla');
    declesions[7].plural.ablative.push('sammilta');
    declesions[7].plural.allative.push('sammille');
    declesions[7].plural.essive.push('sampina');
    declesions[7].plural.translative.push('sammiksi');
    declesions[7].plural.instructive.push('sammin');
    declesions[7].plural.abessive.push('sammitta');
    declesions[7].plural.comitative.push('sampineen');

    declesions.push(new Declesion());
    declesions[8].singular.nominative.push('arki');
    declesions[8].singular.genitive.push('arjen');
    declesions[8].singular.partitive.push('arkea');
    declesions[8].singular.nominativeAccusative.push('arki');
    declesions[8].singular.genitiveAccusative.push('arjen');
    declesions[8].singular.inessive.push('arjessa');
    declesions[8].singular.elative.push('arjesta');
    declesions[8].singular.illative.push('arkeen');
    declesions[8].singular.adessive.push('arjella');
    declesions[8].singular.ablative.push('arjelta');
    declesions[8].singular.allative.push('arjelle');
    declesions[8].singular.essive.push('arkena');
    declesions[8].singular.translative.push('arjeksi');
    declesions[8].singular.abessive.push('arjetta');
    declesions[8].plural.nominative.push('arjet');
    declesions[8].plural.genitive.push('arkien');
    declesions[8].plural.partitive.push('arkia');
    declesions[8].plural.nominativeAccusative.push('arjet');
    declesions[8].plural.inessive.push('arjissa');
    declesions[8].plural.elative.push('arjista');
    declesions[8].plural.illative.push('arkiin');
    declesions[8].plural.adessive.push('arjilla');
    declesions[8].plural.ablative.push('arjilta');
    declesions[8].plural.allative.push('arjille');
    declesions[8].plural.essive.push('arkina');
    declesions[8].plural.translative.push('arjiksi');
    declesions[8].plural.instructive.push('arjin');
    declesions[8].plural.abessive.push('arjitta');
    declesions[8].plural.comitative.push('arkineen');
    
    service.decline('ovi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('typpi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('joki').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
    service.decline('korpi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[3]]);
    });
    service.decline('lahti').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[5], declesions[4]]);
    });
    service.decline('onki').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[6]]);
    });
    service.decline('sampi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[7]]);
    });
    service.decline('arki').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[8]]);
    });
  }));

  it('should decline type 8 (nalle)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('nalle');
    declesions[0].singular.genitive.push('nallen');
    declesions[0].singular.partitive.push('nallea');
    declesions[0].singular.nominativeAccusative.push('nalle');
    declesions[0].singular.genitiveAccusative.push('nallen');
    declesions[0].singular.inessive.push('nallessa');
    declesions[0].singular.elative.push('nallesta');
    declesions[0].singular.illative.push('nalleen');
    declesions[0].singular.adessive.push('nallella');
    declesions[0].singular.ablative.push('nallelta');
    declesions[0].singular.allative.push('nallelle');
    declesions[0].singular.essive.push('nallena');
    declesions[0].singular.translative.push('nalleksi');
    declesions[0].singular.abessive.push('nalletta');
    declesions[0].plural.nominative.push('nallet');
    declesions[0].plural.genitive = ['nallejen', 'nallein'].sort();
    declesions[0].plural.partitive.push('nalleja');
    declesions[0].plural.nominativeAccusative.push('nallet');
    declesions[0].plural.inessive.push('nalleissa');
    declesions[0].plural.elative.push('nalleista');
    declesions[0].plural.illative.push('nalleihin');
    declesions[0].plural.adessive.push('nalleilla');
    declesions[0].plural.ablative.push('nalleilta');
    declesions[0].plural.allative.push('nalleille');
    declesions[0].plural.essive.push('nalleina');
    declesions[0].plural.translative.push('nalleiksi');
    declesions[0].plural.instructive.push('nallein');
    declesions[0].plural.abessive.push('nalleitta');
    declesions[0].plural.comitative.push('nalleineen');
    
    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('nukke');
    declesions[1].singular.genitive.push('nuken');
    declesions[1].singular.partitive.push('nukkea');
    declesions[1].singular.nominativeAccusative.push('nukke');
    declesions[1].singular.genitiveAccusative.push('nuken');
    declesions[1].singular.inessive.push('nukessa');
    declesions[1].singular.elative.push('nukesta');
    declesions[1].singular.illative.push('nukkeen');
    declesions[1].singular.adessive.push('nukella');
    declesions[1].singular.ablative.push('nukelta');
    declesions[1].singular.allative.push('nukelle');
    declesions[1].singular.essive.push('nukkena');
    declesions[1].singular.translative.push('nukeksi');
    declesions[1].singular.abessive.push('nuketta');
    declesions[1].plural.nominative.push('nuket');
    declesions[1].plural.genitive = ['nukkejen', 'nukkein'].sort();
    declesions[1].plural.partitive.push('nukkeja');
    declesions[1].plural.nominativeAccusative.push('nuket');
    declesions[1].plural.inessive.push('nukeissa');
    declesions[1].plural.elative.push('nukeista');
    declesions[1].plural.illative.push('nukkeihin');
    declesions[1].plural.adessive.push('nukeilla');
    declesions[1].plural.ablative.push('nukeilta');
    declesions[1].plural.allative.push('nukeille');
    declesions[1].plural.essive.push('nukkeina');
    declesions[1].plural.translative.push('nukeiksi');
    declesions[1].plural.instructive.push('nukein');
    declesions[1].plural.abessive.push('nukeitta');
    declesions[1].plural.comitative.push('nukkeineen');
    
    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('ope');
    declesions[2].singular.genitive.push('open');
    declesions[2].singular.partitive.push('opea');
    declesions[2].singular.nominativeAccusative.push('ope');
    declesions[2].singular.genitiveAccusative.push('open');
    declesions[2].singular.inessive.push('opessa');
    declesions[2].singular.elative.push('opesta');
    declesions[2].singular.illative.push('opeen');
    declesions[2].singular.adessive.push('opella');
    declesions[2].singular.ablative.push('opelta');
    declesions[2].singular.allative.push('opelle');
    declesions[2].singular.essive.push('opena');
    declesions[2].singular.translative.push('opeksi');
    declesions[2].singular.abessive.push('opetta');
    declesions[2].plural.nominative.push('opet');
    declesions[2].plural.genitive = ['opejen', 'opein'].sort();
    declesions[2].plural.partitive.push('opeja');
    declesions[2].plural.nominativeAccusative.push('opet');
    declesions[2].plural.inessive.push('opeissa');
    declesions[2].plural.elative.push('opeista');
    declesions[2].plural.illative.push('opeihin');
    declesions[2].plural.adessive.push('opeilla');
    declesions[2].plural.ablative.push('opeilta');
    declesions[2].plural.allative.push('opeille');
    declesions[2].plural.essive.push('opeina');
    declesions[2].plural.translative.push('opeiksi');
    declesions[2].plural.instructive.push('opein');
    declesions[2].plural.abessive.push('opeitta');
    declesions[2].plural.comitative.push('opeineen');
    
    service.decline('nalle').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('nukke').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('ope').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
  }));

  it('should decline type 9 (kala)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('kala');
    declesions[0].singular.genitive.push('kalan');
    declesions[0].singular.partitive.push('kalaa');
    declesions[0].singular.nominativeAccusative.push('kala');
    declesions[0].singular.genitiveAccusative.push('kalan');
    declesions[0].singular.inessive.push('kalassa');
    declesions[0].singular.elative.push('kalasta');
    declesions[0].singular.illative.push('kalaan');
    declesions[0].singular.adessive.push('kalalla');
    declesions[0].singular.ablative.push('kalalta');
    declesions[0].singular.allative.push('kalalle');
    declesions[0].singular.essive.push('kalana');
    declesions[0].singular.translative.push('kalaksi');
    declesions[0].singular.abessive.push('kalatta');
    declesions[0].plural.nominative.push('kalat');
    declesions[0].plural.genitive = ['kalojen', 'kalain'].sort();
    declesions[0].plural.partitive.push('kaloja');
    declesions[0].plural.nominativeAccusative.push('kalat');
    declesions[0].plural.inessive.push('kaloissa');
    declesions[0].plural.elative.push('kaloista');
    declesions[0].plural.illative.push('kaloihin');
    declesions[0].plural.adessive.push('kaloilla');
    declesions[0].plural.ablative.push('kaloilta');
    declesions[0].plural.allative.push('kaloille');
    declesions[0].plural.essive.push('kaloina');
    declesions[0].plural.translative.push('kaloiksi');
    declesions[0].plural.instructive.push('kaloin');
    declesions[0].plural.abessive.push('kaloitta');
    declesions[0].plural.comitative.push('kaloineen');
    
    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('markka');
    declesions[1].singular.genitive.push('markan');
    declesions[1].singular.partitive.push('markkaa');
    declesions[1].singular.nominativeAccusative.push('markka');
    declesions[1].singular.genitiveAccusative.push('markan');
    declesions[1].singular.inessive.push('markassa');
    declesions[1].singular.elative.push('markasta');
    declesions[1].singular.illative.push('markkaan');
    declesions[1].singular.adessive.push('markalla');
    declesions[1].singular.ablative.push('markalta');
    declesions[1].singular.allative.push('markalle');
    declesions[1].singular.essive.push('markkana');
    declesions[1].singular.translative.push('markaksi');
    declesions[1].singular.abessive.push('markatta');
    declesions[1].plural.nominative.push('markat');
    declesions[1].plural.genitive = ['markkojen', 'markkain'].sort();
    declesions[1].plural.partitive.push('markkoja');
    declesions[1].plural.nominativeAccusative.push('markat');
    declesions[1].plural.inessive.push('markoissa');
    declesions[1].plural.elative.push('markoista');
    declesions[1].plural.illative.push('markkoihin');
    declesions[1].plural.adessive.push('markoilla');
    declesions[1].plural.ablative.push('markoilta');
    declesions[1].plural.allative.push('markoille');
    declesions[1].plural.essive.push('markkoina');
    declesions[1].plural.translative.push('markoiksi');
    declesions[1].plural.instructive.push('markoin');
    declesions[1].plural.abessive.push('markoitta');
    declesions[1].plural.comitative.push('markkoineen');
    
    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('kauppa');
    declesions[2].singular.genitive.push('kaupan');
    declesions[2].singular.partitive.push('kauppaa');
    declesions[2].singular.nominativeAccusative.push('kauppa');
    declesions[2].singular.genitiveAccusative.push('kaupan');
    declesions[2].singular.inessive.push('kaupassa');
    declesions[2].singular.elative.push('kaupasta');
    declesions[2].singular.illative.push('kauppaan');
    declesions[2].singular.adessive.push('kaupalla');
    declesions[2].singular.ablative.push('kaupalta');
    declesions[2].singular.allative.push('kaupalle');
    declesions[2].singular.essive.push('kauppana');
    declesions[2].singular.translative.push('kaupaksi');
    declesions[2].singular.abessive.push('kaupatta');
    declesions[2].plural.nominative.push('kaupat');
    declesions[2].plural.genitive = ['kauppojen', 'kauppain'].sort();
    declesions[2].plural.partitive.push('kauppoja');
    declesions[2].plural.nominativeAccusative.push('kaupat');
    declesions[2].plural.inessive.push('kaupoissa');
    declesions[2].plural.elative.push('kaupoista');
    declesions[2].plural.illative.push('kauppoihin');
    declesions[2].plural.adessive.push('kaupoilla');
    declesions[2].plural.ablative.push('kaupoilta');
    declesions[2].plural.allative.push('kaupoille');
    declesions[2].plural.essive.push('kauppoina');
    declesions[2].plural.translative.push('kaupoiksi');
    declesions[2].plural.instructive.push('kaupoin');
    declesions[2].plural.abessive.push('kaupoitta');
    declesions[2].plural.comitative.push('kauppoineen');
    
    declesions.push(new Declesion());
    declesions[3].singular.nominative.push('mitta');
    declesions[3].singular.genitive.push('mitan');
    declesions[3].singular.partitive.push('mittaa');
    declesions[3].singular.nominativeAccusative.push('mitta');
    declesions[3].singular.genitiveAccusative.push('mitan');
    declesions[3].singular.inessive.push('mitassa');
    declesions[3].singular.elative.push('mitasta');
    declesions[3].singular.illative.push('mittaan');
    declesions[3].singular.adessive.push('mitalla');
    declesions[3].singular.ablative.push('mitalta');
    declesions[3].singular.allative.push('mitalle');
    declesions[3].singular.essive.push('mittana');
    declesions[3].singular.translative.push('mitaksi');
    declesions[3].singular.abessive.push('mitatta');
    declesions[3].plural.nominative.push('mitat');
    declesions[3].plural.genitive = ['mittojen', 'mittain'].sort();
    declesions[3].plural.partitive.push('mittoja');
    declesions[3].plural.nominativeAccusative.push('mitat');
    declesions[3].plural.inessive.push('mitoissa');
    declesions[3].plural.elative.push('mitoista');
    declesions[3].plural.illative.push('mittoihin');
    declesions[3].plural.adessive.push('mitoilla');
    declesions[3].plural.ablative.push('mitoilta');
    declesions[3].plural.allative.push('mitoille');
    declesions[3].plural.essive.push('mittoina');
    declesions[3].plural.translative.push('mitoiksi');
    declesions[3].plural.instructive.push('mitoin');
    declesions[3].plural.abessive.push('mitoitta');
    declesions[3].plural.comitative.push('mittoineen');
    
    declesions.push(new Declesion());
    declesions[4].singular.nominative.push('lika');
    declesions[4].singular.genitive.push('lian');
    declesions[4].singular.partitive.push('likaa');
    declesions[4].singular.nominativeAccusative.push('lika');
    declesions[4].singular.genitiveAccusative.push('lian');
    declesions[4].singular.inessive.push('liassa');
    declesions[4].singular.elative.push('liasta');
    declesions[4].singular.illative.push('likaan');
    declesions[4].singular.adessive.push('lialla');
    declesions[4].singular.ablative.push('lialta');
    declesions[4].singular.allative.push('lialle');
    declesions[4].singular.essive.push('likana');
    declesions[4].singular.translative.push('liaksi');
    declesions[4].singular.abessive.push('liatta');
    declesions[4].plural.nominative.push('liat');
    declesions[4].plural.genitive = ['likojen', 'likain'].sort();
    declesions[4].plural.partitive.push('likoja');
    declesions[4].plural.nominativeAccusative.push('liat');
    declesions[4].plural.inessive.push('lioissa');
    declesions[4].plural.elative.push('lioista');
    declesions[4].plural.illative.push('likoihin');
    declesions[4].plural.adessive.push('lioilla');
    declesions[4].plural.ablative.push('lioilta');
    declesions[4].plural.allative.push('lioille');
    declesions[4].plural.essive.push('likoina');
    declesions[4].plural.translative.push('lioiksi');
    declesions[4].plural.instructive.push('lioin');
    declesions[4].plural.abessive.push('lioitta');
    declesions[4].plural.comitative.push('likoineen');
    
    declesions.push(new Declesion());
    declesions[5].singular.nominative.push('halpa');
    declesions[5].singular.genitive.push('halvan');
    declesions[5].singular.partitive.push('halpaa');
    declesions[5].singular.nominativeAccusative.push('halpa');
    declesions[5].singular.genitiveAccusative.push('halvan');
    declesions[5].singular.inessive.push('halvassa');
    declesions[5].singular.elative.push('halvasta');
    declesions[5].singular.illative.push('halpaan');
    declesions[5].singular.adessive.push('halvalla');
    declesions[5].singular.ablative.push('halvalta');
    declesions[5].singular.allative.push('halvalle');
    declesions[5].singular.essive.push('halpana');
    declesions[5].singular.translative.push('halvaksi');
    declesions[5].singular.abessive.push('halvatta');
    declesions[5].plural.nominative.push('halvat');
    declesions[5].plural.genitive = ['halpojen', 'halpain'].sort();
    declesions[5].plural.partitive.push('halpoja');
    declesions[5].plural.nominativeAccusative.push('halvat');
    declesions[5].plural.inessive.push('halvoissa');
    declesions[5].plural.elative.push('halvoista');
    declesions[5].plural.illative.push('halpoihin');
    declesions[5].plural.adessive.push('halvoilla');
    declesions[5].plural.ablative.push('halvoilta');
    declesions[5].plural.allative.push('halvoille');
    declesions[5].plural.essive.push('halpoina');
    declesions[5].plural.translative.push('halvoiksi');
    declesions[5].plural.instructive.push('halvoin');
    declesions[5].plural.abessive.push('halvoitta');
    declesions[5].plural.comitative.push('halpoineen');
    
    declesions.push(new Declesion());
    declesions[6].singular.nominative.push('rauta');
    declesions[6].singular.genitive.push('raudan');
    declesions[6].singular.partitive.push('rautaa');
    declesions[6].singular.nominativeAccusative.push('rauta');
    declesions[6].singular.genitiveAccusative.push('raudan');
    declesions[6].singular.inessive.push('raudassa');
    declesions[6].singular.elative.push('raudasta');
    declesions[6].singular.illative.push('rautaan');
    declesions[6].singular.adessive.push('raudalla');
    declesions[6].singular.ablative.push('raudalta');
    declesions[6].singular.allative.push('raudalle');
    declesions[6].singular.essive.push('rautana');
    declesions[6].singular.translative.push('raudaksi');
    declesions[6].singular.abessive.push('raudatta');
    declesions[6].plural.nominative.push('raudat');
    declesions[6].plural.genitive = ['rautojen', 'rautain'].sort();
    declesions[6].plural.partitive.push('rautoja');
    declesions[6].plural.nominativeAccusative.push('raudat');
    declesions[6].plural.inessive.push('raudoissa');
    declesions[6].plural.elative.push('raudoista');
    declesions[6].plural.illative.push('rautoihin');
    declesions[6].plural.adessive.push('raudoilla');
    declesions[6].plural.ablative.push('raudoilta');
    declesions[6].plural.allative.push('raudoille');
    declesions[6].plural.essive.push('rautoina');
    declesions[6].plural.translative.push('raudoiksi');
    declesions[6].plural.instructive.push('raudoin');
    declesions[6].plural.abessive.push('raudoitta');
    declesions[6].plural.comitative.push('rautoineen');
    
    declesions.push(new Declesion());
    declesions[7].singular.nominative.push('lanka');
    declesions[7].singular.genitive.push('langan');
    declesions[7].singular.partitive.push('lankaa');
    declesions[7].singular.nominativeAccusative.push('lanka');
    declesions[7].singular.genitiveAccusative.push('langan');
    declesions[7].singular.inessive.push('langassa');
    declesions[7].singular.elative.push('langasta');
    declesions[7].singular.illative.push('lankaan');
    declesions[7].singular.adessive.push('langalla');
    declesions[7].singular.ablative.push('langalta');
    declesions[7].singular.allative.push('langalle');
    declesions[7].singular.essive.push('lankana');
    declesions[7].singular.translative.push('langaksi');
    declesions[7].singular.abessive.push('langatta');
    declesions[7].plural.nominative.push('langat');
    declesions[7].plural.genitive = ['lankojen', 'lankain'].sort();
    declesions[7].plural.partitive.push('lankoja');
    declesions[7].plural.nominativeAccusative.push('langat');
    declesions[7].plural.inessive.push('langoissa');
    declesions[7].plural.elative.push('langoista');
    declesions[7].plural.illative.push('lankoihin');
    declesions[7].plural.adessive.push('langoilla');
    declesions[7].plural.ablative.push('langoilta');
    declesions[7].plural.allative.push('langoille');
    declesions[7].plural.essive.push('lankoina');
    declesions[7].plural.translative.push('langoiksi');
    declesions[7].plural.instructive.push('langoin');
    declesions[7].plural.abessive.push('langoitta');
    declesions[7].plural.comitative.push('lankoineen');
    
    declesions.push(new Declesion());
    declesions[8].singular.nominative.push('kampa');
    declesions[8].singular.genitive.push('kamman');
    declesions[8].singular.partitive.push('kampaa');
    declesions[8].singular.nominativeAccusative.push('kampa');
    declesions[8].singular.genitiveAccusative.push('kamman');
    declesions[8].singular.inessive.push('kammassa');
    declesions[8].singular.elative.push('kammasta');
    declesions[8].singular.illative.push('kampaan');
    declesions[8].singular.adessive.push('kammalla');
    declesions[8].singular.ablative.push('kammalta');
    declesions[8].singular.allative.push('kammalle');
    declesions[8].singular.essive.push('kampana');
    declesions[8].singular.translative.push('kammaksi');
    declesions[8].singular.abessive.push('kammatta');
    declesions[8].plural.nominative.push('kammat');
    declesions[8].plural.genitive = ['kampojen', 'kampain'].sort();
    declesions[8].plural.partitive.push('kampoja');
    declesions[8].plural.nominativeAccusative.push('kammat');
    declesions[8].plural.inessive.push('kammoissa');
    declesions[8].plural.elative.push('kammoista');
    declesions[8].plural.illative.push('kampoihin');
    declesions[8].plural.adessive.push('kammoilla');
    declesions[8].plural.ablative.push('kammoilta');
    declesions[8].plural.allative.push('kammoille');
    declesions[8].plural.essive.push('kampoina');
    declesions[8].plural.translative.push('kammoiksi');
    declesions[8].plural.instructive.push('kammoin');
    declesions[8].plural.abessive.push('kammoitta');
    declesions[8].plural.comitative.push('kampoineen');
    
    declesions.push(new Declesion());
    declesions[9].singular.nominative.push('ilta');
    declesions[9].singular.genitive.push('illan');
    declesions[9].singular.partitive.push('iltaa');
    declesions[9].singular.nominativeAccusative.push('ilta');
    declesions[9].singular.genitiveAccusative.push('illan');
    declesions[9].singular.inessive.push('illassa');
    declesions[9].singular.elative.push('illasta');
    declesions[9].singular.illative.push('iltaan');
    declesions[9].singular.adessive.push('illalla');
    declesions[9].singular.ablative.push('illalta');
    declesions[9].singular.allative.push('illalle');
    declesions[9].singular.essive.push('iltana');
    declesions[9].singular.translative.push('illaksi');
    declesions[9].singular.abessive.push('illatta');
    declesions[9].plural.nominative.push('illat');
    declesions[9].plural.genitive = ['iltojen', 'iltain'].sort();
    declesions[9].plural.partitive.push('iltoja');
    declesions[9].plural.nominativeAccusative.push('illat');
    declesions[9].plural.inessive.push('illoissa');
    declesions[9].plural.elative.push('illoista');
    declesions[9].plural.illative.push('iltoihin');
    declesions[9].plural.adessive.push('illoilla');
    declesions[9].plural.ablative.push('illoilta');
    declesions[9].plural.allative.push('illoille');
    declesions[9].plural.essive.push('iltoina');
    declesions[9].plural.translative.push('illoiksi');
    declesions[9].plural.instructive.push('illoin');
    declesions[9].plural.abessive.push('illoitta');
    declesions[9].plural.comitative.push('iltoineen');
    
    declesions.push(new Declesion());
    declesions[10].singular.nominative.push('ranta');
    declesions[10].singular.genitive.push('rannan');
    declesions[10].singular.partitive.push('rantaa');
    declesions[10].singular.nominativeAccusative.push('ranta');
    declesions[10].singular.genitiveAccusative.push('rannan');
    declesions[10].singular.inessive.push('rannassa');
    declesions[10].singular.elative.push('rannasta');
    declesions[10].singular.illative.push('rantaan');
    declesions[10].singular.adessive.push('rannalla');
    declesions[10].singular.ablative.push('rannalta');
    declesions[10].singular.allative.push('rannalle');
    declesions[10].singular.essive.push('rantana');
    declesions[10].singular.translative.push('rannaksi');
    declesions[10].singular.abessive.push('rannatta');
    declesions[10].plural.nominative.push('rannat');
    declesions[10].plural.genitive = ['rantojen', 'rantain'].sort();
    declesions[10].plural.partitive.push('rantoja');
    declesions[10].plural.nominativeAccusative.push('rannat');
    declesions[10].plural.inessive.push('rannoissa');
    declesions[10].plural.elative.push('rannoista');
    declesions[10].plural.illative.push('rantoihin');
    declesions[10].plural.adessive.push('rannoilla');
    declesions[10].plural.ablative.push('rannoilta');
    declesions[10].plural.allative.push('rannoille');
    declesions[10].plural.essive.push('rantoina');
    declesions[10].plural.translative.push('rannoiksi');
    declesions[10].plural.instructive.push('rannoin');
    declesions[10].plural.abessive.push('rannoitta');
    declesions[10].plural.comitative.push('rantoineen');
    
    declesions.push(new Declesion());
    declesions[11].singular.nominative.push('parta');
    declesions[11].singular.genitive.push('parran');
    declesions[11].singular.partitive.push('partaa');
    declesions[11].singular.nominativeAccusative.push('parta');
    declesions[11].singular.genitiveAccusative.push('parran');
    declesions[11].singular.inessive.push('parrassa');
    declesions[11].singular.elative.push('parrasta');
    declesions[11].singular.illative.push('partaan');
    declesions[11].singular.adessive.push('parralla');
    declesions[11].singular.ablative.push('parralta');
    declesions[11].singular.allative.push('parralle');
    declesions[11].singular.essive.push('partana');
    declesions[11].singular.translative.push('parraksi');
    declesions[11].singular.abessive.push('parratta');
    declesions[11].plural.nominative.push('parrat');
    declesions[11].plural.genitive = ['partojen', 'partain'].sort();
    declesions[11].plural.partitive.push('partoja');
    declesions[11].plural.nominativeAccusative.push('parrat');
    declesions[11].plural.inessive.push('parroissa');
    declesions[11].plural.elative.push('parroista');
    declesions[11].plural.illative.push('partoihin');
    declesions[11].plural.adessive.push('parroilla');
    declesions[11].plural.ablative.push('parroilta');
    declesions[11].plural.allative.push('parroille');
    declesions[11].plural.essive.push('partoina');
    declesions[11].plural.translative.push('parroiksi');
    declesions[11].plural.instructive.push('parroin');
    declesions[11].plural.abessive.push('parroitta');
    declesions[11].plural.comitative.push('partoineen');
    
    declesions.push(new Declesion());
    declesions[12].singular.nominative.push('Vedda');
    declesions[12].singular.genitive.push('Vedan');
    declesions[12].singular.partitive.push('Veddaa');
    declesions[12].singular.nominativeAccusative.push('Vedda');
    declesions[12].singular.genitiveAccusative.push('Vedan');
    declesions[12].singular.inessive.push('Vedassa');
    declesions[12].singular.elative.push('Vedasta');
    declesions[12].singular.illative.push('Veddaan');
    declesions[12].singular.adessive.push('Vedalla');
    declesions[12].singular.ablative.push('Vedalta');
    declesions[12].singular.allative.push('Vedalle');
    declesions[12].singular.essive.push('Veddana');
    declesions[12].singular.translative.push('Vedaksi');
    declesions[12].singular.abessive.push('Vedatta');
    declesions[12].plural.nominative.push('Vedat');
    declesions[12].plural.genitive = ['Veddojen', 'Veddain'].sort();
    declesions[12].plural.partitive.push('Veddoja');
    declesions[12].plural.nominativeAccusative.push('Vedat');
    declesions[12].plural.inessive.push('Vedoissa');
    declesions[12].plural.elative.push('Vedoista');
    declesions[12].plural.illative.push('Veddoihin');
    declesions[12].plural.adessive.push('Vedoilla');
    declesions[12].plural.ablative.push('Vedoilta');
    declesions[12].plural.allative.push('Vedoille');
    declesions[12].plural.essive.push('Veddoina');
    declesions[12].plural.translative.push('Vedoiksi');
    declesions[12].plural.instructive.push('Vedoin');
    declesions[12].plural.abessive.push('Vedoitta');
    declesions[12].plural.comitative.push('Veddoineen');
    
    declesions.push(new Declesion());
    declesions[13].singular.nominative.push('uppovaaka');
    declesions[13].singular.genitive.push('uppovaa\'an');
    declesions[13].singular.partitive.push('uppovaakaa');
    declesions[13].singular.nominativeAccusative.push('uppovaaka');
    declesions[13].singular.genitiveAccusative.push('uppovaa\'an');
    declesions[13].singular.inessive.push('uppovaa\'assa');
    declesions[13].singular.elative.push('uppovaa\'asta');
    declesions[13].singular.illative.push('uppovaakaan');
    declesions[13].singular.adessive.push('uppovaa\'alla');
    declesions[13].singular.ablative.push('uppovaa\'alta');
    declesions[13].singular.allative.push('uppovaa\'alle');
    declesions[13].singular.essive.push('uppovaakana');
    declesions[13].singular.translative.push('uppovaa\'aksi');
    declesions[13].singular.abessive.push('uppovaa\'atta');
    declesions[13].plural.nominative.push('uppovaa\'at');
    declesions[13].plural.genitive = ['uppovaakojen', 'uppovaakain'].sort();
    declesions[13].plural.partitive.push('uppovaakoja');
    declesions[13].plural.nominativeAccusative.push('uppovaa\'at');
    declesions[13].plural.inessive.push('uppovaa\'oissa');
    declesions[13].plural.elative.push('uppovaa\'oista');
    declesions[13].plural.illative.push('uppovaakoihin');
    declesions[13].plural.adessive.push('uppovaa\'oilla');
    declesions[13].plural.ablative.push('uppovaa\'oilta');
    declesions[13].plural.allative.push('uppovaa\'oille');
    declesions[13].plural.essive.push('uppovaakoina');
    declesions[13].plural.translative.push('uppovaa\'oiksi');
    declesions[13].plural.instructive.push('uppovaa\'oin');
    declesions[13].plural.abessive.push('uppovaa\'oitta');
    declesions[13].plural.comitative.push('uppovaakoineen');
    
    service.decline('kala').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('markka').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('kauppa').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
    service.decline('mitta').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[3]]);
    });
    service.decline('lika').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[4]]);
    });
    service.decline('halpa').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[5]]);
    });
    service.decline('rauta').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[6]]);
    });
    service.decline('lanka').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[7]]);
    });
    service.decline('kampa').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[8]]);
    });
    service.decline('ilta').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[9]]);
    });
    service.decline('ranta').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[10]]);
    });
    service.decline('parta').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[11]]);
    });
    service.decline('Vedda').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[12]]);
    });
    service.decline('uppovaaka').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[13]]);
    });
  }));

  it('should decline type 10 (koira)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('koira');
    declesions[0].singular.genitive.push('koiran');
    declesions[0].singular.partitive.push('koiraa');
    declesions[0].singular.nominativeAccusative.push('koira');
    declesions[0].singular.genitiveAccusative.push('koiran');
    declesions[0].singular.inessive.push('koirassa');
    declesions[0].singular.elative.push('koirasta');
    declesions[0].singular.illative.push('koiraan');
    declesions[0].singular.adessive.push('koiralla');
    declesions[0].singular.ablative.push('koiralta');
    declesions[0].singular.allative.push('koiralle');
    declesions[0].singular.essive.push('koirana');
    declesions[0].singular.translative.push('koiraksi');
    declesions[0].singular.abessive.push('koiratta');
    declesions[0].plural.nominative.push('koirat');
    declesions[0].plural.genitive = ['koirien', 'koirain'].sort();
    declesions[0].plural.partitive.push('koiria');
    declesions[0].plural.nominativeAccusative.push('koirat');
    declesions[0].plural.inessive.push('koirissa');
    declesions[0].plural.elative.push('koirista');
    declesions[0].plural.illative.push('koiriin');
    declesions[0].plural.adessive.push('koirilla');
    declesions[0].plural.ablative.push('koirilta');
    declesions[0].plural.allative.push('koirille');
    declesions[0].plural.essive.push('koirina');
    declesions[0].plural.translative.push('koiriksi');
    declesions[0].plural.instructive.push('koirin');
    declesions[0].plural.abessive.push('koiritta');
    declesions[0].plural.comitative.push('koirineen');
    
    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('seitsemän');
    declesions[1].singular.genitive.push('seitsemän');
    declesions[1].singular.partitive.push('seitsemää');
    declesions[1].singular.nominativeAccusative.push('seitsemän');
    declesions[1].singular.genitiveAccusative.push('seitsemän');
    declesions[1].singular.inessive.push('seitsemässä');
    declesions[1].singular.elative.push('seitsemästä');
    declesions[1].singular.illative.push('seitsemään');
    declesions[1].singular.adessive.push('seitsemällä');
    declesions[1].singular.ablative.push('seitsemältä');
    declesions[1].singular.allative.push('seitsemälle');
    declesions[1].singular.essive.push('seitsemänä');
    declesions[1].singular.translative.push('seitsemäksi');
    declesions[1].singular.abessive.push('seitsemättä');
    declesions[1].plural.nominative.push('seitsemät');
    declesions[1].plural.genitive = ['seitsemien', 'seitsemäin'].sort();
    declesions[1].plural.partitive.push('seitsemiä');
    declesions[1].plural.nominativeAccusative.push('seitsemät');
    declesions[1].plural.inessive.push('seitsemissä');
    declesions[1].plural.elative.push('seitsemistä');
    declesions[1].plural.illative.push('seitsemiin');
    declesions[1].plural.adessive.push('seitsemillä');
    declesions[1].plural.ablative.push('seitsemiltä');
    declesions[1].plural.allative.push('seitsemille');
    declesions[1].plural.essive.push('seitseminä');
    declesions[1].plural.translative.push('seitsemiksi');
    declesions[1].plural.instructive.push('seitsemin');
    declesions[1].plural.abessive.push('seitsemittä');
    declesions[1].plural.comitative.push('seitsemineen');

    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('kahdeksan');
    declesions[2].singular.genitive.push('kahdeksan');
    declesions[2].singular.partitive.push('kahdeksaa');
    declesions[2].singular.nominativeAccusative.push('kahdeksan');
    declesions[2].singular.genitiveAccusative.push('kahdeksan');
    declesions[2].singular.inessive.push('kahdeksassa');
    declesions[2].singular.elative.push('kahdeksasta');
    declesions[2].singular.illative.push('kahdeksaan');
    declesions[2].singular.adessive.push('kahdeksalla');
    declesions[2].singular.ablative.push('kahdeksalta');
    declesions[2].singular.allative.push('kahdeksalle');
    declesions[2].singular.essive.push('kahdeksana');
    declesions[2].singular.translative.push('kahdeksaksi');
    declesions[2].singular.abessive.push('kahdeksatta');
    declesions[2].plural.nominative.push('kahdeksat');
    declesions[2].plural.genitive = ['kahdeksien', 'kahdeksain'].sort();
    declesions[2].plural.partitive.push('kahdeksia');
    declesions[2].plural.nominativeAccusative.push('kahdeksat');
    declesions[2].plural.inessive.push('kahdeksissa');
    declesions[2].plural.elative.push('kahdeksista');
    declesions[2].plural.illative.push('kahdeksiin');
    declesions[2].plural.adessive.push('kahdeksilla');
    declesions[2].plural.ablative.push('kahdeksilta');
    declesions[2].plural.allative.push('kahdeksille');
    declesions[2].plural.essive.push('kahdeksina');
    declesions[2].plural.translative.push('kahdeksiksi');
    declesions[2].plural.instructive.push('kahdeksin');
    declesions[2].plural.abessive.push('kahdeksitta');
    declesions[2].plural.comitative.push('kahdeksineen');
    
    declesions.push(new Declesion());
    declesions[3].singular.nominative.push('yhdeksän');
    declesions[3].singular.genitive.push('yhdeksän');
    declesions[3].singular.partitive.push('yhdeksää');
    declesions[3].singular.nominativeAccusative.push('yhdeksän');
    declesions[3].singular.genitiveAccusative.push('yhdeksän');
    declesions[3].singular.inessive.push('yhdeksässä');
    declesions[3].singular.elative.push('yhdeksästä');
    declesions[3].singular.illative.push('yhdeksään');
    declesions[3].singular.adessive.push('yhdeksällä');
    declesions[3].singular.ablative.push('yhdeksältä');
    declesions[3].singular.allative.push('yhdeksälle');
    declesions[3].singular.essive.push('yhdeksänä');
    declesions[3].singular.translative.push('yhdeksäksi');
    declesions[3].singular.abessive.push('yhdeksättä');
    declesions[3].plural.nominative.push('yhdeksät');
    declesions[3].plural.genitive = ['yhdeksien', 'yhdeksäin'].sort();
    declesions[3].plural.partitive.push('yhdeksiä');
    declesions[3].plural.nominativeAccusative.push('yhdeksät');
    declesions[3].plural.inessive.push('yhdeksissä');
    declesions[3].plural.elative.push('yhdeksistä');
    declesions[3].plural.illative.push('yhdeksiin');
    declesions[3].plural.adessive.push('yhdeksillä');
    declesions[3].plural.ablative.push('yhdeksiltä');
    declesions[3].plural.allative.push('yhdeksille');
    declesions[3].plural.essive.push('yhdeksinä');
    declesions[3].plural.translative.push('yhdeksiksi');
    declesions[3].plural.instructive.push('yhdeksin');
    declesions[3].plural.abessive.push('yhdeksittä');
    declesions[3].plural.comitative.push('yhdeksineen');

    declesions.push(new Declesion());
    declesions[4].singular.nominative.push('kukka');
    declesions[4].singular.genitive.push('kukan');
    declesions[4].singular.partitive.push('kukkaa');
    declesions[4].singular.nominativeAccusative.push('kukka');
    declesions[4].singular.genitiveAccusative.push('kukan');
    declesions[4].singular.inessive.push('kukassa');
    declesions[4].singular.elative.push('kukasta');
    declesions[4].singular.illative.push('kukkaan');
    declesions[4].singular.adessive.push('kukalla');
    declesions[4].singular.ablative.push('kukalta');
    declesions[4].singular.allative.push('kukalle');
    declesions[4].singular.essive.push('kukkana');
    declesions[4].singular.translative.push('kukaksi');
    declesions[4].singular.abessive.push('kukatta');
    declesions[4].plural.nominative.push('kukat');
    declesions[4].plural.genitive = ['kukkien', 'kukkain'].sort();
    declesions[4].plural.partitive.push('kukkia');
    declesions[4].plural.nominativeAccusative.push('kukat');
    declesions[4].plural.inessive.push('kukissa');
    declesions[4].plural.elative.push('kukista');
    declesions[4].plural.illative.push('kukkiin');
    declesions[4].plural.adessive.push('kukilla');
    declesions[4].plural.ablative.push('kukilta');
    declesions[4].plural.allative.push('kukille');
    declesions[4].plural.essive.push('kukkina');
    declesions[4].plural.translative.push('kukiksi');
    declesions[4].plural.instructive.push('kukin');
    declesions[4].plural.abessive.push('kukitta');
    declesions[4].plural.comitative.push('kukkineen');

    declesions.push(new Declesion());
    declesions[5].singular.nominative.push('noppa');
    declesions[5].singular.genitive.push('nopan');
    declesions[5].singular.partitive.push('noppaa');
    declesions[5].singular.nominativeAccusative.push('noppa');
    declesions[5].singular.genitiveAccusative.push('nopan');
    declesions[5].singular.inessive.push('nopassa');
    declesions[5].singular.elative.push('nopasta');
    declesions[5].singular.illative.push('noppaan');
    declesions[5].singular.adessive.push('nopalla');
    declesions[5].singular.ablative.push('nopalta');
    declesions[5].singular.allative.push('nopalle');
    declesions[5].singular.essive.push('noppana');
    declesions[5].singular.translative.push('nopaksi');
    declesions[5].singular.abessive.push('nopatta');
    declesions[5].plural.nominative.push('nopat');
    declesions[5].plural.genitive = ['noppien', 'noppain'].sort();
    declesions[5].plural.partitive.push('noppia');
    declesions[5].plural.nominativeAccusative.push('nopat');
    declesions[5].plural.inessive.push('nopissa');
    declesions[5].plural.elative.push('nopista');
    declesions[5].plural.illative.push('noppiin');
    declesions[5].plural.adessive.push('nopilla');
    declesions[5].plural.ablative.push('nopilta');
    declesions[5].plural.allative.push('nopille');
    declesions[5].plural.essive.push('noppina');
    declesions[5].plural.translative.push('nopiksi');
    declesions[5].plural.instructive.push('nopin');
    declesions[5].plural.abessive.push('nopitta');
    declesions[5].plural.comitative.push('noppineen');

    declesions.push(new Declesion());
    declesions[6].singular.nominative.push('rotta');
    declesions[6].singular.genitive.push('rotan');
    declesions[6].singular.partitive.push('rottaa');
    declesions[6].singular.nominativeAccusative.push('rotta');
    declesions[6].singular.genitiveAccusative.push('rotan');
    declesions[6].singular.inessive.push('rotassa');
    declesions[6].singular.elative.push('rotasta');
    declesions[6].singular.illative.push('rottaan');
    declesions[6].singular.adessive.push('rotalla');
    declesions[6].singular.ablative.push('rotalta');
    declesions[6].singular.allative.push('rotalle');
    declesions[6].singular.essive.push('rottana');
    declesions[6].singular.translative.push('rotaksi');
    declesions[6].singular.abessive.push('rotatta');
    declesions[6].plural.nominative.push('rotat');
    declesions[6].plural.genitive = ['rottien', 'rottain'].sort();
    declesions[6].plural.partitive.push('rottia');
    declesions[6].plural.nominativeAccusative.push('rotat');
    declesions[6].plural.inessive.push('rotissa');
    declesions[6].plural.elative.push('rotista');
    declesions[6].plural.illative.push('rottiin');
    declesions[6].plural.adessive.push('rotilla');
    declesions[6].plural.ablative.push('rotilta');
    declesions[6].plural.allative.push('rotille');
    declesions[6].plural.essive.push('rottina');
    declesions[6].plural.translative.push('rotiksi');
    declesions[6].plural.instructive.push('rotin');
    declesions[6].plural.abessive.push('rotitta');
    declesions[6].plural.comitative.push('rottineen');

    declesions.push(new Declesion());
    declesions[7].singular.nominative.push('sulka');
    declesions[7].singular.genitive.push('sulan');
    declesions[7].singular.partitive.push('sulkaa');
    declesions[7].singular.nominativeAccusative.push('sulka');
    declesions[7].singular.genitiveAccusative.push('sulan');
    declesions[7].singular.inessive.push('sulassa');
    declesions[7].singular.elative.push('sulasta');
    declesions[7].singular.illative.push('sulkaan');
    declesions[7].singular.adessive.push('sulalla');
    declesions[7].singular.ablative.push('sulalta');
    declesions[7].singular.allative.push('sulalle');
    declesions[7].singular.essive.push('sulkana');
    declesions[7].singular.translative.push('sulaksi');
    declesions[7].singular.abessive.push('sulatta');
    declesions[7].plural.nominative.push('sulat');
    declesions[7].plural.genitive = ['sulkien', 'sulkain'].sort();
    declesions[7].plural.partitive.push('sulkia');
    declesions[7].plural.nominativeAccusative.push('sulat');
    declesions[7].plural.inessive.push('sulissa');
    declesions[7].plural.elative.push('sulista');
    declesions[7].plural.illative.push('sulkiin');
    declesions[7].plural.adessive.push('sulilla');
    declesions[7].plural.ablative.push('sulilta');
    declesions[7].plural.allative.push('sulille');
    declesions[7].plural.essive.push('sulkina');
    declesions[7].plural.translative.push('suliksi');
    declesions[7].plural.instructive.push('sulin');
    declesions[7].plural.abessive.push('sulitta');
    declesions[7].plural.comitative.push('sulkineen');

    declesions.push(new Declesion());
    declesions[8].singular.nominative.push('leipä');
    declesions[8].singular.genitive.push('leivän');
    declesions[8].singular.partitive.push('leipää');
    declesions[8].singular.nominativeAccusative.push('leipä');
    declesions[8].singular.genitiveAccusative.push('leivän');
    declesions[8].singular.inessive.push('leivässä');
    declesions[8].singular.elative.push('leivästä');
    declesions[8].singular.illative.push('leipään');
    declesions[8].singular.adessive.push('leivällä');
    declesions[8].singular.ablative.push('leivältä');
    declesions[8].singular.allative.push('leivälle');
    declesions[8].singular.essive.push('leipänä');
    declesions[8].singular.translative.push('leiväksi');
    declesions[8].singular.abessive.push('leivättä');
    declesions[8].plural.nominative.push('leivät');
    declesions[8].plural.genitive = ['leipien', 'leipäin'].sort();
    declesions[8].plural.partitive.push('leipiä');
    declesions[8].plural.nominativeAccusative.push('leivät');
    declesions[8].plural.inessive.push('leivissä');
    declesions[8].plural.elative.push('leivistä');
    declesions[8].plural.illative.push('leipiin');
    declesions[8].plural.adessive.push('leivillä');
    declesions[8].plural.ablative.push('leiviltä');
    declesions[8].plural.allative.push('leiville');
    declesions[8].plural.essive.push('leipinä');
    declesions[8].plural.translative.push('leiviksi');
    declesions[8].plural.instructive.push('leivin');
    declesions[8].plural.abessive.push('leivittä');
    declesions[8].plural.comitative.push('leipineen');

    declesions.push(new Declesion());
    declesions[9].singular.nominative.push('sota');
    declesions[9].singular.genitive.push('sodan');
    declesions[9].singular.partitive.push('sotaa');
    declesions[9].singular.nominativeAccusative.push('sota');
    declesions[9].singular.genitiveAccusative.push('sodan');
    declesions[9].singular.inessive.push('sodassa');
    declesions[9].singular.elative.push('sodasta');
    declesions[9].singular.illative.push('sotaan');
    declesions[9].singular.adessive.push('sodalla');
    declesions[9].singular.ablative.push('sodalta');
    declesions[9].singular.allative.push('sodalle');
    declesions[9].singular.essive.push('sotana');
    declesions[9].singular.translative.push('sodaksi');
    declesions[9].singular.abessive.push('sodatta');
    declesions[9].plural.nominative.push('sodat');
    declesions[9].plural.genitive = ['sotien', 'sotain'].sort();
    declesions[9].plural.partitive.push('sotia');
    declesions[9].plural.nominativeAccusative.push('sodat');
    declesions[9].plural.inessive.push('sodissa');
    declesions[9].plural.elative.push('sodista');
    declesions[9].plural.illative.push('sotiin');
    declesions[9].plural.adessive.push('sodilla');
    declesions[9].plural.ablative.push('sodilta');
    declesions[9].plural.allative.push('sodille');
    declesions[9].plural.essive.push('sotina');
    declesions[9].plural.translative.push('sodiksi');
    declesions[9].plural.instructive.push('sodin');
    declesions[9].plural.abessive.push('soditta');
    declesions[9].plural.comitative.push('sotineen');

    declesions.push(new Declesion());
    declesions[10].singular.nominative.push('kenkä');
    declesions[10].singular.genitive.push('kengän');
    declesions[10].singular.partitive.push('kenkää');
    declesions[10].singular.nominativeAccusative.push('kenkä');
    declesions[10].singular.genitiveAccusative.push('kengän');
    declesions[10].singular.inessive.push('kengässä');
    declesions[10].singular.elative.push('kengästä');
    declesions[10].singular.illative.push('kenkään');
    declesions[10].singular.adessive.push('kengällä');
    declesions[10].singular.ablative.push('kengältä');
    declesions[10].singular.allative.push('kengälle');
    declesions[10].singular.essive.push('kenkänä');
    declesions[10].singular.translative.push('kengäksi');
    declesions[10].singular.abessive.push('kengättä');
    declesions[10].plural.nominative.push('kengät');
    declesions[10].plural.genitive = ['kenkien', 'kenkäin'].sort();
    declesions[10].plural.partitive.push('kenkiä');
    declesions[10].plural.nominativeAccusative.push('kengät');
    declesions[10].plural.inessive.push('kengissä');
    declesions[10].plural.elative.push('kengistä');
    declesions[10].plural.illative.push('kenkiin');
    declesions[10].plural.adessive.push('kengillä');
    declesions[10].plural.ablative.push('kengiltä');
    declesions[10].plural.allative.push('kengille');
    declesions[10].plural.essive.push('kenkinä');
    declesions[10].plural.translative.push('kengiksi');
    declesions[10].plural.instructive.push('kengin');
    declesions[10].plural.abessive.push('kengittä');
    declesions[10].plural.comitative.push('kenkineen');

    declesions.push(new Declesion());
    declesions[11].singular.nominative.push('sompa');
    declesions[11].singular.genitive.push('somman');
    declesions[11].singular.partitive.push('sompaa');
    declesions[11].singular.nominativeAccusative.push('sompa');
    declesions[11].singular.genitiveAccusative.push('somman');
    declesions[11].singular.inessive.push('sommassa');
    declesions[11].singular.elative.push('sommasta');
    declesions[11].singular.illative.push('sompaan');
    declesions[11].singular.adessive.push('sommalla');
    declesions[11].singular.ablative.push('sommalta');
    declesions[11].singular.allative.push('sommalle');
    declesions[11].singular.essive.push('sompana');
    declesions[11].singular.translative.push('sommaksi');
    declesions[11].singular.abessive.push('sommatta');
    declesions[11].plural.nominative.push('sommat');
    declesions[11].plural.genitive = ['sompien', 'sompain'].sort();
    declesions[11].plural.partitive.push('sompia');
    declesions[11].plural.nominativeAccusative.push('sommat');
    declesions[11].plural.inessive.push('sommissa');
    declesions[11].plural.elative.push('sommista');
    declesions[11].plural.illative.push('sompiin');
    declesions[11].plural.adessive.push('sommilla');
    declesions[11].plural.ablative.push('sommilta');
    declesions[11].plural.allative.push('sommille');
    declesions[11].plural.essive.push('sompina');
    declesions[11].plural.translative.push('sommiksi');
    declesions[11].plural.instructive.push('sommin');
    declesions[11].plural.abessive.push('sommitta');
    declesions[11].plural.comitative.push('sompineen');

    declesions.push(new Declesion());
    declesions[12].singular.nominative.push('kulta');
    declesions[12].singular.genitive.push('kullan');
    declesions[12].singular.partitive.push('kultaa');
    declesions[12].singular.nominativeAccusative.push('kulta');
    declesions[12].singular.genitiveAccusative.push('kullan');
    declesions[12].singular.inessive.push('kullassa');
    declesions[12].singular.elative.push('kullasta');
    declesions[12].singular.illative.push('kultaan');
    declesions[12].singular.adessive.push('kullalla');
    declesions[12].singular.ablative.push('kullalta');
    declesions[12].singular.allative.push('kullalle');
    declesions[12].singular.essive.push('kultana');
    declesions[12].singular.translative.push('kullaksi');
    declesions[12].singular.abessive.push('kullatta');
    declesions[12].plural.nominative.push('kullat');
    declesions[12].plural.genitive = ['kultien', 'kultain'].sort();
    declesions[12].plural.partitive.push('kultia');
    declesions[12].plural.nominativeAccusative.push('kullat');
    declesions[12].plural.inessive.push('kullissa');
    declesions[12].plural.elative.push('kullista');
    declesions[12].plural.illative.push('kultiin');
    declesions[12].plural.adessive.push('kullilla');
    declesions[12].plural.ablative.push('kullilta');
    declesions[12].plural.allative.push('kullille');
    declesions[12].plural.essive.push('kultina');
    declesions[12].plural.translative.push('kulliksi');
    declesions[12].plural.instructive.push('kullin');
    declesions[12].plural.abessive.push('kullitta');
    declesions[12].plural.comitative.push('kultineen');

    declesions.push(new Declesion());
    declesions[13].singular.nominative.push('kunta');
    declesions[13].singular.genitive.push('kunnan');
    declesions[13].singular.partitive.push('kuntaa');
    declesions[13].singular.nominativeAccusative.push('kunta');
    declesions[13].singular.genitiveAccusative.push('kunnan');
    declesions[13].singular.inessive.push('kunnassa');
    declesions[13].singular.elative.push('kunnasta');
    declesions[13].singular.illative.push('kuntaan');
    declesions[13].singular.adessive.push('kunnalla');
    declesions[13].singular.ablative.push('kunnalta');
    declesions[13].singular.allative.push('kunnalle');
    declesions[13].singular.essive.push('kuntana');
    declesions[13].singular.translative.push('kunnaksi');
    declesions[13].singular.abessive.push('kunnatta');
    declesions[13].plural.nominative.push('kunnat');
    declesions[13].plural.genitive = ['kuntien', 'kuntain'].sort();
    declesions[13].plural.partitive.push('kuntia');
    declesions[13].plural.nominativeAccusative.push('kunnat');
    declesions[13].plural.inessive.push('kunnissa');
    declesions[13].plural.elative.push('kunnista');
    declesions[13].plural.illative.push('kuntiin');
    declesions[13].plural.adessive.push('kunnilla');
    declesions[13].plural.ablative.push('kunnilta');
    declesions[13].plural.allative.push('kunnille');
    declesions[13].plural.essive.push('kuntina');
    declesions[13].plural.translative.push('kunniksi');
    declesions[13].plural.instructive.push('kunnin');
    declesions[13].plural.abessive.push('kunnitta');
    declesions[13].plural.comitative.push('kuntineen');

    declesions.push(new Declesion());
    declesions[14].singular.nominative.push('turta');
    declesions[14].singular.genitive.push('turran');
    declesions[14].singular.partitive.push('turtaa');
    declesions[14].singular.nominativeAccusative.push('turta');
    declesions[14].singular.genitiveAccusative.push('turran');
    declesions[14].singular.inessive.push('turrassa');
    declesions[14].singular.elative.push('turrasta');
    declesions[14].singular.illative.push('turtaan');
    declesions[14].singular.adessive.push('turralla');
    declesions[14].singular.ablative.push('turralta');
    declesions[14].singular.allative.push('turralle');
    declesions[14].singular.essive.push('turtana');
    declesions[14].singular.translative.push('turraksi');
    declesions[14].singular.abessive.push('turratta');
    declesions[14].plural.nominative.push('turrat');
    declesions[14].plural.genitive = ['turtien', 'turtain'].sort();
    declesions[14].plural.partitive.push('turtia');
    declesions[14].plural.nominativeAccusative.push('turrat');
    declesions[14].plural.inessive.push('turrissa');
    declesions[14].plural.elative.push('turrista');
    declesions[14].plural.illative.push('turtiin');
    declesions[14].plural.adessive.push('turrilla');
    declesions[14].plural.ablative.push('turrilta');
    declesions[14].plural.allative.push('turrille');
    declesions[14].plural.essive.push('turtina');
    declesions[14].plural.translative.push('turriksi');
    declesions[14].plural.instructive.push('turrin');
    declesions[14].plural.abessive.push('turritta');
    declesions[14].plural.comitative.push('turtineen');

    declesions.push(new Declesion());
    declesions[15].singular.nominative.push('ylkä');
    declesions[15].singular.genitive.push('yljän');
    declesions[15].singular.partitive.push('ylkää');
    declesions[15].singular.nominativeAccusative.push('ylkä');
    declesions[15].singular.genitiveAccusative.push('yljän');
    declesions[15].singular.inessive.push('yljässä');
    declesions[15].singular.elative.push('yljästä');
    declesions[15].singular.illative.push('ylkään');
    declesions[15].singular.adessive.push('yljällä');
    declesions[15].singular.ablative.push('yljältä');
    declesions[15].singular.allative.push('yljälle');
    declesions[15].singular.essive.push('ylkänä');
    declesions[15].singular.translative.push('yljäksi');
    declesions[15].singular.abessive.push('yljättä');
    declesions[15].plural.nominative.push('yljät');
    declesions[15].plural.genitive = ['ylkien', 'ylkäin'].sort();
    declesions[15].plural.partitive.push('ylkiä');
    declesions[15].plural.nominativeAccusative.push('yljät');
    declesions[15].plural.inessive.push('yljissä');
    declesions[15].plural.elative.push('yljistä');
    declesions[15].plural.illative.push('ylkiin');
    declesions[15].plural.adessive.push('yljillä');
    declesions[15].plural.ablative.push('yljiltä');
    declesions[15].plural.allative.push('yljille');
    declesions[15].plural.essive.push('ylkinä');
    declesions[15].plural.translative.push('yljiksi');
    declesions[15].plural.instructive.push('yljin');
    declesions[15].plural.abessive.push('yljittä');
    declesions[15].plural.comitative.push('ylkineen');

    declesions.push(new Declesion());
    declesions[16].singular.nominative.push('poika');
    declesions[16].singular.genitive.push('pojan');
    declesions[16].singular.partitive.push('poikaa');
    declesions[16].singular.nominativeAccusative.push('poika');
    declesions[16].singular.genitiveAccusative.push('pojan');
    declesions[16].singular.inessive.push('pojassa');
    declesions[16].singular.elative.push('pojasta');
    declesions[16].singular.illative.push('poikaan');
    declesions[16].singular.adessive.push('pojalla');
    declesions[16].singular.ablative.push('pojalta');
    declesions[16].singular.allative.push('pojalle');
    declesions[16].singular.essive.push('poikana');
    declesions[16].singular.translative.push('pojaksi');
    declesions[16].singular.abessive.push('pojatta');
    declesions[16].plural.nominative.push('pojat');
    declesions[16].plural.genitive = ['poikien', 'poikain'].sort();
    declesions[16].plural.partitive.push('poikia');
    declesions[16].plural.nominativeAccusative.push('pojat');
    declesions[16].plural.inessive.push('pojissa');
    declesions[16].plural.elative.push('pojista');
    declesions[16].plural.illative.push('poikiin');
    declesions[16].plural.adessive.push('pojilla');
    declesions[16].plural.ablative.push('pojilta');
    declesions[16].plural.allative.push('pojille');
    declesions[16].plural.essive.push('poikina');
    declesions[16].plural.translative.push('pojiksi');
    declesions[16].plural.instructive.push('pojin');
    declesions[16].plural.abessive.push('pojitta');
    declesions[16].plural.comitative.push('poikineen');

    declesions.push(new Declesion());
    declesions[17].singular.nominative.push('ruoka');
    declesions[17].singular.genitive.push('ruoan');
    declesions[17].singular.partitive.push('ruokaa');
    declesions[17].singular.nominativeAccusative.push('ruoka');
    declesions[17].singular.genitiveAccusative.push('ruoan');
    declesions[17].singular.inessive.push('ruoassa');
    declesions[17].singular.elative.push('ruoasta');
    declesions[17].singular.illative.push('ruokaan');
    declesions[17].singular.adessive.push('ruoalla');
    declesions[17].singular.ablative.push('ruoalta');
    declesions[17].singular.allative.push('ruoalle');
    declesions[17].singular.essive.push('ruokana');
    declesions[17].singular.translative.push('ruoaksi');
    declesions[17].singular.abessive.push('ruoatta');
    declesions[17].plural.nominative.push('ruoat');
    declesions[17].plural.genitive = ['ruokien', 'ruokain'].sort();
    declesions[17].plural.partitive.push('ruokia');
    declesions[17].plural.nominativeAccusative.push('ruoat');
    declesions[17].plural.inessive.push('ruoissa');
    declesions[17].plural.elative.push('ruoista');
    declesions[17].plural.illative.push('ruokiin');
    declesions[17].plural.adessive.push('ruoilla');
    declesions[17].plural.ablative.push('ruoilta');
    declesions[17].plural.allative.push('ruoille');
    declesions[17].plural.essive.push('ruokina');
    declesions[17].plural.translative.push('ruoiksi');
    declesions[17].plural.instructive.push('ruoin');
    declesions[17].plural.abessive.push('ruoitta');
    declesions[17].plural.comitative.push('ruokineen');
    declesions.push(new Declesion());
    declesions[18].singular.nominative.push('ruoka');
    declesions[18].singular.genitive.push('ruuan');
    declesions[18].singular.partitive.push('ruokaa');
    declesions[18].singular.nominativeAccusative.push('ruoka');
    declesions[18].singular.genitiveAccusative.push('ruuan');
    declesions[18].singular.inessive.push('ruuassa');
    declesions[18].singular.elative.push('ruuasta');
    declesions[18].singular.illative.push('ruokaan');
    declesions[18].singular.adessive.push('ruualla');
    declesions[18].singular.ablative.push('ruualta');
    declesions[18].singular.allative.push('ruualle');
    declesions[18].singular.essive.push('ruokana');
    declesions[18].singular.translative.push('ruuaksi');
    declesions[18].singular.abessive.push('ruuatta');
    declesions[18].plural.nominative.push('ruuat');
    declesions[18].plural.genitive = ['ruokien', 'ruokain'].sort();
    declesions[18].plural.partitive.push('ruokia');
    declesions[18].plural.nominativeAccusative.push('ruuat');
    declesions[18].plural.inessive.push('ruuissa');
    declesions[18].plural.elative.push('ruuista');
    declesions[18].plural.illative.push('ruokiin');
    declesions[18].plural.adessive.push('ruuilla');
    declesions[18].plural.ablative.push('ruuilta');
    declesions[18].plural.allative.push('ruuille');
    declesions[18].plural.essive.push('ruokina');
    declesions[18].plural.translative.push('ruuiksi');
    declesions[18].plural.instructive.push('ruuin');
    declesions[18].plural.abessive.push('ruuitta');
    declesions[18].plural.comitative.push('ruokineen');
    
    service.decline('koira').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('seitsemän').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('kahdeksan').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
    service.decline('yhdeksän').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[3]]);
    });
    service.decline('kukka').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[4]]);
    });
    service.decline('noppa').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[5]]);
    });
    service.decline('rotta').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[6]]);
    });
    service.decline('sulka').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[7]]);
    });
    service.decline('leipä').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[8]]);
    });
    service.decline('sota').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[9]]);
    });
    service.decline('kenkä').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[10]]);
    });
    service.decline('sompa').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[11]]);
    });
    service.decline('kulta').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[12]]);
    });
    service.decline('kunta').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[13]]);
    });
    service.decline('turta').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[14]]);
    });
    service.decline('ylkä').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[15]]);
    });
    service.decline('poika').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[16]]);
    });
    service.decline('ruoka').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[17], declesions[18]]);
    });
  }));

  it('should decline type 11 (omena)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('omena');
    declesions[0].singular.genitive.push('omenan');
    declesions[0].singular.partitive.push('omenaa');
    declesions[0].singular.nominativeAccusative.push('omena');
    declesions[0].singular.genitiveAccusative.push('omenan');
    declesions[0].singular.inessive.push('omenassa');
    declesions[0].singular.elative.push('omenasta');
    declesions[0].singular.illative.push('omenaan');
    declesions[0].singular.adessive.push('omenalla');
    declesions[0].singular.ablative.push('omenalta');
    declesions[0].singular.allative.push('omenalle');
    declesions[0].singular.essive.push('omenana');
    declesions[0].singular.translative.push('omenaksi');
    declesions[0].singular.abessive.push('omenatta');
    declesions[0].plural.nominative.push('omenat');
    declesions[0].plural.genitive = ['omenien', 'omenain', 'omenoiden', 'omenoitten', 'omenojen'].sort();
    declesions[0].plural.partitive = ['omenia', 'omenoita', 'omenoja'].sort();
    declesions[0].plural.nominativeAccusative.push('omenat');
    declesions[0].plural.inessive = ['omenissa', 'omenoissa'].sort();
    declesions[0].plural.elative = ['omenista', 'omenoista'].sort();
    declesions[0].plural.illative = ['omeniin', 'omenoihin'].sort();
    declesions[0].plural.adessive = ['omenilla', 'omenoilla'].sort();
    declesions[0].plural.ablative = ['omenilta', 'omenoilta'].sort();
    declesions[0].plural.allative = ['omenille', 'omenoille'].sort();
    declesions[0].plural.essive = ['omenina', 'omenoina'].sort();
    declesions[0].plural.translative = ['omeniksi', 'omenoiksi'].sort();
    declesions[0].plural.instructive = ['omenin', 'omenoin'].sort();
    declesions[0].plural.abessive = ['omenitta', 'omenoitta'].sort();
    declesions[0].plural.comitative = ['omenineen', 'omenoineen'].sort();

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('päärynä');
    declesions[1].singular.genitive.push('päärynän');
    declesions[1].singular.partitive.push('päärynää');
    declesions[1].singular.nominativeAccusative.push('päärynä');
    declesions[1].singular.genitiveAccusative.push('päärynän');
    declesions[1].singular.inessive.push('päärynässä');
    declesions[1].singular.elative.push('päärynästä');
    declesions[1].singular.illative.push('päärynään');
    declesions[1].singular.adessive.push('päärynällä');
    declesions[1].singular.ablative.push('päärynältä');
    declesions[1].singular.allative.push('päärynälle');
    declesions[1].singular.essive.push('päärynänä');
    declesions[1].singular.translative.push('päärynäksi');
    declesions[1].singular.abessive.push('päärynättä');
    declesions[1].plural.nominative.push('päärynät');
    declesions[1].plural.genitive = ['päärynien', 'päärynäin', 'päärynöiden', 'päärynöitten', 'päärynöjen'].sort();
    declesions[1].plural.partitive = ['pääryniä', 'päärynöitä', 'päärynöjä'].sort();
    declesions[1].plural.nominativeAccusative.push('päärynät');
    declesions[1].plural.inessive = ['päärynissä', 'päärynöissä'].sort();
    declesions[1].plural.elative = ['päärynistä', 'päärynöistä'].sort();
    declesions[1].plural.illative = ['pääryniin', 'päärynöihin'].sort();
    declesions[1].plural.adessive = ['päärynillä', 'päärynöillä'].sort();
    declesions[1].plural.ablative = ['pääryniltä', 'päärynöiltä'].sort();
    declesions[1].plural.allative = ['päärynille', 'päärynöille'].sort();
    declesions[1].plural.essive = ['pääryninä', 'päärynöinä'].sort();
    declesions[1].plural.translative = ['pääryniksi', 'päärynöiksi'].sort();
    declesions[1].plural.instructive = ['päärynin', 'päärynöin'].sort();
    declesions[1].plural.abessive = ['päärynittä', 'päärynöittä'].sort();
    declesions[1].plural.comitative = ['päärynineen', 'päärynöineen'].sort();

    service.decline('omena').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('päärynä').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
  }));

  it('should decline type 12 (kulkija)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('kulkija');
    declesions[0].singular.genitive.push('kulkijan');
    declesions[0].singular.partitive.push('kulkijaa');
    declesions[0].singular.nominativeAccusative.push('kulkija');
    declesions[0].singular.genitiveAccusative.push('kulkijan');
    declesions[0].singular.inessive.push('kulkijassa');
    declesions[0].singular.elative.push('kulkijasta');
    declesions[0].singular.illative.push('kulkijaan');
    declesions[0].singular.adessive.push('kulkijalla');
    declesions[0].singular.ablative.push('kulkijalta');
    declesions[0].singular.allative.push('kulkijalle');
    declesions[0].singular.essive.push('kulkijana');
    declesions[0].singular.translative.push('kulkijaksi');
    declesions[0].singular.abessive.push('kulkijatta');
    declesions[0].plural.nominative.push('kulkijat');
    declesions[0].plural.genitive = ['kulkijain', 'kulkijoiden', 'kulkijoitten'].sort();
    declesions[0].plural.partitive.push('kulkijoita');
    declesions[0].plural.nominativeAccusative.push('kulkijat');
    declesions[0].plural.inessive.push('kulkijoissa');
    declesions[0].plural.elative.push('kulkijoista');
    declesions[0].plural.illative.push('kulkijoihin');
    declesions[0].plural.adessive.push('kulkijoilla');
    declesions[0].plural.ablative.push('kulkijoilta');
    declesions[0].plural.allative.push('kulkijoille');
    declesions[0].plural.essive.push('kulkijoina');
    declesions[0].plural.translative.push('kulkijoiksi');
    declesions[0].plural.instructive.push('kulkijoin');
    declesions[0].plural.abessive.push('kulkijoitta');
    declesions[0].plural.comitative.push('kulkijoineen');

    service.decline('kulkija').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 13 (katiska)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('katiska');
    declesions[0].singular.genitive.push('katiskan');
    declesions[0].singular.partitive.push('katiskaa');
    declesions[0].singular.nominativeAccusative.push('katiska');
    declesions[0].singular.genitiveAccusative.push('katiskan');
    declesions[0].singular.inessive.push('katiskassa');
    declesions[0].singular.elative.push('katiskasta');
    declesions[0].singular.illative.push('katiskaan');
    declesions[0].singular.adessive.push('katiskalla');
    declesions[0].singular.ablative.push('katiskalta');
    declesions[0].singular.allative.push('katiskalle');
    declesions[0].singular.essive.push('katiskana');
    declesions[0].singular.translative.push('katiskaksi');
    declesions[0].singular.abessive.push('katiskatta');
    declesions[0].plural.nominative.push('katiskat');
    declesions[0].plural.genitive = ['katiskain', 'katiskoiden', 'katiskoitten', 'katiskojen'].sort();
    declesions[0].plural.partitive = ['katiskoita', 'katiskoja'].sort();
    declesions[0].plural.nominativeAccusative.push('katiskat');
    declesions[0].plural.inessive.push('katiskoissa');
    declesions[0].plural.elative.push('katiskoista');
    declesions[0].plural.illative.push('katiskoihin');
    declesions[0].plural.adessive.push('katiskoilla');
    declesions[0].plural.ablative.push('katiskoilta');
    declesions[0].plural.allative.push('katiskoille');
    declesions[0].plural.essive.push('katiskoina');
    declesions[0].plural.translative.push('katiskoiksi');
    declesions[0].plural.instructive.push('katiskoin');
    declesions[0].plural.abessive.push('katiskoitta');
    declesions[0].plural.comitative.push('katiskoineen');

    service.decline('katiska').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 14 (solakka)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('solakka');
    declesions[0].singular.genitive.push('solakan');
    declesions[0].singular.partitive.push('solakkaa');
    declesions[0].singular.nominativeAccusative.push('solakka');
    declesions[0].singular.genitiveAccusative.push('solakan');
    declesions[0].singular.inessive.push('solakassa');
    declesions[0].singular.elative.push('solakasta');
    declesions[0].singular.illative.push('solakkaan');
    declesions[0].singular.adessive.push('solakalla');
    declesions[0].singular.ablative.push('solakalta');
    declesions[0].singular.allative.push('solakalle');
    declesions[0].singular.essive.push('solakkana');
    declesions[0].singular.translative.push('solakaksi');
    declesions[0].singular.abessive.push('solakatta');
    declesions[0].plural.nominative.push('solakat');
    declesions[0].plural.genitive = ['solakkain', 'solakoiden', 'solakoitten', 'solakkojen'].sort();
    declesions[0].plural.partitive = ['solakoita', 'solakkoja'].sort();
    declesions[0].plural.nominativeAccusative.push('solakat');
    declesions[0].plural.inessive.push('solakoissa');
    declesions[0].plural.elative.push('solakoista');
    declesions[0].plural.illative = ['solakkoihin', 'solakoihin'].sort();
    declesions[0].plural.adessive.push('solakoilla');
    declesions[0].plural.ablative.push('solakoilta');
    declesions[0].plural.allative.push('solakoille');
    declesions[0].plural.essive.push('solakkoina');
    declesions[0].plural.translative.push('solakoiksi');
    declesions[0].plural.instructive.push('solakoin');
    declesions[0].plural.abessive.push('solakoitta');
    declesions[0].plural.comitative.push('solakkoineen');

    service.decline('solakka').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 15 (korkea)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('korkea');
    declesions[0].singular.genitive.push('korkean');
    declesions[0].singular.partitive = ['korkeaa', 'korkeata'].sort();
    declesions[0].singular.nominativeAccusative.push('korkea');
    declesions[0].singular.genitiveAccusative.push('korkean');
    declesions[0].singular.inessive.push('korkeassa');
    declesions[0].singular.elative.push('korkeasta');
    declesions[0].singular.illative.push('korkeaan');
    declesions[0].singular.adessive.push('korkealla');
    declesions[0].singular.ablative.push('korkealta');
    declesions[0].singular.allative.push('korkealle');
    declesions[0].singular.essive.push('korkeana');
    declesions[0].singular.translative.push('korkeaksi');
    declesions[0].singular.abessive.push('korkeatta');
    declesions[0].plural.nominative.push('korkeat');
    declesions[0].plural.genitive = ['korkeain', 'korkeiden', 'korkeitten'].sort();
    declesions[0].plural.partitive.push('korkeita');
    declesions[0].plural.nominativeAccusative.push('korkeat');
    declesions[0].plural.inessive.push('korkeissa');
    declesions[0].plural.elative.push('korkeista');
    declesions[0].plural.illative = ['korkeihin', 'korkeisiin'].sort();
    declesions[0].plural.adessive.push('korkeilla');
    declesions[0].plural.ablative.push('korkeilta');
    declesions[0].plural.allative.push('korkeille');
    declesions[0].plural.essive.push('korkeina');
    declesions[0].plural.translative.push('korkeiksi');
    declesions[0].plural.instructive.push('korkein');
    declesions[0].plural.abessive.push('korkeitta');
    declesions[0].plural.comitative.push('korkeineen');


    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('tärkeä');
    declesions[1].singular.genitive.push('tärkeän');
    declesions[1].singular.partitive = ['tärkeää', 'tärkeätä'].sort();
    declesions[1].singular.nominativeAccusative.push('tärkeä');
    declesions[1].singular.genitiveAccusative.push('tärkeän');
    declesions[1].singular.inessive.push('tärkeässä');
    declesions[1].singular.elative.push('tärkeästä');
    declesions[1].singular.illative.push('tärkeään');
    declesions[1].singular.adessive.push('tärkeällä');
    declesions[1].singular.ablative.push('tärkeältä');
    declesions[1].singular.allative.push('tärkeälle');
    declesions[1].singular.essive.push('tärkeänä');
    declesions[1].singular.translative.push('tärkeäksi');
    declesions[1].singular.abessive.push('tärkeättä');
    declesions[1].plural.nominative.push('tärkeät');
    declesions[1].plural.genitive = ['tärkeäin', 'tärkeiden', 'tärkeitten'].sort();
    declesions[1].plural.partitive.push('tärkeitä');
    declesions[1].plural.nominativeAccusative.push('tärkeät');
    declesions[1].plural.inessive.push('tärkeissä');
    declesions[1].plural.elative.push('tärkeistä');
    declesions[1].plural.illative = ['tärkeihin', 'tärkeisiin'].sort();
    declesions[1].plural.adessive.push('tärkeillä');
    declesions[1].plural.ablative.push('tärkeiltä');
    declesions[1].plural.allative.push('tärkeille');
    declesions[1].plural.essive.push('tärkeinä');
    declesions[1].plural.translative.push('tärkeiksi');
    declesions[1].plural.instructive.push('tärkein');
    declesions[1].plural.abessive.push('tärkeittä');
    declesions[1].plural.comitative.push('tärkeineen');

    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('ainoa');
    declesions[2].singular.genitive.push('ainoan');
    declesions[2].singular.partitive = ['ainoaa', 'ainoata'].sort();
    declesions[2].singular.nominativeAccusative.push('ainoa');
    declesions[2].singular.genitiveAccusative.push('ainoan');
    declesions[2].singular.inessive.push('ainoassa');
    declesions[2].singular.elative.push('ainoasta');
    declesions[2].singular.illative.push('ainoaan');
    declesions[2].singular.adessive.push('ainoalla');
    declesions[2].singular.ablative.push('ainoalta');
    declesions[2].singular.allative.push('ainoalle');
    declesions[2].singular.essive.push('ainoana');
    declesions[2].singular.translative.push('ainoaksi');
    declesions[2].singular.abessive.push('ainoatta');
    declesions[2].plural.nominative.push('ainoat');
    declesions[2].plural.genitive = ['ainoain', 'ainoiden', 'ainoitten'].sort();
    declesions[2].plural.partitive.push('ainoita');
    declesions[2].plural.nominativeAccusative.push('ainoat');
    declesions[2].plural.inessive.push('ainoissa');
    declesions[2].plural.elative.push('ainoista');
    declesions[2].plural.illative = ['ainoihin', 'ainoisiin'].sort();
    declesions[2].plural.adessive.push('ainoilla');
    declesions[2].plural.ablative.push('ainoilta');
    declesions[2].plural.allative.push('ainoille');
    declesions[2].plural.essive.push('ainoina');
    declesions[2].plural.translative.push('ainoiksi');
    declesions[2].plural.instructive.push('ainoin');
    declesions[2].plural.abessive.push('ainoitta');
    declesions[2].plural.comitative.push('ainoineen');

    service.decline('korkea').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('tärkeä').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('ainoa').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
  }));

  it('should decline type 16 (vanhempi)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('vanhempi');
    declesions[0].singular.genitive.push('vanhemman');
    declesions[0].singular.partitive.push('vanhempaa');
    declesions[0].singular.nominativeAccusative.push('vanhempi');
    declesions[0].singular.genitiveAccusative.push('vanhemman');
    declesions[0].singular.inessive.push('vanhemmassa');
    declesions[0].singular.elative.push('vanhemmasta');
    declesions[0].singular.illative.push('vanhempaan');
    declesions[0].singular.adessive.push('vanhemmalla');
    declesions[0].singular.ablative.push('vanhemmalta');
    declesions[0].singular.allative.push('vanhemmalle');
    declesions[0].singular.essive.push('vanhempana');
    declesions[0].singular.translative.push('vanhemmaksi');
    declesions[0].singular.abessive.push('vanhemmatta');
    declesions[0].plural.nominative.push('vanhemmat');
    declesions[0].plural.genitive = ['vanhempien', 'vanhempain'].sort();
    declesions[0].plural.partitive.push('vanhempia');
    declesions[0].plural.nominativeAccusative.push('vanhemmat');
    declesions[0].plural.inessive.push('vanhemmissa');
    declesions[0].plural.elative.push('vanhemmista');
    declesions[0].plural.illative.push('vanhempiin');
    declesions[0].plural.adessive.push('vanhemmilla');
    declesions[0].plural.ablative.push('vanhemmilta');
    declesions[0].plural.allative.push('vanhemmille');
    declesions[0].plural.essive.push('vanhempina');
    declesions[0].plural.translative.push('vanhemmiksi');
    declesions[0].plural.instructive.push('vanhemmin');
    declesions[0].plural.abessive.push('vanhemmitta');
    declesions[0].plural.comitative.push('vanhempineen');

    service.decline('vanhempi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 17 (vapaa)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('vapaa');
    declesions[0].singular.genitive.push('vapaan');
    declesions[0].singular.partitive.push('vapaata');
    declesions[0].singular.nominativeAccusative.push('vapaa');
    declesions[0].singular.genitiveAccusative.push('vapaan');
    declesions[0].singular.inessive.push('vapaassa');
    declesions[0].singular.elative.push('vapaasta');
    declesions[0].singular.illative.push('vapaaseen');
    declesions[0].singular.adessive.push('vapaalla');
    declesions[0].singular.ablative.push('vapaalta');
    declesions[0].singular.allative.push('vapaalle');
    declesions[0].singular.essive.push('vapaana');
    declesions[0].singular.translative.push('vapaaksi');
    declesions[0].singular.abessive.push('vapaatta');
    declesions[0].plural.nominative.push('vapaat');
    declesions[0].plural.genitive = ['vapaiden', 'vapaitten'].sort();
    declesions[0].plural.partitive.push('vapaita');
    declesions[0].plural.nominativeAccusative.push('vapaat');
    declesions[0].plural.inessive.push('vapaissa');
    declesions[0].plural.elative.push('vapaista');
    declesions[0].plural.illative = ['vapaisiin', 'vapaihin'].sort();
    declesions[0].plural.adessive.push('vapailla');
    declesions[0].plural.ablative.push('vapailta');
    declesions[0].plural.allative.push('vapaille');
    declesions[0].plural.essive.push('vapaina');
    declesions[0].plural.translative.push('vapaiksi');
    declesions[0].plural.instructive.push('vapain');
    declesions[0].plural.abessive.push('vapaitta');
    declesions[0].plural.comitative.push('vapaineen');

    service.decline('vapaa').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 18 (maa)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('maa');
    declesions[0].singular.genitive.push('maan');
    declesions[0].singular.partitive.push('maata');
    declesions[0].singular.nominativeAccusative.push('maa');
    declesions[0].singular.genitiveAccusative.push('maan');
    declesions[0].singular.inessive.push('maassa');
    declesions[0].singular.elative.push('maasta');
    declesions[0].singular.illative.push('maahan');
    declesions[0].singular.adessive.push('maalla');
    declesions[0].singular.ablative.push('maalta');
    declesions[0].singular.allative.push('maalle');
    declesions[0].singular.essive.push('maana');
    declesions[0].singular.translative.push('maaksi');
    declesions[0].singular.abessive.push('maatta');
    declesions[0].plural.nominative.push('maat');
    declesions[0].plural.genitive = ['maiden', 'maitten'].sort();
    declesions[0].plural.partitive.push('maita');
    declesions[0].plural.nominativeAccusative.push('maat');
    declesions[0].plural.inessive.push('maissa');
    declesions[0].plural.elative.push('maista');
    declesions[0].plural.illative.push('maihin');
    declesions[0].plural.adessive.push('mailla');
    declesions[0].plural.ablative.push('mailta');
    declesions[0].plural.allative.push('maille');
    declesions[0].plural.essive.push('maina');
    declesions[0].plural.translative.push('maiksi');
    declesions[0].plural.instructive.push('main');
    declesions[0].plural.abessive.push('maitta');
    declesions[0].plural.comitative.push('maineen');
    
    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('pii');
    declesions[1].singular.genitive.push('piin');
    declesions[1].singular.partitive.push('piitä');
    declesions[1].singular.nominativeAccusative.push('pii');
    declesions[1].singular.genitiveAccusative.push('piin');
    declesions[1].singular.inessive.push('piissä');
    declesions[1].singular.elative.push('piistä');
    declesions[1].singular.illative.push('piihin');
    declesions[1].singular.adessive.push('piillä');
    declesions[1].singular.ablative.push('piiltä');
    declesions[1].singular.allative.push('piille');
    declesions[1].singular.essive.push('piinä');
    declesions[1].singular.translative.push('piiksi');
    declesions[1].singular.abessive.push('piittä');
    declesions[1].plural.nominative.push('piit');
    declesions[1].plural.genitive = ['piiden', 'piitten'].sort();
    declesions[1].plural.partitive.push('piitä');
    declesions[1].plural.nominativeAccusative.push('piit');
    declesions[1].plural.inessive.push('piissä');
    declesions[1].plural.elative.push('piistä');
    declesions[1].plural.illative.push('piihin');
    declesions[1].plural.adessive.push('piillä');
    declesions[1].plural.ablative.push('piiltä');
    declesions[1].plural.allative.push('piille');
    declesions[1].plural.essive.push('piinä');
    declesions[1].plural.translative.push('piiksi');
    declesions[1].plural.instructive.push('piin');
    declesions[1].plural.abessive.push('piittä');
    declesions[1].plural.comitative.push('piineen');
    
    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('voi');
    declesions[2].singular.genitive.push('voin');
    declesions[2].singular.partitive.push('voita');
    declesions[2].singular.nominativeAccusative.push('voi');
    declesions[2].singular.genitiveAccusative.push('voin');
    declesions[2].singular.inessive.push('voissa');
    declesions[2].singular.elative.push('voista');
    declesions[2].singular.illative.push('voihin');
    declesions[2].singular.adessive.push('voilla');
    declesions[2].singular.ablative.push('voilta');
    declesions[2].singular.allative.push('voille');
    declesions[2].singular.essive.push('voina');
    declesions[2].singular.translative.push('voiksi');
    declesions[2].singular.abessive.push('voitta');
    declesions[2].plural.nominative.push('voit');
    declesions[2].plural.genitive = ['voiden', 'voitten'].sort();
    declesions[2].plural.partitive.push('voita');
    declesions[2].plural.nominativeAccusative.push('voit');
    declesions[2].plural.inessive.push('voissa');
    declesions[2].plural.elative.push('voista');
    declesions[2].plural.illative.push('voihin');
    declesions[2].plural.adessive.push('voilla');
    declesions[2].plural.ablative.push('voilta');
    declesions[2].plural.allative.push('voille');
    declesions[2].plural.essive.push('voina');
    declesions[2].plural.translative.push('voiksi');
    declesions[2].plural.instructive.push('voin');
    declesions[2].plural.abessive.push('voitta');
    declesions[2].plural.comitative.push('voineen');
    
    declesions.push(new Declesion());
    declesions[3].singular.nominative.push('yy');
    declesions[3].singular.genitive.push('yyn');
    declesions[3].singular.partitive.push('yytä');
    declesions[3].singular.nominativeAccusative.push('yy');
    declesions[3].singular.genitiveAccusative.push('yyn');
    declesions[3].singular.inessive.push('yyssä');
    declesions[3].singular.elative.push('yystä');
    declesions[3].singular.illative.push('yyhyn');
    declesions[3].singular.adessive.push('yyllä');
    declesions[3].singular.ablative.push('yyltä');
    declesions[3].singular.allative.push('yylle');
    declesions[3].singular.essive.push('yynä');
    declesions[3].singular.translative.push('yyksi');
    declesions[3].singular.abessive.push('yyttä');
    declesions[3].plural.nominative.push('yyt');
    declesions[3].plural.genitive = ['yiden', 'yitten'].sort();
    declesions[3].plural.partitive.push('yitä');
    declesions[3].plural.nominativeAccusative.push('yyt');
    declesions[3].plural.inessive.push('yissä');
    declesions[3].plural.elative.push('yistä');
    declesions[3].plural.illative.push('yihin');
    declesions[3].plural.adessive.push('yillä');
    declesions[3].plural.ablative.push('yiltä');
    declesions[3].plural.allative.push('yille');
    declesions[3].plural.essive.push('yinä');
    declesions[3].plural.translative.push('yiksi');
    declesions[3].plural.instructive.push('yin');
    declesions[3].plural.abessive.push('yittä');
    declesions[3].plural.comitative.push('yineen');

    service.decline('maa').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('pii').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('voi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
    service.decline('yy').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[3]]);
    });
  }));

  it('should decline type 19 (suo)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('suo');
    declesions[0].singular.genitive.push('suon');
    declesions[0].singular.partitive.push('suota');
    declesions[0].singular.nominativeAccusative.push('suo');
    declesions[0].singular.genitiveAccusative.push('suon');
    declesions[0].singular.inessive.push('suossa');
    declesions[0].singular.elative.push('suosta');
    declesions[0].singular.illative.push('suohon');
    declesions[0].singular.adessive.push('suolla');
    declesions[0].singular.ablative.push('suolta');
    declesions[0].singular.allative.push('suolle');
    declesions[0].singular.essive.push('suona');
    declesions[0].singular.translative.push('suoksi');
    declesions[0].singular.abessive.push('suotta');
    declesions[0].plural.nominative.push('suot');
    declesions[0].plural.genitive = ['soiden', 'soitten'].sort();
    declesions[0].plural.partitive.push('soita');
    declesions[0].plural.nominativeAccusative.push('suot');
    declesions[0].plural.inessive.push('soissa');
    declesions[0].plural.elative.push('soista');
    declesions[0].plural.illative.push('soihin');
    declesions[0].plural.adessive.push('soilla');
    declesions[0].plural.ablative.push('soilta');
    declesions[0].plural.allative.push('soille');
    declesions[0].plural.essive.push('soina');
    declesions[0].plural.translative.push('soiksi');
    declesions[0].plural.instructive.push('soin');
    declesions[0].plural.abessive.push('soitta');
    declesions[0].plural.comitative.push('soineen');

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('yö');
    declesions[1].singular.genitive.push('yön');
    declesions[1].singular.partitive.push('yötä');
    declesions[1].singular.nominativeAccusative.push('yö');
    declesions[1].singular.genitiveAccusative.push('yön');
    declesions[1].singular.inessive.push('yössä');
    declesions[1].singular.elative.push('yöstä');
    declesions[1].singular.illative.push('yöhön');
    declesions[1].singular.adessive.push('yöllä');
    declesions[1].singular.ablative.push('yöltä');
    declesions[1].singular.allative.push('yölle');
    declesions[1].singular.essive.push('yönä');
    declesions[1].singular.translative.push('yöksi');
    declesions[1].singular.abessive.push('yöttä');
    declesions[1].plural.nominative.push('yöt');
    declesions[1].plural.genitive = ['öiden', 'öitten'].sort();
    declesions[1].plural.partitive.push('öitä');
    declesions[1].plural.nominativeAccusative.push('yöt');
    declesions[1].plural.inessive.push('öissä');
    declesions[1].plural.elative.push('öistä');
    declesions[1].plural.illative.push('öihin');
    declesions[1].plural.adessive.push('öillä');
    declesions[1].plural.ablative.push('öiltä');
    declesions[1].plural.allative.push('öille');
    declesions[1].plural.essive.push('öinä');
    declesions[1].plural.translative.push('öiksi');
    declesions[1].plural.instructive.push('öin');
    declesions[1].plural.abessive.push('öittä');
    declesions[1].plural.comitative.push('öineen');

    service.decline('suo').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('yö').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
  }));

  it('should decline type 20 (filee)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('filee');
    declesions[0].singular.genitive.push('fileen');
    declesions[0].singular.partitive.push('fileetä');
    declesions[0].singular.nominativeAccusative.push('filee');
    declesions[0].singular.genitiveAccusative.push('fileen');
    declesions[0].singular.inessive.push('fileessä');
    declesions[0].singular.elative.push('fileestä');
    declesions[0].singular.illative = ['fileehen', 'fileeseen'].sort();
    declesions[0].singular.adessive.push('fileellä');
    declesions[0].singular.ablative.push('fileeltä');
    declesions[0].singular.allative.push('fileelle');
    declesions[0].singular.essive.push('fileenä');
    declesions[0].singular.translative.push('fileeksi');
    declesions[0].singular.abessive.push('fileettä');
    declesions[0].plural.nominative.push('fileet');
    declesions[0].plural.genitive = ['fileiden', 'fileitten'].sort();
    declesions[0].plural.partitive.push('fileitä');
    declesions[0].plural.nominativeAccusative.push('fileet');
    declesions[0].plural.inessive.push('fileissä');
    declesions[0].plural.elative.push('fileistä');
    declesions[0].plural.illative = ['fileihin', 'fileisiin'].sort();
    declesions[0].plural.adessive.push('fileillä');
    declesions[0].plural.ablative.push('fileiltä');
    declesions[0].plural.allative.push('fileille');
    declesions[0].plural.essive.push('fileinä');
    declesions[0].plural.translative.push('fileiksi');
    declesions[0].plural.instructive.push('filein');
    declesions[0].plural.abessive.push('fileittä');
    declesions[0].plural.comitative.push('fileineen');

    service.decline('filee').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 21 (rosé)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('rosé');
    declesions[0].singular.genitive.push('rosén');
    declesions[0].singular.partitive.push('roséta');
    declesions[0].singular.nominativeAccusative.push('rosé');
    declesions[0].singular.genitiveAccusative.push('rosén');
    declesions[0].singular.inessive.push('roséssa');
    declesions[0].singular.elative.push('rosésta');
    declesions[0].singular.illative.push('roséhen');
    declesions[0].singular.adessive.push('rosélla');
    declesions[0].singular.ablative.push('rosélta');
    declesions[0].singular.allative.push('rosélle');
    declesions[0].singular.essive.push('roséna');
    declesions[0].singular.translative.push('roséksi');
    declesions[0].singular.abessive.push('rosétta');
    declesions[0].plural.nominative.push('rosét');
    declesions[0].plural.genitive = ['roséiden', 'roséitten'].sort();
    declesions[0].plural.partitive.push('roséita');
    declesions[0].plural.nominativeAccusative.push('rosét');
    declesions[0].plural.inessive.push('roséissa');
    declesions[0].plural.elative.push('roséista');
    declesions[0].plural.illative.push('roséihin');
    declesions[0].plural.adessive.push('roséilla');
    declesions[0].plural.ablative.push('roséilta');
    declesions[0].plural.allative.push('roséille');
    declesions[0].plural.essive.push('roséina');
    declesions[0].plural.translative.push('roséiksi');
    declesions[0].plural.instructive.push('roséin');
    declesions[0].plural.abessive.push('roséitta');
    declesions[0].plural.comitative.push('roséineen');

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('cowboy');
    declesions[1].singular.genitive.push('cowboyn');
    declesions[1].singular.partitive.push('cowboyta');
    declesions[1].singular.nominativeAccusative.push('cowboy');
    declesions[1].singular.genitiveAccusative.push('cowboyn');
    declesions[1].singular.inessive.push('cowboyssa');
    declesions[1].singular.elative.push('cowboysta');
    declesions[1].singular.illative.push('cowboyhyn');
    declesions[1].singular.adessive.push('cowboylla');
    declesions[1].singular.ablative.push('cowboylta');
    declesions[1].singular.allative.push('cowboylle');
    declesions[1].singular.essive.push('cowboyna');
    declesions[1].singular.translative.push('cowboyksi');
    declesions[1].singular.abessive.push('cowboytta');
    declesions[1].plural.nominative.push('cowboyt');
    declesions[1].plural.genitive = ['cowboyiden', 'cowboyitten'].sort();
    declesions[1].plural.partitive.push('cowboyita');
    declesions[1].plural.nominativeAccusative.push('cowboyt');
    declesions[1].plural.inessive.push('cowboyissa');
    declesions[1].plural.elative.push('cowboyista');
    declesions[1].plural.illative.push('cowboyihin');
    declesions[1].plural.adessive.push('cowboyilla');
    declesions[1].plural.ablative.push('cowboyilta');
    declesions[1].plural.allative.push('cowboyille');
    declesions[1].plural.essive.push('cowboyina');
    declesions[1].plural.translative.push('cowboyiksi');
    declesions[1].plural.instructive.push('cowboyin');
    declesions[1].plural.abessive.push('cowboyitta');
    declesions[1].plural.comitative.push('cowboyineen');

    service.decline('rosé').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('cowboy').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
  }));

  it('should decline type 22 (parfait)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('parfait');
    declesions[0].singular.genitive.push('parfait\'n');
    declesions[0].singular.partitive.push('parfait\'ta');
    declesions[0].singular.nominativeAccusative.push('parfait');
    declesions[0].singular.genitiveAccusative.push('parfait\'n');
    declesions[0].singular.inessive.push('parfait\'ssa');
    declesions[0].singular.elative.push('parfait\'sta');
    declesions[0].singular.illative.push('parfait\'hen');
    declesions[0].singular.adessive.push('parfait\'lla');
    declesions[0].singular.ablative.push('parfait\'lta');
    declesions[0].singular.allative.push('parfait\'lle');
    declesions[0].singular.essive.push('parfait\'na');
    declesions[0].singular.translative.push('parfait\'ksi');
    declesions[0].singular.abessive.push('parfait\'tta');
    declesions[0].plural.nominative.push('parfait\'t');
    declesions[0].plural.genitive = ['parfait\'iden', 'parfait\'itten'].sort();
    declesions[0].plural.partitive.push('parfait\'ita');
    declesions[0].plural.nominativeAccusative.push('parfait\'t');
    declesions[0].plural.inessive.push('parfait\'issa');
    declesions[0].plural.elative.push('parfait\'ista');
    declesions[0].plural.illative.push('parfait\'ihin');
    declesions[0].plural.adessive.push('parfait\'illa');
    declesions[0].plural.ablative.push('parfait\'ilta');
    declesions[0].plural.allative.push('parfait\'ille');
    declesions[0].plural.essive.push('parfait\'ina');
    declesions[0].plural.translative.push('parfait\'iksi');
    declesions[0].plural.instructive.push('parfait\'in');
    declesions[0].plural.abessive.push('parfait\'itta');
    declesions[0].plural.comitative.push('parfait\'ineen');

    service.decline('parfait').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 23 (tiili)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('tiili');
    declesions[0].singular.genitive.push('tiilen');
    declesions[0].singular.partitive.push('tiiltä');
    declesions[0].singular.nominativeAccusative.push('tiili');
    declesions[0].singular.genitiveAccusative.push('tiilen');
    declesions[0].singular.inessive.push('tiilessä');
    declesions[0].singular.elative.push('tiilestä');
    declesions[0].singular.illative.push('tiileen');
    declesions[0].singular.adessive.push('tiilellä');
    declesions[0].singular.ablative.push('tiileltä');
    declesions[0].singular.allative.push('tiilelle');
    declesions[0].singular.essive.push('tiilenä');
    declesions[0].singular.translative.push('tiileksi');
    declesions[0].singular.abessive.push('tiilettä');
    declesions[0].plural.nominative.push('tiilet');
    declesions[0].plural.genitive.push('tiilien');
    declesions[0].plural.partitive.push('tiiliä');
    declesions[0].plural.nominativeAccusative.push('tiilet');
    declesions[0].plural.inessive.push('tiilissä');
    declesions[0].plural.elative.push('tiilistä');
    declesions[0].plural.illative.push('tiiliin');
    declesions[0].plural.adessive.push('tiilillä');
    declesions[0].plural.ablative.push('tiililtä');
    declesions[0].plural.allative.push('tiilille');
    declesions[0].plural.essive.push('tiilinä');
    declesions[0].plural.translative.push('tiiliksi');
    declesions[0].plural.instructive.push('tiilin');
    declesions[0].plural.abessive.push('tiilittä');
    declesions[0].plural.comitative.push('tiilineen');
    //declesion type 26
    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('tiili');
    declesions[1].singular.genitive.push('tiilen');
    declesions[1].singular.partitive.push('tiiltä');
    declesions[1].singular.nominativeAccusative.push('tiili');
    declesions[1].singular.genitiveAccusative.push('tiilen');
    declesions[1].singular.inessive.push('tiilessä');
    declesions[1].singular.elative.push('tiilestä');
    declesions[1].singular.illative.push('tiileen');
    declesions[1].singular.adessive.push('tiilellä');
    declesions[1].singular.ablative.push('tiileltä');
    declesions[1].singular.allative.push('tiilelle');
    declesions[1].singular.essive.push('tiilenä');
    declesions[1].singular.translative.push('tiileksi');
    declesions[1].singular.abessive.push('tiilettä');
    declesions[1].plural.nominative.push('tiilet');
    declesions[1].plural.genitive = ['tiilien', 'tiilten'].sort();
    declesions[1].plural.partitive.push('tiiliä');
    declesions[1].plural.nominativeAccusative.push('tiilet');
    declesions[1].plural.inessive.push('tiilissä');
    declesions[1].plural.elative.push('tiilistä');
    declesions[1].plural.illative.push('tiiliin');
    declesions[1].plural.adessive.push('tiilillä');
    declesions[1].plural.ablative.push('tiililtä');
    declesions[1].plural.allative.push('tiilille');
    declesions[1].plural.essive.push('tiilinä');
    declesions[1].plural.translative.push('tiiliksi');
    declesions[1].plural.instructive.push('tiilin');
    declesions[1].plural.abessive.push('tiilittä');
    declesions[1].plural.comitative.push('tiilineen');
    service.decline('tiili').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0], declesions[1]]);
    });
  }));

  it('should decline type 24 (uni)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('uni');
    declesions[0].singular.genitive.push('unen');
    declesions[0].singular.partitive.push('unta');
    declesions[0].singular.nominativeAccusative.push('uni');
    declesions[0].singular.genitiveAccusative.push('unen');
    declesions[0].singular.inessive.push('unessa');
    declesions[0].singular.elative.push('unesta');
    declesions[0].singular.illative.push('uneen');
    declesions[0].singular.adessive.push('unella');
    declesions[0].singular.ablative.push('unelta');
    declesions[0].singular.allative.push('unelle');
    declesions[0].singular.essive.push('unena');
    declesions[0].singular.translative.push('uneksi');
    declesions[0].singular.abessive.push('unetta');
    declesions[0].plural.nominative.push('unet');
    declesions[0].plural.genitive = ['unien', 'unten'].sort();
    declesions[0].plural.partitive.push('unia');
    declesions[0].plural.nominativeAccusative.push('unet');
    declesions[0].plural.inessive.push('unissa');
    declesions[0].plural.elative.push('unista');
    declesions[0].plural.illative.push('uniin');
    declesions[0].plural.adessive.push('unilla');
    declesions[0].plural.ablative.push('unilta');
    declesions[0].plural.allative.push('unille');
    declesions[0].plural.essive.push('unina');
    declesions[0].plural.translative.push('uniksi');
    declesions[0].plural.instructive.push('unin');
    declesions[0].plural.abessive.push('unitta');
    declesions[0].plural.comitative.push('unineen');

    service.decline('uni').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 25 (toimi)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('toimi');
    declesions[0].singular.genitive.push('toimen');
    declesions[0].singular.partitive = ['toimea','tointa'].sort();
    declesions[0].singular.nominativeAccusative.push('toimi');
    declesions[0].singular.genitiveAccusative.push('toimen');
    declesions[0].singular.inessive.push('toimessa');
    declesions[0].singular.elative.push('toimesta');
    declesions[0].singular.illative.push('toimeen');
    declesions[0].singular.adessive.push('toimella');
    declesions[0].singular.ablative.push('toimelta');
    declesions[0].singular.allative.push('toimelle');
    declesions[0].singular.essive.push('toimena');
    declesions[0].singular.translative.push('toimeksi');
    declesions[0].singular.abessive.push('toimetta');
    declesions[0].plural.nominative.push('toimet');
    declesions[0].plural.genitive = ['toimien', 'tointen'].sort();
    declesions[0].plural.partitive.push('toimia');
    declesions[0].plural.nominativeAccusative.push('toimet');
    declesions[0].plural.inessive.push('toimissa');
    declesions[0].plural.elative.push('toimista');
    declesions[0].plural.illative.push('toimiin');
    declesions[0].plural.adessive.push('toimilla');
    declesions[0].plural.ablative.push('toimilta');
    declesions[0].plural.allative.push('toimille');
    declesions[0].plural.essive.push('toimina');
    declesions[0].plural.translative.push('toimiksi');
    declesions[0].plural.instructive.push('toimin');
    declesions[0].plural.abessive.push('toimitta');
    declesions[0].plural.comitative.push('toimineen');

    service.decline('toimi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 26 (pieni)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('pieni');
    declesions[0].singular.genitive.push('pienen');
    declesions[0].singular.partitive.push('pientä');
    declesions[0].singular.nominativeAccusative.push('pieni');
    declesions[0].singular.genitiveAccusative.push('pienen');
    declesions[0].singular.inessive.push('pienessä');
    declesions[0].singular.elative.push('pienestä');
    declesions[0].singular.illative.push('pieneen');
    declesions[0].singular.adessive.push('pienellä');
    declesions[0].singular.ablative.push('pieneltä');
    declesions[0].singular.allative.push('pienelle');
    declesions[0].singular.essive.push('pienenä');
    declesions[0].singular.translative.push('pieneksi');
    declesions[0].singular.abessive.push('pienettä');
    declesions[0].plural.nominative.push('pienet');
    declesions[0].plural.genitive = ['pienien', 'pienten'].sort();
    declesions[0].plural.partitive.push('pieniä');
    declesions[0].plural.nominativeAccusative.push('pienet');
    declesions[0].plural.inessive.push('pienissä');
    declesions[0].plural.elative.push('pienistä');
    declesions[0].plural.illative.push('pieniin');
    declesions[0].plural.adessive.push('pienillä');
    declesions[0].plural.ablative.push('pieniltä');
    declesions[0].plural.allative.push('pienille');
    declesions[0].plural.essive.push('pieninä');
    declesions[0].plural.translative.push('pieniksi');
    declesions[0].plural.instructive.push('pienin');
    declesions[0].plural.abessive.push('pienittä');
    declesions[0].plural.comitative.push('pienineen');

    service.decline('pieni').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 27 (käsi)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('käsi');
    declesions[0].singular.genitive.push('käden');
    declesions[0].singular.partitive.push('kättä');
    declesions[0].singular.nominativeAccusative.push('käsi');
    declesions[0].singular.genitiveAccusative.push('käden');
    declesions[0].singular.inessive.push('kädessä');
    declesions[0].singular.elative.push('kädestä');
    declesions[0].singular.illative.push('käteen');
    declesions[0].singular.adessive.push('kädellä');
    declesions[0].singular.ablative.push('kädeltä');
    declesions[0].singular.allative.push('kädelle');
    declesions[0].singular.essive.push('kätenä');
    declesions[0].singular.translative.push('kädeksi');
    declesions[0].singular.abessive.push('kädettä');
    declesions[0].plural.nominative.push('kädet');
    declesions[0].plural.genitive = ['käsien', 'kätten'].sort();
    declesions[0].plural.partitive.push('käsiä');
    declesions[0].plural.nominativeAccusative.push('kädet');
    declesions[0].plural.inessive.push('käsissä');
    declesions[0].plural.elative.push('käsistä');
    declesions[0].plural.illative.push('käsiin');
    declesions[0].plural.adessive.push('käsillä');
    declesions[0].plural.ablative.push('käsiltä');
    declesions[0].plural.allative.push('käsille');
    declesions[0].plural.essive.push('käsinä');
    declesions[0].plural.translative.push('käsiksi');
    declesions[0].plural.instructive.push('käsin');
    declesions[0].plural.abessive.push('käsittä');
    declesions[0].plural.comitative.push('käsineen');

    service.decline('käsi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 28 (korsi)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('korsi');
    declesions[0].singular.genitive.push('korren');
    declesions[0].singular.partitive.push('kortta');
    declesions[0].singular.nominativeAccusative.push('korsi');
    declesions[0].singular.genitiveAccusative.push('korren');
    declesions[0].singular.inessive.push('korressa');
    declesions[0].singular.elative.push('korresta');
    declesions[0].singular.illative.push('korteen');
    declesions[0].singular.adessive.push('korrella');
    declesions[0].singular.ablative.push('korrelta');
    declesions[0].singular.allative.push('korrelle');
    declesions[0].singular.essive.push('kortena');
    declesions[0].singular.translative.push('korreksi');
    declesions[0].singular.abessive.push('korretta');
    declesions[0].plural.nominative.push('korret');
    declesions[0].plural.genitive = ['korsien', 'kortten'].sort();
    declesions[0].plural.partitive.push('korsia');
    declesions[0].plural.nominativeAccusative.push('korret');
    declesions[0].plural.inessive.push('korsissa');
    declesions[0].plural.elative.push('korsista');
    declesions[0].plural.illative.push('korsiin');
    declesions[0].plural.adessive.push('korsilla');
    declesions[0].plural.ablative.push('korsilta');
    declesions[0].plural.allative.push('korsille');
    declesions[0].plural.essive.push('korsina');
    declesions[0].plural.translative.push('korsiksi');
    declesions[0].plural.instructive.push('korsin');
    declesions[0].plural.abessive.push('korsitta');
    declesions[0].plural.comitative.push('korsineen');

    service.decline('korsi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 29 (lapsi)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('lapsi');
    declesions[0].singular.genitive.push('lapsen');
    declesions[0].singular.partitive.push('lasta');
    declesions[0].singular.nominativeAccusative.push('lapsi');
    declesions[0].singular.genitiveAccusative.push('lapsen');
    declesions[0].singular.inessive.push('lapsessa');
    declesions[0].singular.elative.push('lapsesta');
    declesions[0].singular.illative.push('lapseen');
    declesions[0].singular.adessive.push('lapsella');
    declesions[0].singular.ablative.push('lapselta');
    declesions[0].singular.allative.push('lapselle');
    declesions[0].singular.essive.push('lapsena');
    declesions[0].singular.translative.push('lapseksi');
    declesions[0].singular.abessive.push('lapsetta');
    declesions[0].plural.nominative.push('lapset');
    declesions[0].plural.genitive = ['lapsien', 'lasten'].sort();
    declesions[0].plural.partitive.push('lapsia');
    declesions[0].plural.nominativeAccusative.push('lapset');
    declesions[0].plural.inessive.push('lapsissa');
    declesions[0].plural.elative.push('lapsista');
    declesions[0].plural.illative.push('lapsiin');
    declesions[0].plural.adessive.push('lapsilla');
    declesions[0].plural.ablative.push('lapsilta');
    declesions[0].plural.allative.push('lapsille');
    declesions[0].plural.essive.push('lapsina');
    declesions[0].plural.translative.push('lapsiksi');
    declesions[0].plural.instructive.push('lapsin');
    declesions[0].plural.abessive.push('lapsitta');
    declesions[0].plural.comitative.push('lapsineen');

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('uksi');
    declesions[1].singular.genitive.push('uksen');
    declesions[1].singular.partitive.push('usta');
    declesions[1].singular.nominativeAccusative.push('uksi');
    declesions[1].singular.genitiveAccusative.push('uksen');
    declesions[1].singular.inessive.push('uksessa');
    declesions[1].singular.elative.push('uksesta');
    declesions[1].singular.illative.push('ukseen');
    declesions[1].singular.adessive.push('uksella');
    declesions[1].singular.ablative.push('ukselta');
    declesions[1].singular.allative.push('ukselle');
    declesions[1].singular.essive.push('uksena');
    declesions[1].singular.translative.push('ukseksi');
    declesions[1].singular.abessive.push('uksetta');
    declesions[1].plural.nominative.push('ukset');
    declesions[1].plural.genitive = ['uksien', 'usten'].sort();
    declesions[1].plural.partitive.push('uksia');
    declesions[1].plural.nominativeAccusative.push('ukset');
    declesions[1].plural.inessive.push('uksissa');
    declesions[1].plural.elative.push('uksista');
    declesions[1].plural.illative.push('uksiin');
    declesions[1].plural.adessive.push('uksilla');
    declesions[1].plural.ablative.push('uksilta');
    declesions[1].plural.allative.push('uksille');
    declesions[1].plural.essive.push('uksina');
    declesions[1].plural.translative.push('uksiksi');
    declesions[1].plural.instructive.push('uksin');
    declesions[1].plural.abessive.push('uksitta');
    declesions[1].plural.comitative.push('uksineen');
    declesions.push(new Declesion());
    //declesion type 7
    declesions[2].singular.nominative.push('uksi');
    declesions[2].singular.genitive.push('uksen');
    declesions[2].singular.partitive.push('uksea');
    declesions[2].singular.nominativeAccusative.push('uksi');
    declesions[2].singular.genitiveAccusative.push('uksen');
    declesions[2].singular.inessive.push('uksessa');
    declesions[2].singular.elative.push('uksesta');
    declesions[2].singular.illative.push('ukseen');
    declesions[2].singular.adessive.push('uksella');
    declesions[2].singular.ablative.push('ukselta');
    declesions[2].singular.allative.push('ukselle');
    declesions[2].singular.essive.push('uksena');
    declesions[2].singular.translative.push('ukseksi');
    declesions[2].singular.abessive.push('uksetta');
    declesions[2].plural.nominative.push('ukset');
    declesions[2].plural.genitive.push('uksien');
    declesions[2].plural.partitive.push('uksia');
    declesions[2].plural.nominativeAccusative.push('ukset');
    declesions[2].plural.inessive.push('uksissa');
    declesions[2].plural.elative.push('uksista');
    declesions[2].plural.illative.push('uksiin');
    declesions[2].plural.adessive.push('uksilla');
    declesions[2].plural.ablative.push('uksilta');
    declesions[2].plural.allative.push('uksille');
    declesions[2].plural.essive.push('uksina');
    declesions[2].plural.translative.push('uksiksi');
    declesions[2].plural.instructive.push('uksin');
    declesions[2].plural.abessive.push('uksitta');
    declesions[2].plural.comitative.push('uksineen');

    service.decline('lapsi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('uksi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2], declesions[1]]);
    });
  }));

  it('should decline type 30 (veitsi)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('veitsi');
    declesions[0].singular.genitive.push('veitsen');
    declesions[0].singular.partitive.push('veistä');
    declesions[0].singular.nominativeAccusative.push('veitsi');
    declesions[0].singular.genitiveAccusative.push('veitsen');
    declesions[0].singular.inessive.push('veitsessä');
    declesions[0].singular.elative.push('veitsestä');
    declesions[0].singular.illative.push('veitseen');
    declesions[0].singular.adessive.push('veitsellä');
    declesions[0].singular.ablative.push('veitseltä');
    declesions[0].singular.allative.push('veitselle');
    declesions[0].singular.essive.push('veitsenä');
    declesions[0].singular.translative.push('veitseksi');
    declesions[0].singular.abessive.push('veitsettä');
    declesions[0].plural.nominative.push('veitset');
    declesions[0].plural.genitive = ['veitsien', 'veisten'].sort();
    declesions[0].plural.partitive.push('veitsiä');
    declesions[0].plural.nominativeAccusative.push('veitset');
    declesions[0].plural.inessive.push('veitsissä');
    declesions[0].plural.elative.push('veitsistä');
    declesions[0].plural.illative.push('veitsiin');
    declesions[0].plural.adessive.push('veitsillä');
    declesions[0].plural.ablative.push('veitsiltä');
    declesions[0].plural.allative.push('veitsille');
    declesions[0].plural.essive.push('veitsinä');
    declesions[0].plural.translative.push('veitsiksi');
    declesions[0].plural.instructive.push('veitsin');
    declesions[0].plural.abessive.push('veitsittä');
    declesions[0].plural.comitative.push('veitsineen');

    service.decline('veitsi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 31 (kaksi)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('kaksi');
    declesions[0].singular.genitive.push('kahden');
    declesions[0].singular.partitive.push('kahta');
    declesions[0].singular.nominativeAccusative.push('kaksi');
    declesions[0].singular.genitiveAccusative.push('kahden');
    declesions[0].singular.inessive.push('kahdessa');
    declesions[0].singular.elative.push('kahdesta');
    declesions[0].singular.illative.push('kahteen');
    declesions[0].singular.adessive.push('kahdella');
    declesions[0].singular.ablative.push('kahdelta');
    declesions[0].singular.allative.push('kahdelle');
    declesions[0].singular.essive.push('kahtena');
    declesions[0].singular.translative.push('kahdeksi');
    declesions[0].singular.abessive.push('kahdetta');
    declesions[0].plural.nominative.push('kahdet');
    declesions[0].plural.genitive.push('kaksien');
    declesions[0].plural.partitive.push('kaksia');
    declesions[0].plural.nominativeAccusative.push('kahdet');
    declesions[0].plural.inessive.push('kaksissa');
    declesions[0].plural.elative.push('kaksista');
    declesions[0].plural.illative.push('kaksiin');
    declesions[0].plural.adessive.push('kaksilla');
    declesions[0].plural.ablative.push('kaksilta');
    declesions[0].plural.allative.push('kaksille');
    declesions[0].plural.essive.push('kaksina');
    declesions[0].plural.translative.push('kaksiksi');
    declesions[0].plural.instructive.push('kaksin');
    declesions[0].plural.abessive.push('kaksitta');
    declesions[0].plural.comitative.push('kaksineen');

    service.decline('kaksi').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 32 (sisar)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('sisar');
    declesions[0].singular.genitive.push('sisaren');
    declesions[0].singular.partitive.push('sisarta');
    declesions[0].singular.nominativeAccusative.push('sisar');
    declesions[0].singular.genitiveAccusative.push('sisaren');
    declesions[0].singular.inessive.push('sisaressa');
    declesions[0].singular.elative.push('sisaresta');
    declesions[0].singular.illative.push('sisareen');
    declesions[0].singular.adessive.push('sisarella');
    declesions[0].singular.ablative.push('sisarelta');
    declesions[0].singular.allative.push('sisarelle');
    declesions[0].singular.essive.push('sisarena');
    declesions[0].singular.translative.push('sisareksi');
    declesions[0].singular.abessive.push('sisaretta');
    declesions[0].plural.nominative.push('sisaret');
    declesions[0].plural.genitive = ['sisarien', 'sisarten'].sort();
    declesions[0].plural.partitive.push('sisaria');
    declesions[0].plural.nominativeAccusative.push('sisaret');
    declesions[0].plural.inessive.push('sisarissa');
    declesions[0].plural.elative.push('sisarista');
    declesions[0].plural.illative.push('sisariin');
    declesions[0].plural.adessive.push('sisarilla');
    declesions[0].plural.ablative.push('sisarilta');
    declesions[0].plural.allative.push('sisarille');
    declesions[0].plural.essive.push('sisarina');
    declesions[0].plural.translative.push('sisariksi');
    declesions[0].plural.instructive.push('sisarin');
    declesions[0].plural.abessive.push('sisaritta');
    declesions[0].plural.comitative.push('sisarineen');

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('tatar');
    declesions[1].singular.genitive.push('tattaren');
    declesions[1].singular.partitive.push('tatarta');
    declesions[1].singular.nominativeAccusative.push('tatar');
    declesions[1].singular.genitiveAccusative.push('tattaren');
    declesions[1].singular.inessive.push('tattaressa');
    declesions[1].singular.elative.push('tattaresta');
    declesions[1].singular.illative.push('tattareen');
    declesions[1].singular.adessive.push('tattarella');
    declesions[1].singular.ablative.push('tattarelta');
    declesions[1].singular.allative.push('tattarelle');
    declesions[1].singular.essive.push('tattarena');
    declesions[1].singular.translative.push('tattareksi');
    declesions[1].singular.abessive.push('tattaretta');
    declesions[1].plural.nominative.push('tattaret');
    declesions[1].plural.genitive = ['tattarien', 'tatarten'].sort();
    declesions[1].plural.partitive.push('tattaria');
    declesions[1].plural.nominativeAccusative.push('tattaret');
    declesions[1].plural.inessive.push('tattarissa');
    declesions[1].plural.elative.push('tattarista');
    declesions[1].plural.illative.push('tattariin');
    declesions[1].plural.adessive.push('tattarilla');
    declesions[1].plural.ablative.push('tattarilta');
    declesions[1].plural.allative.push('tattarille');
    declesions[1].plural.essive.push('tattarina');
    declesions[1].plural.translative.push('tattariksi');
    declesions[1].plural.instructive.push('tattarin');
    declesions[1].plural.abessive.push('tattaritta');
    declesions[1].plural.comitative.push('tattarineen');

    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('ien');
    declesions[2].singular.genitive.push('ikenen');
    declesions[2].singular.partitive.push('ientä');
    declesions[2].singular.nominativeAccusative.push('ien');
    declesions[2].singular.genitiveAccusative.push('ikenen');
    declesions[2].singular.inessive.push('ikenessä');
    declesions[2].singular.elative.push('ikenestä');
    declesions[2].singular.illative.push('ikeneen');
    declesions[2].singular.adessive.push('ikenellä');
    declesions[2].singular.ablative.push('ikeneltä');
    declesions[2].singular.allative.push('ikenelle');
    declesions[2].singular.essive.push('ikenenä');
    declesions[2].singular.translative.push('ikeneksi');
    declesions[2].singular.abessive.push('ikenettä');
    declesions[2].plural.nominative.push('ikenet');
    declesions[2].plural.genitive = ['ikenien', 'ienten'].sort();
    declesions[2].plural.partitive.push('ikeniä');
    declesions[2].plural.nominativeAccusative.push('ikenet');
    declesions[2].plural.inessive.push('ikenissä');
    declesions[2].plural.elative.push('ikenistä');
    declesions[2].plural.illative.push('ikeniin');
    declesions[2].plural.adessive.push('ikenillä');
    declesions[2].plural.ablative.push('ikeniltä');
    declesions[2].plural.allative.push('ikenille');
    declesions[2].plural.essive.push('ikeninä');
    declesions[2].plural.translative.push('ikeniksi');
    declesions[2].plural.instructive.push('ikenin');
    declesions[2].plural.abessive.push('ikenittä');
    declesions[2].plural.comitative.push('ikenineen');

    service.decline('sisar').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('tatar').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('ien').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
  }));

  it('should decline type 33 (kytkin)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('kytkin');
    declesions[0].singular.genitive.push('kytkimen');
    declesions[0].singular.partitive.push('kytkintä');
    declesions[0].singular.nominativeAccusative.push('kytkin');
    declesions[0].singular.genitiveAccusative.push('kytkimen');
    declesions[0].singular.inessive.push('kytkimessä');
    declesions[0].singular.elative.push('kytkimestä');
    declesions[0].singular.illative.push('kytkimeen');
    declesions[0].singular.adessive.push('kytkimellä');
    declesions[0].singular.ablative.push('kytkimeltä');
    declesions[0].singular.allative.push('kytkimelle');
    declesions[0].singular.essive.push('kytkimenä');
    declesions[0].singular.translative.push('kytkimeksi');
    declesions[0].singular.abessive.push('kytkimettä');
    declesions[0].plural.nominative.push('kytkimet');
    declesions[0].plural.genitive = ['kytkimien', 'kytkinten'].sort();
    declesions[0].plural.partitive.push('kytkimiä');
    declesions[0].plural.nominativeAccusative.push('kytkimet');
    declesions[0].plural.inessive.push('kytkimissä');
    declesions[0].plural.elative.push('kytkimistä');
    declesions[0].plural.illative.push('kytkimiin');
    declesions[0].plural.adessive.push('kytkimillä');
    declesions[0].plural.ablative.push('kytkimiltä');
    declesions[0].plural.allative.push('kytkimille');
    declesions[0].plural.essive.push('kytkiminä');
    declesions[0].plural.translative.push('kytkimiksi');
    declesions[0].plural.instructive.push('kytkimin');
    declesions[0].plural.abessive.push('kytkimittä');
    declesions[0].plural.comitative.push('kytkimineen');

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('suutin');
    declesions[1].singular.genitive.push('suuttimen');
    declesions[1].singular.partitive.push('suutinta');
    declesions[1].singular.nominativeAccusative.push('suutin');
    declesions[1].singular.genitiveAccusative.push('suuttimen');
    declesions[1].singular.inessive.push('suuttimessa');
    declesions[1].singular.elative.push('suuttimesta');
    declesions[1].singular.illative.push('suuttimeen');
    declesions[1].singular.adessive.push('suuttimella');
    declesions[1].singular.ablative.push('suuttimelta');
    declesions[1].singular.allative.push('suuttimelle');
    declesions[1].singular.essive.push('suuttimena');
    declesions[1].singular.translative.push('suuttimeksi');
    declesions[1].singular.abessive.push('suuttimetta');
    declesions[1].plural.nominative.push('suuttimet');
    declesions[1].plural.genitive = ['suuttimien', 'suutinten'].sort();
    declesions[1].plural.partitive.push('suuttimia');
    declesions[1].plural.nominativeAccusative.push('suuttimet');
    declesions[1].plural.inessive.push('suuttimissa');
    declesions[1].plural.elative.push('suuttimista');
    declesions[1].plural.illative.push('suuttimiin');
    declesions[1].plural.adessive.push('suuttimilla');
    declesions[1].plural.ablative.push('suuttimilta');
    declesions[1].plural.allative.push('suuttimille');
    declesions[1].plural.essive.push('suuttimina');
    declesions[1].plural.translative.push('suuttimiksi');
    declesions[1].plural.instructive.push('suuttimin');
    declesions[1].plural.abessive.push('suuttimitta');
    declesions[1].plural.comitative.push('suuttimineen');

    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('puin');
    declesions[2].singular.genitive.push('pukimen');
    declesions[2].singular.partitive.push('puinta');
    declesions[2].singular.nominativeAccusative.push('puin');
    declesions[2].singular.genitiveAccusative.push('pukimen');
    declesions[2].singular.inessive.push('pukimessa');
    declesions[2].singular.elative.push('pukimesta');
    declesions[2].singular.illative.push('pukimeen');
    declesions[2].singular.adessive.push('pukimella');
    declesions[2].singular.ablative.push('pukimelta');
    declesions[2].singular.allative.push('pukimelle');
    declesions[2].singular.essive.push('pukimena');
    declesions[2].singular.translative.push('pukimeksi');
    declesions[2].singular.abessive.push('pukimetta');
    declesions[2].plural.nominative.push('pukimet');
    declesions[2].plural.genitive = ['pukimien', 'puinten'].sort();
    declesions[2].plural.partitive.push('pukimia');
    declesions[2].plural.nominativeAccusative.push('pukimet');
    declesions[2].plural.inessive.push('pukimissa');
    declesions[2].plural.elative.push('pukimista');
    declesions[2].plural.illative.push('pukimiin');
    declesions[2].plural.adessive.push('pukimilla');
    declesions[2].plural.ablative.push('pukimilta');
    declesions[2].plural.allative.push('pukimille');
    declesions[2].plural.essive.push('pukimina');
    declesions[2].plural.translative.push('pukimiksi');
    declesions[2].plural.instructive.push('pukimin');
    declesions[2].plural.abessive.push('pukimitta');
    declesions[2].plural.comitative.push('pukimineen');

    declesions.push(new Declesion());
    declesions[3].singular.nominative.push('kaavin');
    declesions[3].singular.genitive.push('kaavimen');
    declesions[3].singular.partitive.push('kaavinta');
    declesions[3].singular.nominativeAccusative.push('kaavin');
    declesions[3].singular.genitiveAccusative.push('kaavimen');
    declesions[3].singular.inessive.push('kaavimessa');
    declesions[3].singular.elative.push('kaavimesta');
    declesions[3].singular.illative.push('kaavimeen');
    declesions[3].singular.adessive.push('kaavimella');
    declesions[3].singular.ablative.push('kaavimelta');
    declesions[3].singular.allative.push('kaavimelle');
    declesions[3].singular.essive.push('kaavimena');
    declesions[3].singular.translative.push('kaavimeksi');
    declesions[3].singular.abessive.push('kaavimetta');
    declesions[3].plural.nominative.push('kaavimet');
    declesions[3].plural.genitive = ['kaavimien', 'kaavinten'].sort();
    declesions[3].plural.partitive.push('kaavimia');
    declesions[3].plural.nominativeAccusative.push('kaavimet');
    declesions[3].plural.inessive.push('kaavimissa');
    declesions[3].plural.elative.push('kaavimista');
    declesions[3].plural.illative.push('kaavimiin');
    declesions[3].plural.adessive.push('kaavimilla');
    declesions[3].plural.ablative.push('kaavimilta');
    declesions[3].plural.allative.push('kaavimille');
    declesions[3].plural.essive.push('kaavimina');
    declesions[3].plural.translative.push('kaavimiksi');
    declesions[3].plural.instructive.push('kaavimin');
    declesions[3].plural.abessive.push('kaavimitta');
    declesions[3].plural.comitative.push('kaavimineen');

    declesions.push(new Declesion());
    declesions[4].singular.nominative.push('laidun');
    declesions[4].singular.genitive.push('laitumen');
    declesions[4].singular.partitive.push('laidunta');
    declesions[4].singular.nominativeAccusative.push('laidun');
    declesions[4].singular.genitiveAccusative.push('laitumen');
    declesions[4].singular.inessive.push('laitumessa');
    declesions[4].singular.elative.push('laitumesta');
    declesions[4].singular.illative.push('laitumeen');
    declesions[4].singular.adessive.push('laitumella');
    declesions[4].singular.ablative.push('laitumelta');
    declesions[4].singular.allative.push('laitumelle');
    declesions[4].singular.essive.push('laitumena');
    declesions[4].singular.translative.push('laitumeksi');
    declesions[4].singular.abessive.push('laitumetta');
    declesions[4].plural.nominative.push('laitumet');
    declesions[4].plural.genitive = ['laitumien', 'laidunten'].sort();
    declesions[4].plural.partitive.push('laitumia');
    declesions[4].plural.nominativeAccusative.push('laitumet');
    declesions[4].plural.inessive.push('laitumissa');
    declesions[4].plural.elative.push('laitumista');
    declesions[4].plural.illative.push('laitumiin');
    declesions[4].plural.adessive.push('laitumilla');
    declesions[4].plural.ablative.push('laitumilta');
    declesions[4].plural.allative.push('laitumille');
    declesions[4].plural.essive.push('laitumina');
    declesions[4].plural.translative.push('laitumiksi');
    declesions[4].plural.instructive.push('laitumin');
    declesions[4].plural.abessive.push('laitumitta');
    declesions[4].plural.comitative.push('laitumineen');

    declesions.push(new Declesion());
    declesions[5].singular.nominative.push('puhallin');
    declesions[5].singular.genitive.push('puhaltimen');
    declesions[5].singular.partitive.push('puhallinta');
    declesions[5].singular.nominativeAccusative.push('puhallin');
    declesions[5].singular.genitiveAccusative.push('puhaltimen');
    declesions[5].singular.inessive.push('puhaltimessa');
    declesions[5].singular.elative.push('puhaltimesta');
    declesions[5].singular.illative.push('puhaltimeen');
    declesions[5].singular.adessive.push('puhaltimella');
    declesions[5].singular.ablative.push('puhaltimelta');
    declesions[5].singular.allative.push('puhaltimelle');
    declesions[5].singular.essive.push('puhaltimena');
    declesions[5].singular.translative.push('puhaltimeksi');
    declesions[5].singular.abessive.push('puhaltimetta');
    declesions[5].plural.nominative.push('puhaltimet');
    declesions[5].plural.genitive = ['puhaltimien', 'puhallinten'].sort();
    declesions[5].plural.partitive.push('puhaltimia');
    declesions[5].plural.nominativeAccusative.push('puhaltimet');
    declesions[5].plural.inessive.push('puhaltimissa');
    declesions[5].plural.elative.push('puhaltimista');
    declesions[5].plural.illative.push('puhaltimiin');
    declesions[5].plural.adessive.push('puhaltimilla');
    declesions[5].plural.ablative.push('puhaltimilta');
    declesions[5].plural.allative.push('puhaltimille');
    declesions[5].plural.essive.push('puhaltimina');
    declesions[5].plural.translative.push('puhaltimiksi');
    declesions[5].plural.instructive.push('puhaltimin');
    declesions[5].plural.abessive.push('puhaltimitta');
    declesions[5].plural.comitative.push('puhaltimineen');

    declesions.push(new Declesion());
    declesions[6].singular.nominative.push('muunnin');
    declesions[6].singular.genitive.push('muuntimen');
    declesions[6].singular.partitive.push('muunninta');
    declesions[6].singular.nominativeAccusative.push('muunnin');
    declesions[6].singular.genitiveAccusative.push('muuntimen');
    declesions[6].singular.inessive.push('muuntimessa');
    declesions[6].singular.elative.push('muuntimesta');
    declesions[6].singular.illative.push('muuntimeen');
    declesions[6].singular.adessive.push('muuntimella');
    declesions[6].singular.ablative.push('muuntimelta');
    declesions[6].singular.allative.push('muuntimelle');
    declesions[6].singular.essive.push('muuntimena');
    declesions[6].singular.translative.push('muuntimeksi');
    declesions[6].singular.abessive.push('muuntimetta');
    declesions[6].plural.nominative.push('muuntimet');
    declesions[6].plural.genitive = ['muuntimien', 'muunninten'].sort();
    declesions[6].plural.partitive.push('muuntimia');
    declesions[6].plural.nominativeAccusative.push('muuntimet');
    declesions[6].plural.inessive.push('muuntimissa');
    declesions[6].plural.elative.push('muuntimista');
    declesions[6].plural.illative.push('muuntimiin');
    declesions[6].plural.adessive.push('muuntimilla');
    declesions[6].plural.ablative.push('muuntimilta');
    declesions[6].plural.allative.push('muuntimille');
    declesions[6].plural.essive.push('muuntimina');
    declesions[6].plural.translative.push('muuntimiksi');
    declesions[6].plural.instructive.push('muuntimin');
    declesions[6].plural.abessive.push('muuntimitta');
    declesions[6].plural.comitative.push('muuntimineen');

    declesions.push(new Declesion());
    declesions[7].singular.nominative.push('kerroin');
    declesions[7].singular.genitive.push('kertoimen');
    declesions[7].singular.partitive.push('kerrointa');
    declesions[7].singular.nominativeAccusative.push('kerroin');
    declesions[7].singular.genitiveAccusative.push('kertoimen');
    declesions[7].singular.inessive.push('kertoimessa');
    declesions[7].singular.elative.push('kertoimesta');
    declesions[7].singular.illative.push('kertoimeen');
    declesions[7].singular.adessive.push('kertoimella');
    declesions[7].singular.ablative.push('kertoimelta');
    declesions[7].singular.allative.push('kertoimelle');
    declesions[7].singular.essive.push('kertoimena');
    declesions[7].singular.translative.push('kertoimeksi');
    declesions[7].singular.abessive.push('kertoimetta');
    declesions[7].plural.nominative.push('kertoimet');
    declesions[7].plural.genitive = ['kertoimien', 'kerrointen'].sort();
    declesions[7].plural.partitive.push('kertoimia');
    declesions[7].plural.nominativeAccusative.push('kertoimet');
    declesions[7].plural.inessive.push('kertoimissa');
    declesions[7].plural.elative.push('kertoimista');
    declesions[7].plural.illative.push('kertoimiin');
    declesions[7].plural.adessive.push('kertoimilla');
    declesions[7].plural.ablative.push('kertoimilta');
    declesions[7].plural.allative.push('kertoimille');
    declesions[7].plural.essive.push('kertoimina');
    declesions[7].plural.translative.push('kertoimiksi');
    declesions[7].plural.instructive.push('kertoimin');
    declesions[7].plural.abessive.push('kertoimitta');
    declesions[7].plural.comitative.push('kertoimineen');

    declesions.push(new Declesion());
    declesions[8].singular.nominative.push('ahdin');
    declesions[8].singular.genitive.push('ahtimen');
    declesions[8].singular.partitive.push('ahdinta');
    declesions[8].singular.nominativeAccusative.push('ahdin');
    declesions[8].singular.genitiveAccusative.push('ahtimen');
    declesions[8].singular.inessive.push('ahtimessa');
    declesions[8].singular.elative.push('ahtimesta');
    declesions[8].singular.illative.push('ahtimeen');
    declesions[8].singular.adessive.push('ahtimella');
    declesions[8].singular.ablative.push('ahtimelta');
    declesions[8].singular.allative.push('ahtimelle');
    declesions[8].singular.essive.push('ahtimena');
    declesions[8].singular.translative.push('ahtimeksi');
    declesions[8].singular.abessive.push('ahtimetta');
    declesions[8].plural.nominative.push('ahtimet');
    declesions[8].plural.genitive = ['ahtimien', 'ahdinten'].sort();
    declesions[8].plural.partitive.push('ahtimia');
    declesions[8].plural.nominativeAccusative.push('ahtimet');
    declesions[8].plural.inessive.push('ahtimissa');
    declesions[8].plural.elative.push('ahtimista');
    declesions[8].plural.illative.push('ahtimiin');
    declesions[8].plural.adessive.push('ahtimilla');
    declesions[8].plural.ablative.push('ahtimilta');
    declesions[8].plural.allative.push('ahtimille');
    declesions[8].plural.essive.push('ahtimina');
    declesions[8].plural.translative.push('ahtimiksi');
    declesions[8].plural.instructive.push('ahtimin');
    declesions[8].plural.abessive.push('ahtimitta');
    declesions[8].plural.comitative.push('ahtimineen');

    declesions.push(new Declesion());
    declesions[9].singular.nominative.push('istuin');
    declesions[9].singular.genitive.push('istuimen');
    declesions[9].singular.partitive.push('istuinta');
    declesions[9].singular.nominativeAccusative.push('istuin');
    declesions[9].singular.genitiveAccusative.push('istuimen');
    declesions[9].singular.inessive.push('istuimessa');
    declesions[9].singular.elative.push('istuimesta');
    declesions[9].singular.illative.push('istuimeen');
    declesions[9].singular.adessive.push('istuimella');
    declesions[9].singular.ablative.push('istuimelta');
    declesions[9].singular.allative.push('istuimelle');
    declesions[9].singular.essive.push('istuimena');
    declesions[9].singular.translative.push('istuimeksi');
    declesions[9].singular.abessive.push('istuimetta');
    declesions[9].plural.nominative.push('istuimet');
    declesions[9].plural.genitive = ['istuimien', 'istuinten'].sort();
    declesions[9].plural.partitive.push('istuimia');
    declesions[9].plural.nominativeAccusative.push('istuimet');
    declesions[9].plural.inessive.push('istuimissa');
    declesions[9].plural.elative.push('istuimista');
    declesions[9].plural.illative.push('istuimiin');
    declesions[9].plural.adessive.push('istuimilla');
    declesions[9].plural.ablative.push('istuimilta');
    declesions[9].plural.allative.push('istuimille');
    declesions[9].plural.essive.push('istuimina');
    declesions[9].plural.translative.push('istuimiksi');
    declesions[9].plural.instructive.push('istuimin');
    declesions[9].plural.abessive.push('istuimitta');
    declesions[9].plural.comitative.push('istuimineen');

    declesions.push(new Declesion());
    declesions[10].singular.nominative.push('poljin');
    declesions[10].singular.genitive.push('polkimen');
    declesions[10].singular.partitive.push('poljinta');
    declesions[10].singular.nominativeAccusative.push('poljin');
    declesions[10].singular.genitiveAccusative.push('polkimen');
    declesions[10].singular.inessive.push('polkimessa');
    declesions[10].singular.elative.push('polkimesta');
    declesions[10].singular.illative.push('polkimeen');
    declesions[10].singular.adessive.push('polkimella');
    declesions[10].singular.ablative.push('polkimelta');
    declesions[10].singular.allative.push('polkimelle');
    declesions[10].singular.essive.push('polkimena');
    declesions[10].singular.translative.push('polkimeksi');
    declesions[10].singular.abessive.push('polkimetta');
    declesions[10].plural.nominative.push('polkimet');
    declesions[10].plural.genitive = ['polkimien', 'poljinten'].sort();
    declesions[10].plural.partitive.push('polkimia');
    declesions[10].plural.nominativeAccusative.push('polkimet');
    declesions[10].plural.inessive.push('polkimissa');
    declesions[10].plural.elative.push('polkimista');
    declesions[10].plural.illative.push('polkimiin');
    declesions[10].plural.adessive.push('polkimilla');
    declesions[10].plural.ablative.push('polkimilta');
    declesions[10].plural.allative.push('polkimille');
    declesions[10].plural.essive.push('polkimina');
    declesions[10].plural.translative.push('polkimiksi');
    declesions[10].plural.instructive.push('polkimin');
    declesions[10].plural.abessive.push('polkimitta');
    declesions[10].plural.comitative.push('polkimineen');

    declesions.push(new Declesion());
    declesions[11].singular.nominative.push('särvin');
    declesions[11].singular.genitive.push('särpimen');
    declesions[11].singular.partitive.push('särvintä');
    declesions[11].singular.nominativeAccusative.push('särvin');
    declesions[11].singular.genitiveAccusative.push('särpimen');
    declesions[11].singular.inessive.push('särpimessä');
    declesions[11].singular.elative.push('särpimestä');
    declesions[11].singular.illative.push('särpimeen');
    declesions[11].singular.adessive.push('särpimellä');
    declesions[11].singular.ablative.push('särpimeltä');
    declesions[11].singular.allative.push('särpimelle');
    declesions[11].singular.essive.push('särpimenä');
    declesions[11].singular.translative.push('särpimeksi');
    declesions[11].singular.abessive.push('särpimettä');
    declesions[11].plural.nominative.push('särpimet');
    declesions[11].plural.genitive = ['särpimien', 'särvinten'].sort();
    declesions[11].plural.partitive.push('särpimiä');
    declesions[11].plural.nominativeAccusative.push('särpimet');
    declesions[11].plural.inessive.push('särpimissä');
    declesions[11].plural.elative.push('särpimistä');
    declesions[11].plural.illative.push('särpimiin');
    declesions[11].plural.adessive.push('särpimillä');
    declesions[11].plural.ablative.push('särpimiltä');
    declesions[11].plural.allative.push('särpimille');
    declesions[11].plural.essive.push('särpiminä');
    declesions[11].plural.translative.push('särpimiksi');
    declesions[11].plural.instructive.push('särpimin');
    declesions[11].plural.abessive.push('särpimittä');
    declesions[11].plural.comitative.push('särpimineen');

    service.decline('kytkin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('suutin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('puin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
    service.decline('kaavin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[3]]);
    });
    service.decline('laidun').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[4]]);
    });
    service.decline('puhallin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[5]]);
    });
    service.decline('muunnin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[6]]);
    });
    service.decline('kerroin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[7]]);
    });
    service.decline('ahdin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[8]]);
    });
    service.decline('istuin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[9]]);
    });
    service.decline('poljin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[10]]);
    });
    service.decline('särvin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[11]]);
    });
  }));

  it('should decline type 34 (onneton)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('onneton');
    declesions[0].singular.genitive.push('onnettoman');
    declesions[0].singular.partitive.push('onnetonta');
    declesions[0].singular.nominativeAccusative.push('onneton');
    declesions[0].singular.genitiveAccusative.push('onnettoman');
    declesions[0].singular.inessive.push('onnettomassa');
    declesions[0].singular.elative.push('onnettomasta');
    declesions[0].singular.illative.push('onnettomaan');
    declesions[0].singular.adessive.push('onnettomalla');
    declesions[0].singular.ablative.push('onnettomalta');
    declesions[0].singular.allative.push('onnettomalle');
    declesions[0].singular.essive.push('onnettomana');
    declesions[0].singular.translative.push('onnettomaksi');
    declesions[0].singular.abessive.push('onnettomatta');
    declesions[0].plural.nominative.push('onnettomat');
    declesions[0].plural.genitive = ['onnettomien', 'onnetonten'].sort();
    declesions[0].plural.partitive.push('onnettomia');
    declesions[0].plural.nominativeAccusative.push('onnettomat');
    declesions[0].plural.inessive.push('onnettomissa');
    declesions[0].plural.elative.push('onnettomista');
    declesions[0].plural.illative.push('onnettomiin');
    declesions[0].plural.adessive.push('onnettomilla');
    declesions[0].plural.ablative.push('onnettomilta');
    declesions[0].plural.allative.push('onnettomille');
    declesions[0].plural.essive.push('onnettomina');
    declesions[0].plural.translative.push('onnettomiksi');
    declesions[0].plural.instructive.push('onnettomin');
    declesions[0].plural.abessive.push('onnettomitta');
    declesions[0].plural.comitative.push('onnettomineen');

    service.decline('onneton').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 35 (lämmin)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('lämmin');
    declesions[0].singular.genitive.push('lämpimän');
    declesions[0].singular.partitive.push('lämmintä');
    declesions[0].singular.nominativeAccusative.push('lämmin');
    declesions[0].singular.genitiveAccusative.push('lämpimän');
    declesions[0].singular.inessive.push('lämpimässä');
    declesions[0].singular.elative.push('lämpimästä');
    declesions[0].singular.illative.push('lämpimään');
    declesions[0].singular.adessive.push('lämpimällä');
    declesions[0].singular.ablative.push('lämpimältä');
    declesions[0].singular.allative.push('lämpimälle');
    declesions[0].singular.essive.push('lämpimänä');
    declesions[0].singular.translative.push('lämpimäksi');
    declesions[0].singular.abessive.push('lämpimättä');
    declesions[0].plural.nominative.push('lämpimät');
    declesions[0].plural.genitive = ['lämpimien', 'lämpimäin'].sort();
    declesions[0].plural.partitive.push('lämpimiä');
    declesions[0].plural.nominativeAccusative.push('lämpimät');
    declesions[0].plural.inessive.push('lämpimissä');
    declesions[0].plural.elative.push('lämpimistä');
    declesions[0].plural.illative.push('lämpimiin');
    declesions[0].plural.adessive.push('lämpimillä');
    declesions[0].plural.ablative.push('lämpimiltä');
    declesions[0].plural.allative.push('lämpimille');
    declesions[0].plural.essive.push('lämpiminä');
    declesions[0].plural.translative.push('lämpimiksi');
    declesions[0].plural.instructive.push('lämpimin');
    declesions[0].plural.abessive.push('lämpimittä');
    declesions[0].plural.comitative.push('lämpimineen');

    service.decline('lämmin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 36 (sisin)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('sisin');
    declesions[0].singular.genitive.push('sisimmän');
    declesions[0].singular.partitive.push('sisintä');
    declesions[0].singular.nominativeAccusative.push('sisin');
    declesions[0].singular.genitiveAccusative.push('sisimmän');
    declesions[0].singular.inessive.push('sisimmässä');
    declesions[0].singular.elative.push('sisimmästä');
    declesions[0].singular.illative.push('sisimpään');
    declesions[0].singular.adessive.push('sisimmällä');
    declesions[0].singular.ablative.push('sisimmältä');
    declesions[0].singular.allative.push('sisimmälle');
    declesions[0].singular.essive.push('sisimpänä');
    declesions[0].singular.translative.push('sisimmäksi');
    declesions[0].singular.abessive.push('sisimmättä');
    declesions[0].plural.nominative.push('sisimmät');
    declesions[0].plural.genitive = ['sisimpien', 'sisimpäin', 'sisinten'].sort();
    declesions[0].plural.partitive.push('sisimpiä');
    declesions[0].plural.nominativeAccusative.push('sisimmät');
    declesions[0].plural.inessive.push('sisimmissä');
    declesions[0].plural.elative.push('sisimmistä');
    declesions[0].plural.illative.push('sisimpiin');
    declesions[0].plural.adessive.push('sisimmillä');
    declesions[0].plural.ablative.push('sisimmiltä');
    declesions[0].plural.allative.push('sisimmille');
    declesions[0].plural.essive.push('sisimpinä');
    declesions[0].plural.translative.push('sisimmiksi');
    declesions[0].plural.instructive.push('sisimmin');
    declesions[0].plural.abessive.push('sisimmittä');
    declesions[0].plural.comitative.push('sisimpineen');

    service.decline('sisin').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 37 (vasen)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('vasen');
    declesions[0].singular.genitive.push('vasemman');
    declesions[0].singular.partitive = ['vasenta', 'vasempaa'].sort();
    declesions[0].singular.nominativeAccusative.push('vasen');
    declesions[0].singular.genitiveAccusative.push('vasemman');
    declesions[0].singular.inessive.push('vasemmassa');
    declesions[0].singular.elative.push('vasemmasta');
    declesions[0].singular.illative.push('vasempaan');
    declesions[0].singular.adessive.push('vasemmalla');
    declesions[0].singular.ablative.push('vasemmalta');
    declesions[0].singular.allative.push('vasemmalle');
    declesions[0].singular.essive.push('vasempana');
    declesions[0].singular.translative.push('vasemmaksi');
    declesions[0].singular.abessive.push('vasemmatta');
    declesions[0].plural.nominative.push('vasemmat');
    declesions[0].plural.genitive = ['vasempien', 'vasempain', 'vasenten'].sort();
    declesions[0].plural.partitive.push('vasempia');
    declesions[0].plural.nominativeAccusative.push('vasemmat');
    declesions[0].plural.inessive.push('vasemmissa');
    declesions[0].plural.elative.push('vasemmista');
    declesions[0].plural.illative.push('vasempiin');
    declesions[0].plural.adessive.push('vasemmilla');
    declesions[0].plural.ablative.push('vasemmilta');
    declesions[0].plural.allative.push('vasemmille');
    declesions[0].plural.essive.push('vasempina');
    declesions[0].plural.translative.push('vasemmiksi');
    declesions[0].plural.instructive.push('vasemmin');
    declesions[0].plural.abessive.push('vasemmitta');
    declesions[0].plural.comitative.push('vasempineen');

    service.decline('vasen').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 38 (nainen)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('nainen');
    declesions[0].singular.genitive.push('naisen');
    declesions[0].singular.partitive.push('naista');
    declesions[0].singular.nominativeAccusative.push('nainen');
    declesions[0].singular.genitiveAccusative.push('naisen');
    declesions[0].singular.inessive.push('naisessa');
    declesions[0].singular.elative.push('naisesta');
    declesions[0].singular.illative.push('naiseen');
    declesions[0].singular.adessive.push('naisella');
    declesions[0].singular.ablative.push('naiselta');
    declesions[0].singular.allative.push('naiselle');
    declesions[0].singular.essive.push('naisena');
    declesions[0].singular.translative.push('naiseksi');
    declesions[0].singular.abessive.push('naisetta');
    declesions[0].plural.nominative.push('naiset');
    declesions[0].plural.genitive = ['naisien', 'naisten'].sort();
    declesions[0].plural.partitive.push('naisia');
    declesions[0].plural.nominativeAccusative.push('naiset');
    declesions[0].plural.inessive.push('naisissa');
    declesions[0].plural.elative.push('naisista');
    declesions[0].plural.illative.push('naisiin');
    declesions[0].plural.adessive.push('naisilla');
    declesions[0].plural.ablative.push('naisilta');
    declesions[0].plural.allative.push('naisille');
    declesions[0].plural.essive.push('naisina');
    declesions[0].plural.translative.push('naisiksi');
    declesions[0].plural.instructive.push('naisin');
    declesions[0].plural.abessive.push('naisitta');
    declesions[0].plural.comitative.push('naisineen');

    service.decline('nainen').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 39 (vastaus)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('vastaus');
    declesions[0].singular.genitive.push('vastauksen');
    declesions[0].singular.partitive.push('vastausta');
    declesions[0].singular.nominativeAccusative.push('vastaus');
    declesions[0].singular.genitiveAccusative.push('vastauksen');
    declesions[0].singular.inessive.push('vastauksessa');
    declesions[0].singular.elative.push('vastauksesta');
    declesions[0].singular.illative.push('vastaukseen');
    declesions[0].singular.adessive.push('vastauksella');
    declesions[0].singular.ablative.push('vastaukselta');
    declesions[0].singular.allative.push('vastaukselle');
    declesions[0].singular.essive.push('vastauksena');
    declesions[0].singular.translative.push('vastaukseksi');
    declesions[0].singular.abessive.push('vastauksetta');
    declesions[0].plural.nominative.push('vastaukset');
    declesions[0].plural.genitive = ['vastauksien', 'vastausten'].sort();
    declesions[0].plural.partitive.push('vastauksia');
    declesions[0].plural.nominativeAccusative.push('vastaukset');
    declesions[0].plural.inessive.push('vastauksissa');
    declesions[0].plural.elative.push('vastauksista');
    declesions[0].plural.illative.push('vastauksiin');
    declesions[0].plural.adessive.push('vastauksilla');
    declesions[0].plural.ablative.push('vastauksilta');
    declesions[0].plural.allative.push('vastauksille');
    declesions[0].plural.essive.push('vastauksina');
    declesions[0].plural.translative.push('vastauksiksi');
    declesions[0].plural.instructive.push('vastauksin');
    declesions[0].plural.abessive.push('vastauksitta');
    declesions[0].plural.comitative.push('vastauksineen');

    service.decline('vastaus').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 40 (kalleus)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('kalleus');
    declesions[0].singular.genitive.push('kalleuden');
    declesions[0].singular.partitive.push('kalleutta');
    declesions[0].singular.nominativeAccusative.push('kalleus');
    declesions[0].singular.genitiveAccusative.push('kalleuden');
    declesions[0].singular.inessive.push('kalleudessa');
    declesions[0].singular.elative.push('kalleudesta');
    declesions[0].singular.illative.push('kalleuteen');
    declesions[0].singular.adessive.push('kalleudella');
    declesions[0].singular.ablative.push('kalleudelta');
    declesions[0].singular.allative.push('kalleudelle');
    declesions[0].singular.essive.push('kalleutena');
    declesions[0].singular.translative.push('kalleudeksi');
    declesions[0].singular.abessive.push('kalleudetta');
    declesions[0].plural.nominative.push('kalleudet');
    declesions[0].plural.genitive.push('kalleuksien');
    declesions[0].plural.partitive.push('kalleuksia');
    declesions[0].plural.nominativeAccusative.push('kalleudet');
    declesions[0].plural.inessive.push('kalleuksissa');
    declesions[0].plural.elative.push('kalleuksista');
    declesions[0].plural.illative.push('kalleuksiin');
    declesions[0].plural.adessive.push('kalleuksilla');
    declesions[0].plural.ablative.push('kalleuksilta');
    declesions[0].plural.allative.push('kalleuksille');
    declesions[0].plural.essive.push('kalleuksina');
    declesions[0].plural.translative.push('kalleuksiksi');
    declesions[0].plural.instructive.push('kalleuksin');
    declesions[0].plural.abessive.push('kalleuksitta');
    declesions[0].plural.comitative.push('kalleuksineen');

    service.decline('kalleus').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 41 (vieras)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('vieras');
    declesions[0].singular.genitive.push('vieraan');
    declesions[0].singular.partitive.push('vierasta');
    declesions[0].singular.nominativeAccusative.push('vieras');
    declesions[0].singular.genitiveAccusative.push('vieraan');
    declesions[0].singular.inessive.push('vieraassa');
    declesions[0].singular.elative.push('vieraasta');
    declesions[0].singular.illative.push('vieraaseen');
    declesions[0].singular.adessive.push('vieraalla');
    declesions[0].singular.ablative.push('vieraalta');
    declesions[0].singular.allative.push('vieraalle');
    declesions[0].singular.essive.push('vieraana');
    declesions[0].singular.translative.push('vieraaksi');
    declesions[0].singular.abessive.push('vieraatta');
    declesions[0].plural.nominative.push('vieraat');
    declesions[0].plural.genitive = ['vieraiden', 'vieraitten'].sort();
    declesions[0].plural.partitive.push('vieraita');
    declesions[0].plural.nominativeAccusative.push('vieraat');
    declesions[0].plural.inessive.push('vieraissa');
    declesions[0].plural.elative.push('vieraista');
    declesions[0].plural.illative = ['vieraisiin', 'vieraihin'].sort();
    declesions[0].plural.adessive.push('vierailla');
    declesions[0].plural.ablative.push('vierailta');
    declesions[0].plural.allative.push('vieraille');
    declesions[0].plural.essive.push('vieraina');
    declesions[0].plural.translative.push('vieraiksi');
    declesions[0].plural.instructive.push('vierain');
    declesions[0].plural.abessive.push('vieraitta');
    declesions[0].plural.comitative.push('vieraineen');
    
    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('maukas');
    declesions[1].singular.genitive.push('maukkaan');
    declesions[1].singular.partitive.push('maukasta');
    declesions[1].singular.nominativeAccusative.push('maukas');
    declesions[1].singular.genitiveAccusative.push('maukkaan');
    declesions[1].singular.inessive.push('maukkaassa');
    declesions[1].singular.elative.push('maukkaasta');
    declesions[1].singular.illative.push('maukkaaseen');
    declesions[1].singular.adessive.push('maukkaalla');
    declesions[1].singular.ablative.push('maukkaalta');
    declesions[1].singular.allative.push('maukkaalle');
    declesions[1].singular.essive.push('maukkaana');
    declesions[1].singular.translative.push('maukkaaksi');
    declesions[1].singular.abessive.push('maukkaatta');
    declesions[1].plural.nominative.push('maukkaat');
    declesions[1].plural.genitive = ['maukkaiden', 'maukkaitten'].sort();
    declesions[1].plural.partitive.push('maukkaita');
    declesions[1].plural.nominativeAccusative.push('maukkaat');
    declesions[1].plural.inessive.push('maukkaissa');
    declesions[1].plural.elative.push('maukkaista');
    declesions[1].plural.illative = ['maukkaisiin', 'maukkaihin'].sort();
    declesions[1].plural.adessive.push('maukkailla');
    declesions[1].plural.ablative.push('maukkailta');
    declesions[1].plural.allative.push('maukkaille');
    declesions[1].plural.essive.push('maukkaina');
    declesions[1].plural.translative.push('maukkaiksi');
    declesions[1].plural.instructive.push('maukkain');
    declesions[1].plural.abessive.push('maukkaitta');
    declesions[1].plural.comitative.push('maukkaineen');
    
    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('lipas');
    declesions[2].singular.genitive.push('lippaan');
    declesions[2].singular.partitive.push('lipasta');
    declesions[2].singular.nominativeAccusative.push('lipas');
    declesions[2].singular.genitiveAccusative.push('lippaan');
    declesions[2].singular.inessive.push('lippaassa');
    declesions[2].singular.elative.push('lippaasta');
    declesions[2].singular.illative.push('lippaaseen');
    declesions[2].singular.adessive.push('lippaalla');
    declesions[2].singular.ablative.push('lippaalta');
    declesions[2].singular.allative.push('lippaalle');
    declesions[2].singular.essive.push('lippaana');
    declesions[2].singular.translative.push('lippaaksi');
    declesions[2].singular.abessive.push('lippaatta');
    declesions[2].plural.nominative.push('lippaat');
    declesions[2].plural.genitive = ['lippaiden', 'lippaitten'].sort();
    declesions[2].plural.partitive.push('lippaita');
    declesions[2].plural.nominativeAccusative.push('lippaat');
    declesions[2].plural.inessive.push('lippaissa');
    declesions[2].plural.elative.push('lippaista');
    declesions[2].plural.illative = ['lippaisiin', 'lippaihin'].sort();
    declesions[2].plural.adessive.push('lippailla');
    declesions[2].plural.ablative.push('lippailta');
    declesions[2].plural.allative.push('lippaille');
    declesions[2].plural.essive.push('lippaina');
    declesions[2].plural.translative.push('lippaiksi');
    declesions[2].plural.instructive.push('lippain');
    declesions[2].plural.abessive.push('lippaitta');
    declesions[2].plural.comitative.push('lippaineen');

    declesions.push(new Declesion());
    declesions[3].singular.nominative.push('ratas');
    declesions[3].singular.genitive.push('rattaan');
    declesions[3].singular.partitive.push('ratasta');
    declesions[3].singular.nominativeAccusative.push('ratas');
    declesions[3].singular.genitiveAccusative.push('rattaan');
    declesions[3].singular.inessive.push('rattaassa');
    declesions[3].singular.elative.push('rattaasta');
    declesions[3].singular.illative.push('rattaaseen');
    declesions[3].singular.adessive.push('rattaalla');
    declesions[3].singular.ablative.push('rattaalta');
    declesions[3].singular.allative.push('rattaalle');
    declesions[3].singular.essive.push('rattaana');
    declesions[3].singular.translative.push('rattaaksi');
    declesions[3].singular.abessive.push('rattaatta');
    declesions[3].plural.nominative.push('rattaat');
    declesions[3].plural.genitive = ['rattaiden', 'rattaitten'].sort();
    declesions[3].plural.partitive.push('rattaita');
    declesions[3].plural.nominativeAccusative.push('rattaat');
    declesions[3].plural.inessive.push('rattaissa');
    declesions[3].plural.elative.push('rattaista');
    declesions[3].plural.illative = ['rattaisiin', 'rattaihin'].sort();
    declesions[3].plural.adessive.push('rattailla');
    declesions[3].plural.ablative.push('rattailta');
    declesions[3].plural.allative.push('rattaille');
    declesions[3].plural.essive.push('rattaina');
    declesions[3].plural.translative.push('rattaiksi');
    declesions[3].plural.instructive.push('rattain');
    declesions[3].plural.abessive.push('rattaitta');
    declesions[3].plural.comitative.push('rattaineen');

    declesions.push(new Declesion());
    declesions[4].singular.nominative.push('varas');
    declesions[4].singular.genitive.push('varkaan');
    declesions[4].singular.partitive.push('varasta');
    declesions[4].singular.nominativeAccusative.push('varas');
    declesions[4].singular.genitiveAccusative.push('varkaan');
    declesions[4].singular.inessive.push('varkaassa');
    declesions[4].singular.elative.push('varkaasta');
    declesions[4].singular.illative.push('varkaaseen');
    declesions[4].singular.adessive.push('varkaalla');
    declesions[4].singular.ablative.push('varkaalta');
    declesions[4].singular.allative.push('varkaalle');
    declesions[4].singular.essive.push('varkaana');
    declesions[4].singular.translative.push('varkaaksi');
    declesions[4].singular.abessive.push('varkaatta');
    declesions[4].plural.nominative.push('varkaat');
    declesions[4].plural.genitive = ['varkaiden', 'varkaitten'].sort();
    declesions[4].plural.partitive.push('varkaita');
    declesions[4].plural.nominativeAccusative.push('varkaat');
    declesions[4].plural.inessive.push('varkaissa');
    declesions[4].plural.elative.push('varkaista');
    declesions[4].plural.illative = ['varkaisiin', 'varkaihin'].sort();
    declesions[4].plural.adessive.push('varkailla');
    declesions[4].plural.ablative.push('varkailta');
    declesions[4].plural.allative.push('varkaille');
    declesions[4].plural.essive.push('varkaina');
    declesions[4].plural.translative.push('varkaiksi');
    declesions[4].plural.instructive.push('varkain');
    declesions[4].plural.abessive.push('varkaitta');
    declesions[4].plural.comitative.push('varkaineen');

    declesions.push(new Declesion());
    declesions[5].singular.nominative.push('varvas');
    declesions[5].singular.genitive.push('varpaan');
    declesions[5].singular.partitive.push('varvasta');
    declesions[5].singular.nominativeAccusative.push('varvas');
    declesions[5].singular.genitiveAccusative.push('varpaan');
    declesions[5].singular.inessive.push('varpaassa');
    declesions[5].singular.elative.push('varpaasta');
    declesions[5].singular.illative.push('varpaaseen');
    declesions[5].singular.adessive.push('varpaalla');
    declesions[5].singular.ablative.push('varpaalta');
    declesions[5].singular.allative.push('varpaalle');
    declesions[5].singular.essive.push('varpaana');
    declesions[5].singular.translative.push('varpaaksi');
    declesions[5].singular.abessive.push('varpaatta');
    declesions[5].plural.nominative.push('varpaat');
    declesions[5].plural.genitive = ['varpaiden', 'varpaitten'].sort();
    declesions[5].plural.partitive.push('varpaita');
    declesions[5].plural.nominativeAccusative.push('varpaat');
    declesions[5].plural.inessive.push('varpaissa');
    declesions[5].plural.elative.push('varpaista');
    declesions[5].plural.illative = ['varpaisiin', 'varpaihin'].sort();
    declesions[5].plural.adessive.push('varpailla');
    declesions[5].plural.ablative.push('varpailta');
    declesions[5].plural.allative.push('varpaille');
    declesions[5].plural.essive.push('varpaina');
    declesions[5].plural.translative.push('varpaiksi');
    declesions[5].plural.instructive.push('varpain');
    declesions[5].plural.abessive.push('varpaitta');
    declesions[5].plural.comitative.push('varpaineen');

    declesions.push(new Declesion());
    declesions[6].singular.nominative.push('keidas');
    declesions[6].singular.genitive.push('keitaan');
    declesions[6].singular.partitive.push('keidasta');
    declesions[6].singular.nominativeAccusative.push('keidas');
    declesions[6].singular.genitiveAccusative.push('keitaan');
    declesions[6].singular.inessive.push('keitaassa');
    declesions[6].singular.elative.push('keitaasta');
    declesions[6].singular.illative.push('keitaaseen');
    declesions[6].singular.adessive.push('keitaalla');
    declesions[6].singular.ablative.push('keitaalta');
    declesions[6].singular.allative.push('keitaalle');
    declesions[6].singular.essive.push('keitaana');
    declesions[6].singular.translative.push('keitaaksi');
    declesions[6].singular.abessive.push('keitaatta');
    declesions[6].plural.nominative.push('keitaat');
    declesions[6].plural.genitive = ['keitaiden', 'keitaitten'].sort();
    declesions[6].plural.partitive.push('keitaita');
    declesions[6].plural.nominativeAccusative.push('keitaat');
    declesions[6].plural.inessive.push('keitaissa');
    declesions[6].plural.elative.push('keitaista');
    declesions[6].plural.illative = ['keitaisiin', 'keitaihin'].sort();
    declesions[6].plural.adessive.push('keitailla');
    declesions[6].plural.ablative.push('keitailta');
    declesions[6].plural.allative.push('keitaille');
    declesions[6].plural.essive.push('keitaina');
    declesions[6].plural.translative.push('keitaiksi');
    declesions[6].plural.instructive.push('keitain');
    declesions[6].plural.abessive.push('keitaitta');
    declesions[6].plural.comitative.push('keitaineen');

    declesions.push(new Declesion());
    declesions[7].singular.nominative.push('kangas');
    declesions[7].singular.genitive.push('kankaan');
    declesions[7].singular.partitive.push('kangasta');
    declesions[7].singular.nominativeAccusative.push('kangas');
    declesions[7].singular.genitiveAccusative.push('kankaan');
    declesions[7].singular.inessive.push('kankaassa');
    declesions[7].singular.elative.push('kankaasta');
    declesions[7].singular.illative.push('kankaaseen');
    declesions[7].singular.adessive.push('kankaalla');
    declesions[7].singular.ablative.push('kankaalta');
    declesions[7].singular.allative.push('kankaalle');
    declesions[7].singular.essive.push('kankaana');
    declesions[7].singular.translative.push('kankaaksi');
    declesions[7].singular.abessive.push('kankaatta');
    declesions[7].plural.nominative.push('kankaat');
    declesions[7].plural.genitive = ['kankaiden', 'kankaitten'].sort();
    declesions[7].plural.partitive.push('kankaita');
    declesions[7].plural.nominativeAccusative.push('kankaat');
    declesions[7].plural.inessive.push('kankaissa');
    declesions[7].plural.elative.push('kankaista');
    declesions[7].plural.illative = ['kankaisiin', 'kankaihin'].sort();
    declesions[7].plural.adessive.push('kankailla');
    declesions[7].plural.ablative.push('kankailta');
    declesions[7].plural.allative.push('kankaille');
    declesions[7].plural.essive.push('kankaina');
    declesions[7].plural.translative.push('kankaiksi');
    declesions[7].plural.instructive.push('kankain');
    declesions[7].plural.abessive.push('kankaitta');
    declesions[7].plural.comitative.push('kankaineen');

    declesions.push(new Declesion());
    declesions[8].singular.nominative.push('hammas');
    declesions[8].singular.genitive.push('hampaan');
    declesions[8].singular.partitive.push('hammasta');
    declesions[8].singular.nominativeAccusative.push('hammas');
    declesions[8].singular.genitiveAccusative.push('hampaan');
    declesions[8].singular.inessive.push('hampaassa');
    declesions[8].singular.elative.push('hampaasta');
    declesions[8].singular.illative.push('hampaaseen');
    declesions[8].singular.adessive.push('hampaalla');
    declesions[8].singular.ablative.push('hampaalta');
    declesions[8].singular.allative.push('hampaalle');
    declesions[8].singular.essive.push('hampaana');
    declesions[8].singular.translative.push('hampaaksi');
    declesions[8].singular.abessive.push('hampaatta');
    declesions[8].plural.nominative.push('hampaat');
    declesions[8].plural.genitive = ['hampaiden', 'hampaitten'].sort();
    declesions[8].plural.partitive.push('hampaita');
    declesions[8].plural.nominativeAccusative.push('hampaat');
    declesions[8].plural.inessive.push('hampaissa');
    declesions[8].plural.elative.push('hampaista');
    declesions[8].plural.illative = ['hampaisiin', 'hampaihin'].sort();
    declesions[8].plural.adessive.push('hampailla');
    declesions[8].plural.ablative.push('hampailta');
    declesions[8].plural.allative.push('hampaille');
    declesions[8].plural.essive.push('hampaina');
    declesions[8].plural.translative.push('hampaiksi');
    declesions[8].plural.instructive.push('hampain');
    declesions[8].plural.abessive.push('hampaitta');
    declesions[8].plural.comitative.push('hampaineen');

    declesions.push(new Declesion());
    declesions[9].singular.nominative.push('allas');
    declesions[9].singular.genitive.push('altaan');
    declesions[9].singular.partitive.push('allasta');
    declesions[9].singular.nominativeAccusative.push('allas');
    declesions[9].singular.genitiveAccusative.push('altaan');
    declesions[9].singular.inessive.push('altaassa');
    declesions[9].singular.elative.push('altaasta');
    declesions[9].singular.illative.push('altaaseen');
    declesions[9].singular.adessive.push('altaalla');
    declesions[9].singular.ablative.push('altaalta');
    declesions[9].singular.allative.push('altaalle');
    declesions[9].singular.essive.push('altaana');
    declesions[9].singular.translative.push('altaaksi');
    declesions[9].singular.abessive.push('altaatta');
    declesions[9].plural.nominative.push('altaat');
    declesions[9].plural.genitive = ['altaiden', 'altaitten'].sort();
    declesions[9].plural.partitive.push('altaita');
    declesions[9].plural.nominativeAccusative.push('altaat');
    declesions[9].plural.inessive.push('altaissa');
    declesions[9].plural.elative.push('altaista');
    declesions[9].plural.illative = ['altaisiin', 'altaihin'].sort();
    declesions[9].plural.adessive.push('altailla');
    declesions[9].plural.ablative.push('altailta');
    declesions[9].plural.allative.push('altaille');
    declesions[9].plural.essive.push('altaina');
    declesions[9].plural.translative.push('altaiksi');
    declesions[9].plural.instructive.push('altain');
    declesions[9].plural.abessive.push('altaitta');
    declesions[9].plural.comitative.push('altaineen');

    declesions.push(new Declesion());
    declesions[10].singular.nominative.push('rynnäs');
    declesions[10].singular.genitive.push('ryntään');
    declesions[10].singular.partitive.push('rynnästä');
    declesions[10].singular.nominativeAccusative.push('rynnäs');
    declesions[10].singular.genitiveAccusative.push('ryntään');
    declesions[10].singular.inessive.push('ryntäässä');
    declesions[10].singular.elative.push('ryntäästä');
    declesions[10].singular.illative.push('ryntääseen');
    declesions[10].singular.adessive.push('ryntäällä');
    declesions[10].singular.ablative.push('ryntäältä');
    declesions[10].singular.allative.push('ryntäälle');
    declesions[10].singular.essive.push('ryntäänä');
    declesions[10].singular.translative.push('ryntääksi');
    declesions[10].singular.abessive.push('ryntäättä');
    declesions[10].plural.nominative.push('ryntäät');
    declesions[10].plural.genitive = ['ryntäiden', 'ryntäitten'].sort();
    declesions[10].plural.partitive.push('ryntäitä');
    declesions[10].plural.nominativeAccusative.push('ryntäät');
    declesions[10].plural.inessive.push('ryntäissä');
    declesions[10].plural.elative.push('ryntäistä');
    declesions[10].plural.illative = ['ryntäisiin', 'ryntäihin'].sort();
    declesions[10].plural.adessive.push('ryntäillä');
    declesions[10].plural.ablative.push('ryntäiltä');
    declesions[10].plural.allative.push('ryntäille');
    declesions[10].plural.essive.push('ryntäinä');
    declesions[10].plural.translative.push('ryntäiksi');
    declesions[10].plural.instructive.push('ryntäin');
    declesions[10].plural.abessive.push('ryntäittä');
    declesions[10].plural.comitative.push('ryntäineen');

    declesions.push(new Declesion());
    declesions[11].singular.nominative.push('parras');
    declesions[11].singular.genitive.push('partaan');
    declesions[11].singular.partitive.push('parrasta');
    declesions[11].singular.nominativeAccusative.push('parras');
    declesions[11].singular.genitiveAccusative.push('partaan');
    declesions[11].singular.inessive.push('partaassa');
    declesions[11].singular.elative.push('partaasta');
    declesions[11].singular.illative.push('partaaseen');
    declesions[11].singular.adessive.push('partaalla');
    declesions[11].singular.ablative.push('partaalta');
    declesions[11].singular.allative.push('partaalle');
    declesions[11].singular.essive.push('partaana');
    declesions[11].singular.translative.push('partaaksi');
    declesions[11].singular.abessive.push('partaatta');
    declesions[11].plural.nominative.push('partaat');
    declesions[11].plural.genitive = ['partaiden', 'partaitten'].sort();
    declesions[11].plural.partitive.push('partaita');
    declesions[11].plural.nominativeAccusative.push('partaat');
    declesions[11].plural.inessive.push('partaissa');
    declesions[11].plural.elative.push('partaista');
    declesions[11].plural.illative = ['partaisiin', 'partaihin'].sort();
    declesions[11].plural.adessive.push('partailla');
    declesions[11].plural.ablative.push('partailta');
    declesions[11].plural.allative.push('partaille');
    declesions[11].plural.essive.push('partaina');
    declesions[11].plural.translative.push('partaiksi');
    declesions[11].plural.instructive.push('partain');
    declesions[11].plural.abessive.push('partaitta');
    declesions[11].plural.comitative.push('partaineen');

    declesions.push(new Declesion());
    declesions[12].singular.nominative.push('paras');
    declesions[12].singular.genitive.push('parhaan');
    declesions[12].singular.partitive.push('parasta');
    declesions[12].singular.nominativeAccusative.push('paras');
    declesions[12].singular.genitiveAccusative.push('parhaan');
    declesions[12].singular.inessive.push('parhaassa');
    declesions[12].singular.elative.push('parhaasta');
    declesions[12].singular.illative.push('parhaaseen');
    declesions[12].singular.adessive.push('parhaalla');
    declesions[12].singular.ablative.push('parhaalta');
    declesions[12].singular.allative.push('parhaalle');
    declesions[12].singular.essive.push('parhaana');
    declesions[12].singular.translative.push('parhaaksi');
    declesions[12].singular.abessive.push('parhaatta');
    declesions[12].plural.nominative.push('parhaat');
    declesions[12].plural.genitive = ['parhaiden', 'parhaitten'].sort();
    declesions[12].plural.partitive.push('parhaita');
    declesions[12].plural.nominativeAccusative.push('parhaat');
    declesions[12].plural.inessive.push('parhaissa');
    declesions[12].plural.elative.push('parhaista');
    declesions[12].plural.illative = ['parhaisiin', 'parhaihin'].sort();
    declesions[12].plural.adessive.push('parhailla');
    declesions[12].plural.ablative.push('parhailta');
    declesions[12].plural.allative.push('parhaille');
    declesions[12].plural.essive.push('parhaina');
    declesions[12].plural.translative.push('parhaiksi');
    declesions[12].plural.instructive.push('parhain');
    declesions[12].plural.abessive.push('parhaitta');
    declesions[12].plural.comitative.push('parhaineen');
    
    service.decline('vieras').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('maukas').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('lipas').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
    service.decline('ratas').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[3]]);
    });
    service.decline('varas').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[4]]);
    });
    service.decline('varvas').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[5]]);
    });
    service.decline('keidas').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[6]]);
    });
    service.decline('kangas').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[7]]);
    });
    service.decline('hammas').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[8]]);
    });
    service.decline('allas').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[9]]);
    });
    service.decline('rynnäs').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[10]]);
    });
    service.decline('parras').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[11]]);
    });
    service.decline('paras').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[12]]);
    });
  }));

  it('should decline type 42 (mies)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('mies');
    declesions[0].singular.genitive.push('miehen');
    declesions[0].singular.partitive.push('miestä');
    declesions[0].singular.nominativeAccusative.push('mies');
    declesions[0].singular.genitiveAccusative.push('miehen');
    declesions[0].singular.inessive.push('miehessä');
    declesions[0].singular.elative.push('miehestä');
    declesions[0].singular.illative.push('mieheen');
    declesions[0].singular.adessive.push('miehellä');
    declesions[0].singular.ablative.push('mieheltä');
    declesions[0].singular.allative.push('miehelle');
    declesions[0].singular.essive.push('miehenä');
    declesions[0].singular.translative.push('mieheksi');
    declesions[0].singular.abessive.push('miehettä');
    declesions[0].plural.nominative.push('miehet');
    declesions[0].plural.genitive = ['miehien', 'miesten'].sort();
    declesions[0].plural.partitive.push('miehiä');
    declesions[0].plural.nominativeAccusative.push('miehet');
    declesions[0].plural.inessive.push('miehissä');
    declesions[0].plural.elative.push('miehistä');
    declesions[0].plural.illative.push('miehiin');
    declesions[0].plural.adessive.push('miehillä');
    declesions[0].plural.ablative.push('miehiltä');
    declesions[0].plural.allative.push('miehille');
    declesions[0].plural.essive.push('miehinä');
    declesions[0].plural.translative.push('miehiksi');
    declesions[0].plural.instructive.push('miehin');
    declesions[0].plural.abessive.push('miehittä');
    declesions[0].plural.comitative.push('miehineen');

    service.decline('mies').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 43 (ohut)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('ohut');
    declesions[0].singular.genitive.push('ohuen');
    declesions[0].singular.partitive.push('ohutta');
    declesions[0].singular.nominativeAccusative.push('ohut');
    declesions[0].singular.genitiveAccusative.push('ohuen');
    declesions[0].singular.inessive.push('ohuessa');
    declesions[0].singular.elative.push('ohuesta');
    declesions[0].singular.illative.push('ohueen');
    declesions[0].singular.adessive.push('ohuella');
    declesions[0].singular.ablative.push('ohuelta');
    declesions[0].singular.allative.push('ohuelle');
    declesions[0].singular.essive.push('ohuena');
    declesions[0].singular.translative.push('ohueksi');
    declesions[0].singular.abessive.push('ohuetta');
    declesions[0].plural.nominative.push('ohuet');
    declesions[0].plural.genitive = ['ohuiden', 'ohuitten'].sort();
    declesions[0].plural.partitive.push('ohuita');
    declesions[0].plural.nominativeAccusative.push('ohuet');
    declesions[0].plural.inessive.push('ohuissa');
    declesions[0].plural.elative.push('ohuista');
    declesions[0].plural.illative = ['ohuisiin', 'ohuihin'].sort();
    declesions[0].plural.adessive.push('ohuilla');
    declesions[0].plural.ablative.push('ohuilta');
    declesions[0].plural.allative.push('ohuille');
    declesions[0].plural.essive.push('ohuina');
    declesions[0].plural.translative.push('ohuiksi');
    declesions[0].plural.instructive.push('ohuin');
    declesions[0].plural.abessive.push('ohuitta');
    declesions[0].plural.comitative.push('ohuineen');

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('immyt');
    declesions[1].singular.genitive.push('impyen');
    declesions[1].singular.partitive.push('immyttä');
    declesions[1].singular.nominativeAccusative.push('immyt');
    declesions[1].singular.genitiveAccusative.push('impyen');
    declesions[1].singular.inessive.push('impyessä');
    declesions[1].singular.elative.push('impyestä');
    declesions[1].singular.illative.push('impyeen');
    declesions[1].singular.adessive.push('impyellä');
    declesions[1].singular.ablative.push('impyeltä');
    declesions[1].singular.allative.push('impyelle');
    declesions[1].singular.essive.push('impyenä');
    declesions[1].singular.translative.push('impyeksi');
    declesions[1].singular.abessive.push('impyettä');
    declesions[1].plural.nominative.push('impyet');
    declesions[1].plural.genitive = ['impyiden', 'impyitten'].sort();
    declesions[1].plural.partitive.push('impyitä');
    declesions[1].plural.nominativeAccusative.push('impyet');
    declesions[1].plural.inessive.push('impyissä');
    declesions[1].plural.elative.push('impyistä');
    declesions[1].plural.illative = ['impyisiin', 'impyihin'].sort();
    declesions[1].plural.adessive.push('impyillä');
    declesions[1].plural.ablative.push('impyiltä');
    declesions[1].plural.allative.push('impyille');
    declesions[1].plural.essive.push('impyinä');
    declesions[1].plural.translative.push('impyiksi');
    declesions[1].plural.instructive.push('impyin');
    declesions[1].plural.abessive.push('impyittä');
    declesions[1].plural.comitative.push('impyineen');

    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('neiyt');
    declesions[2].singular.genitive.push('neityen');
    declesions[2].singular.partitive.push('neiyttä');
    declesions[2].singular.nominativeAccusative.push('neiyt');
    declesions[2].singular.genitiveAccusative.push('neityen');
    declesions[2].singular.inessive.push('neityessä');
    declesions[2].singular.elative.push('neityestä');
    declesions[2].singular.illative.push('neityeen');
    declesions[2].singular.adessive.push('neityellä');
    declesions[2].singular.ablative.push('neityeltä');
    declesions[2].singular.allative.push('neityelle');
    declesions[2].singular.essive.push('neityenä');
    declesions[2].singular.translative.push('neityeksi');
    declesions[2].singular.abessive.push('neityettä');
    declesions[2].plural.nominative.push('neityet');
    declesions[2].plural.genitive = ['neityiden', 'neityitten'].sort();
    declesions[2].plural.partitive.push('neityitä');
    declesions[2].plural.nominativeAccusative.push('neityet');
    declesions[2].plural.inessive.push('neityissä');
    declesions[2].plural.elative.push('neityistä');
    declesions[2].plural.illative = ['neityisiin', 'neityihin'].sort();
    declesions[2].plural.adessive.push('neityillä');
    declesions[2].plural.ablative.push('neityiltä');
    declesions[2].plural.allative.push('neityille');
    declesions[2].plural.essive.push('neityinä');
    declesions[2].plural.translative.push('neityiksi');
    declesions[2].plural.instructive.push('neityin');
    declesions[2].plural.abessive.push('neityittä');
    declesions[2].plural.comitative.push('neityineen');

    service.decline('ohut').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('immyt').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('neiyt').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
  }));

  it('should decline type 44 (kevät)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('kevät');
    declesions[0].singular.genitive.push('kevään');
    declesions[0].singular.partitive.push('kevättä');
    declesions[0].singular.nominativeAccusative.push('kevät');
    declesions[0].singular.genitiveAccusative.push('kevään');
    declesions[0].singular.inessive.push('keväässä');
    declesions[0].singular.elative.push('keväästä');
    declesions[0].singular.illative.push('kevääseen');
    declesions[0].singular.adessive.push('keväällä');
    declesions[0].singular.ablative.push('keväältä');
    declesions[0].singular.allative.push('keväälle');
    declesions[0].singular.essive.push('keväänä');
    declesions[0].singular.translative.push('kevääksi');
    declesions[0].singular.abessive.push('keväättä');
    declesions[0].plural.nominative.push('keväät');
    declesions[0].plural.genitive = ['keväiden', 'keväitten'].sort();
    declesions[0].plural.partitive.push('keväitä');
    declesions[0].plural.nominativeAccusative.push('keväät');
    declesions[0].plural.inessive.push('keväissä');
    declesions[0].plural.elative.push('keväistä');
    declesions[0].plural.illative = ['keväisiin', 'keväihin'].sort();
    declesions[0].plural.adessive.push('keväillä');
    declesions[0].plural.ablative.push('keväiltä');
    declesions[0].plural.allative.push('keväille');
    declesions[0].plural.essive.push('keväinä');
    declesions[0].plural.translative.push('keväiksi');
    declesions[0].plural.instructive.push('keväin');
    declesions[0].plural.abessive.push('keväittä');
    declesions[0].plural.comitative.push('keväineen');

    service.decline('kevät').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 45 (kahdeksas)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('kahdeksas');
    declesions[0].singular.genitive.push('kahdeksannen');
    declesions[0].singular.partitive.push('kahdeksatta');
    declesions[0].singular.nominativeAccusative.push('kahdeksas');
    declesions[0].singular.genitiveAccusative.push('kahdeksannen');
    declesions[0].singular.inessive.push('kahdeksannessa');
    declesions[0].singular.elative.push('kahdeksannesta');
    declesions[0].singular.illative.push('kahdeksanteen');
    declesions[0].singular.adessive.push('kahdeksannella');
    declesions[0].singular.ablative.push('kahdeksannelta');
    declesions[0].singular.allative.push('kahdeksannelle');
    declesions[0].singular.essive.push('kahdeksantena');
    declesions[0].singular.translative.push('kahdeksanneksi');
    declesions[0].singular.abessive.push('kahdeksannetta');
    declesions[0].plural.nominative.push('kahdeksannet');
    declesions[0].plural.genitive.push('kahdeksansien');
    declesions[0].plural.partitive.push('kahdeksansia');
    declesions[0].plural.nominativeAccusative.push('kahdeksannet');
    declesions[0].plural.inessive.push('kahdeksansissa');
    declesions[0].plural.elative.push('kahdeksansista');
    declesions[0].plural.illative.push('kahdeksansiin');
    declesions[0].plural.adessive.push('kahdeksansilla');
    declesions[0].plural.ablative.push('kahdeksansilta');
    declesions[0].plural.allative.push('kahdeksansille');
    declesions[0].plural.essive.push('kahdeksansina');
    declesions[0].plural.translative.push('kahdeksansiksi');
    declesions[0].plural.instructive.push('kahdeksansin');
    declesions[0].plural.abessive.push('kahdeksansitta');
    declesions[0].plural.comitative.push('kahdeksansineen');

    service.decline('kahdeksas').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 46 (tuhat)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('tuhat');
    declesions[0].singular.genitive.push('tuhannen');
    declesions[0].singular.partitive.push('tuhatta');
    declesions[0].singular.nominativeAccusative.push('tuhat');
    declesions[0].singular.genitiveAccusative.push('tuhannen');
    declesions[0].singular.inessive.push('tuhannessa');
    declesions[0].singular.elative.push('tuhannesta');
    declesions[0].singular.illative.push('tuhanteen');
    declesions[0].singular.adessive.push('tuhannella');
    declesions[0].singular.ablative.push('tuhannelta');
    declesions[0].singular.allative.push('tuhannelle');
    declesions[0].singular.essive.push('tuhantena');
    declesions[0].singular.translative.push('tuhanneksi');
    declesions[0].singular.abessive.push('tuhannetta');
    declesions[0].plural.nominative.push('tuhannet');
    declesions[0].plural.genitive = ['tuhansien', 'tuhanten'].sort();
    declesions[0].plural.partitive.push('tuhansia');
    declesions[0].plural.nominativeAccusative.push('tuhannet');
    declesions[0].plural.inessive.push('tuhansissa');
    declesions[0].plural.elative.push('tuhansista');
    declesions[0].plural.illative.push('tuhansiin');
    declesions[0].plural.adessive.push('tuhansilla');
    declesions[0].plural.ablative.push('tuhansilta');
    declesions[0].plural.allative.push('tuhansille');
    declesions[0].plural.essive.push('tuhansina');
    declesions[0].plural.translative.push('tuhansiksi');
    declesions[0].plural.instructive.push('tuhansin');
    declesions[0].plural.abessive.push('tuhansitta');
    declesions[0].plural.comitative.push('tuhansineen');

    service.decline('tuhat').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 47 (kuollut)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('kuollut');
    declesions[0].singular.genitive.push('kuolleen');
    declesions[0].singular.partitive.push('kuollutta');
    declesions[0].singular.nominativeAccusative.push('kuollut');
    declesions[0].singular.genitiveAccusative.push('kuolleen');
    declesions[0].singular.inessive.push('kuolleessa');
    declesions[0].singular.elative.push('kuolleesta');
    declesions[0].singular.illative.push('kuolleeseen');
    declesions[0].singular.adessive.push('kuolleella');
    declesions[0].singular.ablative.push('kuolleelta');
    declesions[0].singular.allative.push('kuolleelle');
    declesions[0].singular.essive.push('kuolleena');
    declesions[0].singular.translative.push('kuolleeksi');
    declesions[0].singular.abessive.push('kuolleetta');
    declesions[0].plural.nominative.push('kuolleet');
    declesions[0].plural.genitive = ['kuolleiden', 'kuolleitten'].sort();
    declesions[0].plural.partitive.push('kuolleita');
    declesions[0].plural.nominativeAccusative.push('kuolleet');
    declesions[0].plural.inessive.push('kuolleissa');
    declesions[0].plural.elative.push('kuolleista');
    declesions[0].plural.illative = ['kuolleihin', 'kuolleisiin'].sort();
    declesions[0].plural.adessive.push('kuolleilla');
    declesions[0].plural.ablative.push('kuolleilta');
    declesions[0].plural.allative.push('kuolleille');
    declesions[0].plural.essive.push('kuolleina');
    declesions[0].plural.translative.push('kuolleiksi');
    declesions[0].plural.instructive.push('kuollein');
    declesions[0].plural.abessive.push('kuolleitta');
    declesions[0].plural.comitative.push('kuolleineen');

    service.decline('kuollut').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline type 48 (hame)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('hame');
    declesions[0].singular.genitive.push('hameen');
    declesions[0].singular.partitive.push('hametta');
    declesions[0].singular.nominativeAccusative.push('hame');
    declesions[0].singular.genitiveAccusative.push('hameen');
    declesions[0].singular.inessive.push('hameessa');
    declesions[0].singular.elative.push('hameesta');
    declesions[0].singular.illative.push('hameeseen');
    declesions[0].singular.adessive.push('hameella');
    declesions[0].singular.ablative.push('hameelta');
    declesions[0].singular.allative.push('hameelle');
    declesions[0].singular.essive.push('hameena');
    declesions[0].singular.translative.push('hameeksi');
    declesions[0].singular.abessive.push('hameetta');
    declesions[0].plural.nominative.push('hameet');
    declesions[0].plural.genitive = ['hameiden', 'hameitten'].sort();
    declesions[0].plural.partitive.push('hameita');
    declesions[0].plural.nominativeAccusative.push('hameet');
    declesions[0].plural.inessive.push('hameissa');
    declesions[0].plural.elative.push('hameista');
    declesions[0].plural.illative = ['hameihin', 'hameisiin'].sort();
    declesions[0].plural.adessive.push('hameilla');
    declesions[0].plural.ablative.push('hameilta');
    declesions[0].plural.allative.push('hameille');
    declesions[0].plural.essive.push('hameina');
    declesions[0].plural.translative.push('hameiksi');
    declesions[0].plural.instructive.push('hamein');
    declesions[0].plural.abessive.push('hameitta');
    declesions[0].plural.comitative.push('hameineen');

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('savuke');
    declesions[1].singular.genitive.push('savukkeen');
    declesions[1].singular.partitive.push('savuketta');
    declesions[1].singular.nominativeAccusative.push('savuke');
    declesions[1].singular.genitiveAccusative.push('savukkeen');
    declesions[1].singular.inessive.push('savukkeessa');
    declesions[1].singular.elative.push('savukkeesta');
    declesions[1].singular.illative.push('savukkeeseen');
    declesions[1].singular.adessive.push('savukkeella');
    declesions[1].singular.ablative.push('savukkeelta');
    declesions[1].singular.allative.push('savukkeelle');
    declesions[1].singular.essive.push('savukkeena');
    declesions[1].singular.translative.push('savukkeeksi');
    declesions[1].singular.abessive.push('savukkeetta');
    declesions[1].plural.nominative.push('savukkeet');
    declesions[1].plural.genitive = ['savukkeiden', 'savukkeitten'].sort();
    declesions[1].plural.partitive.push('savukkeita');
    declesions[1].plural.nominativeAccusative.push('savukkeet');
    declesions[1].plural.inessive.push('savukkeissa');
    declesions[1].plural.elative.push('savukkeista');
    declesions[1].plural.illative = ['savukkeihin', 'savukkeisiin'].sort();
    declesions[1].plural.adessive.push('savukkeilla');
    declesions[1].plural.ablative.push('savukkeilta');
    declesions[1].plural.allative.push('savukkeille');
    declesions[1].plural.essive.push('savukkeina');
    declesions[1].plural.translative.push('savukkeiksi');
    declesions[1].plural.instructive.push('savukkein');
    declesions[1].plural.abessive.push('savukkeitta');
    declesions[1].plural.comitative.push('savukkeineen');

    declesions.push(new Declesion());
    declesions[2].singular.nominative.push('ape');
    declesions[2].singular.genitive.push('appeen');
    declesions[2].singular.partitive.push('apetta');
    declesions[2].singular.nominativeAccusative.push('ape');
    declesions[2].singular.genitiveAccusative.push('appeen');
    declesions[2].singular.inessive.push('appeessa');
    declesions[2].singular.elative.push('appeesta');
    declesions[2].singular.illative.push('appeeseen');
    declesions[2].singular.adessive.push('appeella');
    declesions[2].singular.ablative.push('appeelta');
    declesions[2].singular.allative.push('appeelle');
    declesions[2].singular.essive.push('appeena');
    declesions[2].singular.translative.push('appeeksi');
    declesions[2].singular.abessive.push('appeetta');
    declesions[2].plural.nominative.push('appeet');
    declesions[2].plural.genitive = ['appeiden', 'appeitten'].sort();
    declesions[2].plural.partitive.push('appeita');
    declesions[2].plural.nominativeAccusative.push('appeet');
    declesions[2].plural.inessive.push('appeissa');
    declesions[2].plural.elative.push('appeista');
    declesions[2].plural.illative = ['appeihin', 'appeisiin'].sort();
    declesions[2].plural.adessive.push('appeilla');
    declesions[2].plural.ablative.push('appeilta');
    declesions[2].plural.allative.push('appeille');
    declesions[2].plural.essive.push('appeina');
    declesions[2].plural.translative.push('appeiksi');
    declesions[2].plural.instructive.push('appein');
    declesions[2].plural.abessive.push('appeitta');
    declesions[2].plural.comitative.push('appeineen');

    declesions.push(new Declesion());
    declesions[3].singular.nominative.push('peite');
    declesions[3].singular.genitive.push('peitteen');
    declesions[3].singular.partitive.push('peitettä');
    declesions[3].singular.nominativeAccusative.push('peite');
    declesions[3].singular.genitiveAccusative.push('peitteen');
    declesions[3].singular.inessive.push('peitteessä');
    declesions[3].singular.elative.push('peitteestä');
    declesions[3].singular.illative.push('peitteeseen');
    declesions[3].singular.adessive.push('peitteellä');
    declesions[3].singular.ablative.push('peitteeltä');
    declesions[3].singular.allative.push('peitteelle');
    declesions[3].singular.essive.push('peitteenä');
    declesions[3].singular.translative.push('peitteeksi');
    declesions[3].singular.abessive.push('peitteettä');
    declesions[3].plural.nominative.push('peitteet');
    declesions[3].plural.genitive = ['peitteiden', 'peitteitten'].sort();
    declesions[3].plural.partitive.push('peitteitä');
    declesions[3].plural.nominativeAccusative.push('peitteet');
    declesions[3].plural.inessive.push('peitteissä');
    declesions[3].plural.elative.push('peitteistä');
    declesions[3].plural.illative = ['peitteihin', 'peitteisiin'].sort();
    declesions[3].plural.adessive.push('peitteillä');
    declesions[3].plural.ablative.push('peitteiltä');
    declesions[3].plural.allative.push('peitteille');
    declesions[3].plural.essive.push('peitteinä');
    declesions[3].plural.translative.push('peitteiksi');
    declesions[3].plural.instructive.push('peittein');
    declesions[3].plural.abessive.push('peitteittä');
    declesions[3].plural.comitative.push('peitteineen');

    declesions.push(new Declesion());
    declesions[4].singular.nominative.push('aie');
    declesions[4].singular.genitive.push('aikeen');
    declesions[4].singular.partitive.push('aietta');
    declesions[4].singular.nominativeAccusative.push('aie');
    declesions[4].singular.genitiveAccusative.push('aikeen');
    declesions[4].singular.inessive.push('aikeessa');
    declesions[4].singular.elative.push('aikeesta');
    declesions[4].singular.illative.push('aikeeseen');
    declesions[4].singular.adessive.push('aikeella');
    declesions[4].singular.ablative.push('aikeelta');
    declesions[4].singular.allative.push('aikeelle');
    declesions[4].singular.essive.push('aikeena');
    declesions[4].singular.translative.push('aikeeksi');
    declesions[4].singular.abessive.push('aikeetta');
    declesions[4].plural.nominative.push('aikeet');
    declesions[4].plural.genitive = ['aikeiden', 'aikeitten'].sort();
    declesions[4].plural.partitive.push('aikeita');
    declesions[4].plural.nominativeAccusative.push('aikeet');
    declesions[4].plural.inessive.push('aikeissa');
    declesions[4].plural.elative.push('aikeista');
    declesions[4].plural.illative = ['aikeihin', 'aikeisiin'].sort();
    declesions[4].plural.adessive.push('aikeilla');
    declesions[4].plural.ablative.push('aikeilta');
    declesions[4].plural.allative.push('aikeille');
    declesions[4].plural.essive.push('aikeina');
    declesions[4].plural.translative.push('aikeiksi');
    declesions[4].plural.instructive.push('aikein');
    declesions[4].plural.abessive.push('aikeitta');
    declesions[4].plural.comitative.push('aikeineen');

    declesions.push(new Declesion());
    declesions[5].singular.nominative.push('taive');
    declesions[5].singular.genitive.push('taipeen');
    declesions[5].singular.partitive.push('taivetta');
    declesions[5].singular.nominativeAccusative.push('taive');
    declesions[5].singular.genitiveAccusative.push('taipeen');
    declesions[5].singular.inessive.push('taipeessa');
    declesions[5].singular.elative.push('taipeesta');
    declesions[5].singular.illative.push('taipeeseen');
    declesions[5].singular.adessive.push('taipeella');
    declesions[5].singular.ablative.push('taipeelta');
    declesions[5].singular.allative.push('taipeelle');
    declesions[5].singular.essive.push('taipeena');
    declesions[5].singular.translative.push('taipeeksi');
    declesions[5].singular.abessive.push('taipeetta');
    declesions[5].plural.nominative.push('taipeet');
    declesions[5].plural.genitive = ['taipeiden', 'taipeitten'].sort();
    declesions[5].plural.partitive.push('taipeita');
    declesions[5].plural.nominativeAccusative.push('taipeet');
    declesions[5].plural.inessive.push('taipeissa');
    declesions[5].plural.elative.push('taipeista');
    declesions[5].plural.illative = ['taipeihin', 'taipeisiin'].sort();
    declesions[5].plural.adessive.push('taipeilla');
    declesions[5].plural.ablative.push('taipeilta');
    declesions[5].plural.allative.push('taipeille');
    declesions[5].plural.essive.push('taipeina');
    declesions[5].plural.translative.push('taipeiksi');
    declesions[5].plural.instructive.push('taipein');
    declesions[5].plural.abessive.push('taipeitta');
    declesions[5].plural.comitative.push('taipeineen');

    declesions.push(new Declesion());
    declesions[6].singular.nominative.push('sade');
    declesions[6].singular.genitive.push('sateen');
    declesions[6].singular.partitive.push('sadetta');
    declesions[6].singular.nominativeAccusative.push('sade');
    declesions[6].singular.genitiveAccusative.push('sateen');
    declesions[6].singular.inessive.push('sateessa');
    declesions[6].singular.elative.push('sateesta');
    declesions[6].singular.illative.push('sateeseen');
    declesions[6].singular.adessive.push('sateella');
    declesions[6].singular.ablative.push('sateelta');
    declesions[6].singular.allative.push('sateelle');
    declesions[6].singular.essive.push('sateena');
    declesions[6].singular.translative.push('sateeksi');
    declesions[6].singular.abessive.push('sateetta');
    declesions[6].plural.nominative.push('sateet');
    declesions[6].plural.genitive = ['sateiden', 'sateitten'].sort();
    declesions[6].plural.partitive.push('sateita');
    declesions[6].plural.nominativeAccusative.push('sateet');
    declesions[6].plural.inessive.push('sateissa');
    declesions[6].plural.elative.push('sateista');
    declesions[6].plural.illative = ['sateihin', 'sateisiin'].sort();
    declesions[6].plural.adessive.push('sateilla');
    declesions[6].plural.ablative.push('sateilta');
    declesions[6].plural.allative.push('sateille');
    declesions[6].plural.essive.push('sateina');
    declesions[6].plural.translative.push('sateiksi');
    declesions[6].plural.instructive.push('satein');
    declesions[6].plural.abessive.push('sateitta');
    declesions[6].plural.comitative.push('sateineen');

    declesions.push(new Declesion());
    declesions[7].singular.nominative.push('lumme');
    declesions[7].singular.genitive.push('lumpeen');
    declesions[7].singular.partitive.push('lummetta');
    declesions[7].singular.nominativeAccusative.push('lumme');
    declesions[7].singular.genitiveAccusative.push('lumpeen');
    declesions[7].singular.inessive.push('lumpeessa');
    declesions[7].singular.elative.push('lumpeesta');
    declesions[7].singular.illative.push('lumpeeseen');
    declesions[7].singular.adessive.push('lumpeella');
    declesions[7].singular.ablative.push('lumpeelta');
    declesions[7].singular.allative.push('lumpeelle');
    declesions[7].singular.essive.push('lumpeena');
    declesions[7].singular.translative.push('lumpeeksi');
    declesions[7].singular.abessive.push('lumpeetta');
    declesions[7].plural.nominative.push('lumpeet');
    declesions[7].plural.genitive = ['lumpeiden', 'lumpeitten'].sort();
    declesions[7].plural.partitive.push('lumpeita');
    declesions[7].plural.nominativeAccusative.push('lumpeet');
    declesions[7].plural.inessive.push('lumpeissa');
    declesions[7].plural.elative.push('lumpeista');
    declesions[7].plural.illative = ['lumpeihin', 'lumpeisiin'].sort();
    declesions[7].plural.adessive.push('lumpeilla');
    declesions[7].plural.ablative.push('lumpeilta');
    declesions[7].plural.allative.push('lumpeille');
    declesions[7].plural.essive.push('lumpeina');
    declesions[7].plural.translative.push('lumpeiksi');
    declesions[7].plural.instructive.push('lumpein');
    declesions[7].plural.abessive.push('lumpeitta');
    declesions[7].plural.comitative.push('lumpeineen');

    declesions.push(new Declesion());
    declesions[8].singular.nominative.push('kimalle');
    declesions[8].singular.genitive.push('kimalteen');
    declesions[8].singular.partitive.push('kimalletta');
    declesions[8].singular.nominativeAccusative.push('kimalle');
    declesions[8].singular.genitiveAccusative.push('kimalteen');
    declesions[8].singular.inessive.push('kimalteessa');
    declesions[8].singular.elative.push('kimalteesta');
    declesions[8].singular.illative.push('kimalteeseen');
    declesions[8].singular.adessive.push('kimalteella');
    declesions[8].singular.ablative.push('kimalteelta');
    declesions[8].singular.allative.push('kimalteelle');
    declesions[8].singular.essive.push('kimalteena');
    declesions[8].singular.translative.push('kimalteeksi');
    declesions[8].singular.abessive.push('kimalteetta');
    declesions[8].plural.nominative.push('kimalteet');
    declesions[8].plural.genitive = ['kimalteiden', 'kimalteitten'].sort();
    declesions[8].plural.partitive.push('kimalteita');
    declesions[8].plural.nominativeAccusative.push('kimalteet');
    declesions[8].plural.inessive.push('kimalteissa');
    declesions[8].plural.elative.push('kimalteista');
    declesions[8].plural.illative = ['kimalteihin', 'kimalteisiin'].sort();
    declesions[8].plural.adessive.push('kimalteilla');
    declesions[8].plural.ablative.push('kimalteilta');
    declesions[8].plural.allative.push('kimalteille');
    declesions[8].plural.essive.push('kimalteina');
    declesions[8].plural.translative.push('kimalteiksi');
    declesions[8].plural.instructive.push('kimaltein');
    declesions[8].plural.abessive.push('kimalteitta');
    declesions[8].plural.comitative.push('kimalteineen');

    declesions.push(new Declesion());
    declesions[9].singular.nominative.push('vanne');
    declesions[9].singular.genitive.push('vanteen');
    declesions[9].singular.partitive.push('vannetta');
    declesions[9].singular.nominativeAccusative.push('vanne');
    declesions[9].singular.genitiveAccusative.push('vanteen');
    declesions[9].singular.inessive.push('vanteessa');
    declesions[9].singular.elative.push('vanteesta');
    declesions[9].singular.illative.push('vanteeseen');
    declesions[9].singular.adessive.push('vanteella');
    declesions[9].singular.ablative.push('vanteelta');
    declesions[9].singular.allative.push('vanteelle');
    declesions[9].singular.essive.push('vanteena');
    declesions[9].singular.translative.push('vanteeksi');
    declesions[9].singular.abessive.push('vanteetta');
    declesions[9].plural.nominative.push('vanteet');
    declesions[9].plural.genitive = ['vanteiden', 'vanteitten'].sort();
    declesions[9].plural.partitive.push('vanteita');
    declesions[9].plural.nominativeAccusative.push('vanteet');
    declesions[9].plural.inessive.push('vanteissa');
    declesions[9].plural.elative.push('vanteista');
    declesions[9].plural.illative = ['vanteihin', 'vanteisiin'].sort();
    declesions[9].plural.adessive.push('vanteilla');
    declesions[9].plural.ablative.push('vanteilta');
    declesions[9].plural.allative.push('vanteille');
    declesions[9].plural.essive.push('vanteina');
    declesions[9].plural.translative.push('vanteiksi');
    declesions[9].plural.instructive.push('vantein');
    declesions[9].plural.abessive.push('vanteitta');
    declesions[9].plural.comitative.push('vanteineen');

    declesions.push(new Declesion());
    declesions[10].singular.nominative.push('aarre');
    declesions[10].singular.genitive.push('aarteen');
    declesions[10].singular.partitive.push('aarretta');
    declesions[10].singular.nominativeAccusative.push('aarre');
    declesions[10].singular.genitiveAccusative.push('aarteen');
    declesions[10].singular.inessive.push('aarteessa');
    declesions[10].singular.elative.push('aarteesta');
    declesions[10].singular.illative.push('aarteeseen');
    declesions[10].singular.adessive.push('aarteella');
    declesions[10].singular.ablative.push('aarteelta');
    declesions[10].singular.allative.push('aarteelle');
    declesions[10].singular.essive.push('aarteena');
    declesions[10].singular.translative.push('aarteeksi');
    declesions[10].singular.abessive.push('aarteetta');
    declesions[10].plural.nominative.push('aarteet');
    declesions[10].plural.genitive = ['aarteiden', 'aarteitten'].sort();
    declesions[10].plural.partitive.push('aarteita');
    declesions[10].plural.nominativeAccusative.push('aarteet');
    declesions[10].plural.inessive.push('aarteissa');
    declesions[10].plural.elative.push('aarteista');
    declesions[10].plural.illative = ['aarteihin', 'aarteisiin'].sort();
    declesions[10].plural.adessive.push('aarteilla');
    declesions[10].plural.ablative.push('aarteilta');
    declesions[10].plural.allative.push('aarteille');
    declesions[10].plural.essive.push('aarteina');
    declesions[10].plural.translative.push('aarteiksi');
    declesions[10].plural.instructive.push('aartein');
    declesions[10].plural.abessive.push('aarteitta');
    declesions[10].plural.comitative.push('aarteineen');

    declesions.push(new Declesion());
    declesions[11].singular.nominative.push('lahje');
    declesions[11].singular.genitive.push('lahkeen');
    declesions[11].singular.partitive.push('lahjetta');
    declesions[11].singular.nominativeAccusative.push('lahje');
    declesions[11].singular.genitiveAccusative.push('lahkeen');
    declesions[11].singular.inessive.push('lahkeessa');
    declesions[11].singular.elative.push('lahkeesta');
    declesions[11].singular.illative.push('lahkeeseen');
    declesions[11].singular.adessive.push('lahkeella');
    declesions[11].singular.ablative.push('lahkeelta');
    declesions[11].singular.allative.push('lahkeelle');
    declesions[11].singular.essive.push('lahkeena');
    declesions[11].singular.translative.push('lahkeeksi');
    declesions[11].singular.abessive.push('lahkeetta');
    declesions[11].plural.nominative.push('lahkeet');
    declesions[11].plural.genitive = ['lahkeiden', 'lahkeitten'].sort();
    declesions[11].plural.partitive.push('lahkeita');
    declesions[11].plural.nominativeAccusative.push('lahkeet');
    declesions[11].plural.inessive.push('lahkeissa');
    declesions[11].plural.elative.push('lahkeista');
    declesions[11].plural.illative = ['lahkeihin', 'lahkeisiin'].sort();
    declesions[11].plural.adessive.push('lahkeilla');
    declesions[11].plural.ablative.push('lahkeilta');
    declesions[11].plural.allative.push('lahkeille');
    declesions[11].plural.essive.push('lahkeina');
    declesions[11].plural.translative.push('lahkeiksi');
    declesions[11].plural.instructive.push('lahkein');
    declesions[11].plural.abessive.push('lahkeitta');
    declesions[11].plural.comitative.push('lahkeineen');

    service.decline('hame').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('savuke').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
    service.decline('ape').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[2]]);
    });
    service.decline('peite').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[3]]);
    });
    service.decline('aie').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[4]]);
    });
    service.decline('taive').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[5]]);
    });
    service.decline('sade').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[6]]);
    });
    service.decline('lumme').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[7]]);
    });
    service.decline('kimalle').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[8]]);
    });
    service.decline('vanne').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[9]]);
    });
    service.decline('aarre').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[10]]);
    });
    service.decline('lahje').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[11]]);
    });
  }));

  it('should decline type 49 (askel)', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('askel');
    declesions[0].singular.genitive.push('askelen');
    declesions[0].singular.partitive.push('askelta');
    declesions[0].singular.nominativeAccusative.push('askel');
    declesions[0].singular.genitiveAccusative.push('askelen');
    declesions[0].singular.inessive.push('askelessa');
    declesions[0].singular.elative.push('askelesta');
    declesions[0].singular.illative.push('askeleen');
    declesions[0].singular.adessive.push('askelella');
    declesions[0].singular.ablative.push('askelelta');
    declesions[0].singular.allative.push('askelelle');
    declesions[0].singular.essive.push('askelena');
    declesions[0].singular.translative.push('askeleksi');
    declesions[0].singular.abessive.push('askeletta');
    declesions[0].plural.nominative.push('askelet');
    declesions[0].plural.genitive = ['askelien', 'askelten'].sort();
    declesions[0].plural.partitive.push('askelia');
    declesions[0].plural.nominativeAccusative.push('askelet');
    declesions[0].plural.inessive.push('askelissa');
    declesions[0].plural.elative.push('askelista');
    declesions[0].plural.illative.push('askeliin');
    declesions[0].plural.adessive.push('askelilla');
    declesions[0].plural.ablative.push('askelilta');
    declesions[0].plural.allative.push('askelille');
    declesions[0].plural.essive.push('askelina');
    declesions[0].plural.translative.push('askeliksi');
    declesions[0].plural.instructive.push('askelin');
    declesions[0].plural.abessive.push('askelitta');
    declesions[0].plural.comitative.push('askelineen');
    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('askele');
    declesions[1].singular.genitive.push('askeleen');
    declesions[1].singular.partitive.push('askeletta');
    declesions[1].singular.nominativeAccusative.push('askele');
    declesions[1].singular.genitiveAccusative.push('askeleen');
    declesions[1].singular.inessive.push('askeleessa');
    declesions[1].singular.elative.push('askeleesta');
    declesions[1].singular.illative.push('askeleeseen');
    declesions[1].singular.adessive.push('askeleella');
    declesions[1].singular.ablative.push('askeleelta');
    declesions[1].singular.allative.push('askeleelle');
    declesions[1].singular.essive.push('askeleena');
    declesions[1].singular.translative.push('askeleeksi');
    declesions[1].singular.abessive.push('askeleetta');
    declesions[1].plural.nominative.push('askeleet');
    declesions[1].plural.genitive = ['askeleiden', 'askeleitten'].sort();
    declesions[1].plural.partitive.push('askeleita');
    declesions[1].plural.nominativeAccusative.push('askeleet');
    declesions[1].plural.inessive.push('askeleissa');
    declesions[1].plural.elative.push('askeleista');
    declesions[1].plural.illative = ['askeleisiin', 'askeleihin'].sort();
    declesions[1].plural.adessive.push('askeleilla');
    declesions[1].plural.ablative.push('askeleilta');
    declesions[1].plural.allative.push('askeleille');
    declesions[1].plural.essive.push('askeleina');
    declesions[1].plural.translative.push('askeleiksi');
    declesions[1].plural.instructive.push('askelein');
    declesions[1].plural.abessive.push('askeleitta');
    declesions[1].plural.comitative.push('askeleineen');

    service.decline('askel').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('askele').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
  }));

  it('should decline nominals ending in -toista', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('kaksitoista');
    declesions[0].singular.genitive.push('kahdentoista');
    declesions[0].singular.partitive.push('kahtatoista');
    declesions[0].singular.nominativeAccusative.push('kaksitoista');
    declesions[0].singular.genitiveAccusative.push('kahdentoista');
    declesions[0].singular.inessive.push('kahdessatoista');
    declesions[0].singular.elative.push('kahdestatoista');
    declesions[0].singular.illative.push('kahteentoista');
    declesions[0].singular.adessive.push('kahdellatoista');
    declesions[0].singular.ablative.push('kahdeltatoista');
    declesions[0].singular.allative.push('kahdelletoista');
    declesions[0].singular.essive.push('kahtenatoista');
    declesions[0].singular.translative.push('kahdeksitoista');
    declesions[0].singular.abessive.push('kahdettatoista');
    declesions[0].plural.nominative.push('kahdettoista');
    declesions[0].plural.genitive.push('kaksientoista');
    declesions[0].plural.partitive.push('kaksiatoista');
    declesions[0].plural.nominativeAccusative.push('kahdettoista');
    declesions[0].plural.inessive.push('kaksissatoista');
    declesions[0].plural.elative.push('kaksistatoista');
    declesions[0].plural.illative.push('kaksiintoista');
    declesions[0].plural.adessive.push('kaksillatoista');
    declesions[0].plural.ablative.push('kaksiltatoista');
    declesions[0].plural.allative.push('kaksilletoista');
    declesions[0].plural.essive.push('kaksinatoista');
    declesions[0].plural.translative.push('kaksiksitoista');
    declesions[0].plural.instructive.push('kaksintoista');
    declesions[0].plural.abessive.push('kaksittatoista');
    declesions[0].plural.comitative.push('kaksinetoista');

    service.decline('kaksitoista').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
  }));

  it('should decline compound nominals formed by nominals with different vowel harmony', inject([DeclesionService], (service: DeclesionService) => {
    let declesions: Declesion[] = [];
    declesions.push(new Declesion());
    declesions[0].singular.nominative.push('isoäiti');
    declesions[0].singular.genitive.push('isoäidin');
    declesions[0].singular.partitive.push('isoäitiä');
    declesions[0].singular.nominativeAccusative.push('isoäiti');
    declesions[0].singular.genitiveAccusative.push('isoäidin');
    declesions[0].singular.inessive.push('isoäidissä');
    declesions[0].singular.elative.push('isoäidistä');
    declesions[0].singular.illative.push('isoäitiin');
    declesions[0].singular.adessive.push('isoäidillä');
    declesions[0].singular.ablative.push('isoäidiltä');
    declesions[0].singular.allative.push('isoäidille');
    declesions[0].singular.essive.push('isoäitinä');
    declesions[0].singular.translative.push('isoäidiksi');
    declesions[0].singular.abessive.push('isoäidittä');
    declesions[0].plural.nominative.push('isoäidit');
    declesions[0].plural.genitive.push('isoäitien');
    declesions[0].plural.partitive.push('isoäitejä');
    declesions[0].plural.nominativeAccusative.push('isoäidit');
    declesions[0].plural.inessive.push('isoäideissä');
    declesions[0].plural.elative.push('isoäideistä');
    declesions[0].plural.illative.push('isoäiteihin');
    declesions[0].plural.adessive.push('isoäideillä');
    declesions[0].plural.ablative.push('isoäideiltä');
    declesions[0].plural.allative.push('isoäideille');
    declesions[0].plural.essive.push('isoäiteinä');
    declesions[0].plural.translative.push('isoäideiksi');
    declesions[0].plural.instructive.push('isoäidein');
    declesions[0].plural.abessive.push('isoäideittä');
    declesions[0].plural.comitative.push('isoäiteineen');

    declesions.push(new Declesion());
    declesions[1].singular.nominative.push('yliopisto');
    declesions[1].singular.genitive.push('yliopiston');
    declesions[1].singular.partitive.push('yliopistoa');
    declesions[1].singular.nominativeAccusative.push('yliopisto');
    declesions[1].singular.genitiveAccusative.push('yliopiston');
    declesions[1].singular.inessive.push('yliopistossa');
    declesions[1].singular.elative.push('yliopistosta');
    declesions[1].singular.illative.push('yliopistoon');
    declesions[1].singular.adessive.push('yliopistolla');
    declesions[1].singular.ablative.push('yliopistolta');
    declesions[1].singular.allative.push('yliopistolle');
    declesions[1].singular.essive.push('yliopistona');
    declesions[1].singular.translative.push('yliopistoksi');
    declesions[1].singular.abessive.push('yliopistotta');
    declesions[1].plural.nominative.push('yliopistot');
    declesions[1].plural.genitive = ['yliopistojen', 'yliopistoiden', 'yliopistoitten'].sort();
    declesions[1].plural.partitive = ['yliopistoja', 'yliopistoita'].sort();
    declesions[1].plural.nominativeAccusative.push('yliopistot');
    declesions[1].plural.inessive.push('yliopistoissa');
    declesions[1].plural.elative.push('yliopistoista');
    declesions[1].plural.illative.push('yliopistoihin');
    declesions[1].plural.adessive.push('yliopistoilla');
    declesions[1].plural.ablative.push('yliopistoilta');
    declesions[1].plural.allative.push('yliopistoille');
    declesions[1].plural.essive.push('yliopistoina');
    declesions[1].plural.translative.push('yliopistoiksi');
    declesions[1].plural.instructive.push('yliopistoin');
    declesions[1].plural.abessive.push('yliopistoitta');
    declesions[1].plural.comitative.push('yliopistoineen');

    service.decline('isoäiti').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[0]]);
    });
    service.decline('yliopisto').subscribe((serviceDeclesions) => {
      expect(serviceDeclesions).toEqual([declesions[1]]);
    });
  }));

  it('should fail when word doesn\'t exist', inject([DeclesionService], (service: DeclesionService) => {
    service.decline('aaaaaaaa').subscribe(() => {
      fail('it shouldn\'t work');
    }, (code) => {
      expect(code.errorCode).toBe(0);
    })
  }));

  it('should fail when word is null or undefined', inject([DeclesionService], (service: DeclesionService) => {
    service.decline(null).subscribe(() => {
      fail('it shouldn\'t work');
    }, (code) => {
      expect(code.errorCode).toBe(1);
    })
  }));
});
